[
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1569, 
        "numberRunning": 1570, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/176912167", 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "detail": "Could not find creator property with name 'intField' (in class com.fasterxml.jackson.databind.creators.Creator1476Test$SimplePojo)\n at [Source: { \"intField\": 1, \"stringField\": \"foo\" }; line: 1, column: 1]", 
          "isError": true, 
          "testMethod": "testConstructorChoice", 
          "testClass": "com.fasterxml.jackson.databind.creators.Creator1476Test"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.creators.Creator1476Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190405643", 
        "date": "Jan 9, 2017 10:46:51 PM", 
        "id": 190405643
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/176912167", 
        "date": "Nov 18, 2016 4:09:26 AM", 
        "id": 176912167
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d44600d3750e5dba9fac68aee7248ed2a80a2225", 
        "sha": "d44600d3750e5dba9fac68aee7248ed2a80a2225", 
        "branchName": "2.7", 
        "date": "Jan 9, 2017 10:42:27 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/002a9a3e9b98ebebf53e43aed0536d3c50851c84", 
        "sha": "002a9a3e9b98ebebf53e43aed0536d3c50851c84", 
        "branchName": "2.7", 
        "date": "Nov 18, 2016 4:05:35 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-176912167-190405643", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 30, 
        "numberDeleted": 24
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_1", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\nindex 8e38f5d..a530e4b 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java\n@@ -162,36 +162,39 @@ public class CreatorCollector\n             SettableBeanProperty[] injectables)\n     {\n         if (creator.getParameterType(0).isCollectionLikeType()) {\n-            verifyNonDup(creator, C_ARRAY_DELEGATE, explicit);\n-            _arrayDelegateArgs = injectables;\n+            if (verifyNonDup(creator, C_ARRAY_DELEGATE, explicit)) {\n+                _arrayDelegateArgs = injectables;\n+            }\n         } else {\n-            verifyNonDup(creator, C_DELEGATE, explicit);\n-            _delegateArgs = injectables;\n+            if (verifyNonDup(creator, C_DELEGATE, explicit)) {\n+                _delegateArgs = injectables;\n+            }\n         }\n     }\n     \n     public void addPropertyCreator(AnnotatedWithParams creator, boolean explicit,\n             SettableBeanProperty[] properties)\n     {\n-        verifyNonDup(creator, C_PROPS, explicit);\n-        // Better ensure we have no duplicate names either...\n-        if (properties.length > 1) {\n-            HashMap<String,Integer> names = new HashMap<String,Integer>();\n-            for (int i = 0, len = properties.length; i < len; ++i) {\n-                String name = properties[i].getName();\n-                /* [Issue-13]: Need to consider Injectables, which may not have\n-                 *   a name at all, and need to be skipped\n-                 */\n-                if (name.length() == 0 && properties[i].getInjectableValueId() != null) {\n-                    continue;\n-                }\n-                Integer old = names.put(name, Integer.valueOf(i));\n-                if (old != null) {\n-                    throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");\n+        if (verifyNonDup(creator, C_PROPS, explicit)) {\n+            // Better ensure we have no duplicate names either...\n+            if (properties.length > 1) {\n+                HashMap<String,Integer> names = new HashMap<String,Integer>();\n+                for (int i = 0, len = properties.length; i < len; ++i) {\n+                    String name = properties[i].getName();\n+                    /* [Issue-13]: Need to consider Injectables, which may not have\n+                     *   a name at all, and need to be skipped\n+                     */\n+                    if (name.length() == 0 && properties[i].getInjectableValueId() != null) {\n+                        continue;\n+                    }\n+                    Integer old = names.put(name, Integer.valueOf(i));\n+                    if (old != null) {\n+                        throw new IllegalArgumentException(\"Duplicate creator property \\\"\"+name+\"\\\" (index \"+old+\" vs \"+i+\")\");\n+                    }\n                 }\n             }\n+            _propertyBasedArgs = properties;\n         }\n-        _propertyBasedArgs = properties;\n     }\n \n     public void addIncompeteParameter(AnnotatedParameter parameter) {\n@@ -293,7 +296,10 @@ public class CreatorCollector\n         return member;\n     }\n \n-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n+    /**\n+     * @return True if specified Creator is to be used\n+     */\n+    protected boolean verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n     {\n         final int mask = (1 << typeIndex);\n         _hasNonDefaultCreator = true;\n@@ -301,11 +307,10 @@ public class CreatorCollector\n         // already had an explicitly marked one?\n         if (oldOne != null) {\n             boolean verify;\n-\n             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is\n                 // but skip, if new one not annotated\n                 if (!explicit) {\n-                    return;\n+                    return false;\n                 }\n                 // both explicit: verify\n                 verify = true;\n@@ -327,7 +332,7 @@ public class CreatorCollector\n                 // otherwise, which one to choose?\n                 if (newType.isAssignableFrom(oldType)) {\n                     // new type more generic, use old\n-                    return;\n+                    return false;\n                 }\n                 // new type more specific, use it\n             }\n@@ -336,6 +341,7 @@ public class CreatorCollector\n             _explicitCreators |= mask;\n         }\n         _creators[typeIndex] = _fixAccess(newOne);\n+        return true;\n     }\n \n     /*\n", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 362, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 172426376, 
        "hostName": "local", 
        "totalMemory": 396886016, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:44:09 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/176912167/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            51
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 51
        }, 
        "testing": {
          "stepDurations": [
            31
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 31
        }, 
        "cloning": {
          "stepDurations": [
            57
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 57
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:41:02 PM", 
      "totalDuration": 181
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1570, 
        "numberRunning": 1571, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/190405643", 
      "failingClasses": [
        {
          "numberPassing": 30, 
          "numberRunning": 31, 
          "testClass": "com.fasterxml.jackson.databind.deser.TestMapDeserialization", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "testMethod": "testcharSequenceKeyMap", 
          "testClass": "com.fasterxml.jackson.databind.deser.TestMapDeserialization", 
          "detail": "Can not find a (Map) Key deserializer for type [simple type, class java.lang.CharSequence]\n at [Source: {\"a\":\"b\"}; line: 1, column: 1]", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195044059", 
        "date": "Jan 25, 2017 4:02:17 AM", 
        "id": 195044059
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190405643", 
        "date": "Jan 9, 2017 10:46:51 PM", 
        "id": 190405643
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/23a733207bc88a06ee486a5896b7b0c4ebbbfef4", 
        "sha": "23a733207bc88a06ee486a5896b7b0c4ebbbfef4", 
        "branchName": "2.7", 
        "date": "Jan 25, 2017 3:58:19 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d44600d3750e5dba9fac68aee7248ed2a80a2225", 
        "sha": "d44600d3750e5dba9fac68aee7248ed2a80a2225", 
        "branchName": "2.7", 
        "date": "Jan 9, 2017 10:42:27 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-190405643-195044059", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 362, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_2", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\nindex d95749a..8bddce4 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java\n@@ -72,7 +72,7 @@ public class StdKeyDeserializer extends KeyDeserializer\n         int kind;\n \n         // first common types:\n-        if (raw == String.class || raw == Object.class) {\n+        if (raw == String.class || raw == Object.class || raw == CharSequence.class) {\n             return StringKD.forType(raw);\n         } else if (raw == UUID.class) {\n             kind = TYPE_UUID;\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 201092024, 
        "hostName": "local", 
        "totalMemory": 363331584, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:36:31 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/190405643/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            49
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 49
        }, 
        "testing": {
          "stepDurations": [
            36
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 36
        }, 
        "cloning": {
          "stepDurations": [
            54
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 54
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:32:50 PM", 
      "totalDuration": 214
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1680, 
        "numberRunning": 1681, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.util.NoSuchElementException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/190406891", 
      "failureDetails": [
        {
          "failureName": "java.util.NoSuchElementException", 
          "detail": "No entry 'businessAddress' found, can't remove", 
          "isError": true, 
          "testMethod": "testCaseInsensitiveUnwrap", 
          "testClass": "com.fasterxml.jackson.databind.struct.TestUnwrapped"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "com.fasterxml.jackson.databind.struct.TestUnwrapped", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190505536", 
        "date": "Jan 10, 2017 6:42:40 AM", 
        "id": 190505536
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/190406891", 
        "date": "Jan 9, 2017 10:50:43 PM", 
        "id": 190406891
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d7155de6c37db3301b92b755bd0a02388f7dd07f", 
        "sha": "d7155de6c37db3301b92b755bd0a02388f7dd07f", 
        "branchName": "2.8", 
        "date": "Jan 10, 2017 6:38:36 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/7fe2d4f1aaab61e41f31f792f8a988157a34b34c", 
        "sha": "7fe2d4f1aaab61e41f31f792f8a988157a34b34c", 
        "branchName": "2.8", 
        "date": "Jan 9, 2017 10:45:35 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-190406891-190505536", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_3", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\nindex fd30aaf..8031ee0 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java\n@@ -92,7 +92,7 @@ public class BeanPropertyMap\n     protected void init(Collection<SettableBeanProperty> props)\n     {\n         _size = props.size();\n-        \n+\n         // First: calculate size of primary hash area\n         final int hashSize = findSize(_size);\n         _hashMask = hashSize-1;\n@@ -423,7 +423,8 @@ System.err.println(\"And new propr #\"+slot+\" '\"+key+\"'\");\n      * Specialized method for removing specified existing entry.\n      * NOTE: entry MUST exist, otherwise an exception is thrown.\n      */\n-    public void remove(SettableBeanProperty propToRm) {\n+    public void remove(SettableBeanProperty propToRm)\n+    {\n         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n         String key = getPropertyName(propToRm);\n         boolean found = false;\n@@ -434,7 +435,9 @@ System.err.println(\"And new propr #\"+slot+\" '\"+key+\"'\");\n                 continue;\n             }\n             if (!found) {\n-                found = key.equals(prop.getName());\n+                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,\n+                //   as only former is lower-case in case-insensitive case\n+                found = key.equals(_hashArea[i-1]);\n                 if (found) {\n                     // need to leave a hole here\n                     _propsInOrder[_findFromOrdered(prop)] = null;\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 382, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 129327328, 
        "hostName": "local", 
        "totalMemory": 364380160, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:40:49 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/190406891/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            43
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 43
        }, 
        "testing": {
          "stepDurations": [
            29
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 29
        }, 
        "cloning": {
          "stepDurations": [
            48
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 48
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:37:52 PM", 
      "totalDuration": 172
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1571, 
        "numberRunning": 1572, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IllegalStateException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195066764", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.creators.InnerClassCreatorTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalStateException", 
          "testMethod": "testIssue1501", 
          "testClass": "com.fasterxml.jackson.databind.creators.InnerClassCreatorTest", 
          "detail": "Internal error: no creator index for property 'a' (of type com.fasterxml.jackson.databind.deser.impl.InnerClassProperty)", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195069327", 
        "date": "Jan 25, 2017 6:45:52 AM", 
        "id": 195069327
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195066764", 
        "date": "Jan 25, 2017 6:27:41 AM", 
        "id": 195066764
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/63afa5297a0b8bcbf31b9c91e5d15537e0fdbdd5", 
        "sha": "63afa5297a0b8bcbf31b9c91e5d15537e0fdbdd5", 
        "branchName": "2.7", 
        "date": "Jan 25, 2017 6:41:59 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d3874ebf3c0585270f1fe33eb7030667bacb63b7", 
        "sha": "d3874ebf3c0585270f1fe33eb7030667bacb63b7", 
        "branchName": "2.7", 
        "date": "Jan 25, 2017 6:23:43 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-195066764-195069327", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 363, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 9
      }
    }, 
    "bugId": "Bears_4", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java\nindex 311802e..4a9ca99 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java\n@@ -83,6 +83,15 @@ public final class InnerClassProperty\n     public InnerClassProperty withValueDeserializer(JsonDeserializer<?> deser) {\n         return new InnerClassProperty(this, deser);\n     }\n+\n+    @Override\n+    public void assignIndex(int index) { _delegate.assignIndex(index); }\n+\n+    @Override\n+    public int getPropertyIndex() { return _delegate.getPropertyIndex(); }\n+\n+    @Override\n+    public int getCreatorIndex() { return _delegate.getCreatorIndex(); }\n     \n     // // // BeanProperty impl\n     \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146485848, 
        "hostName": "local", 
        "totalMemory": 358612992, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:31:33 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195066764/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            49
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 49
        }, 
        "testing": {
          "stepDurations": [
            39
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 39
        }, 
        "cloning": {
          "stepDurations": [
            49
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 49
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:28:02 PM", 
      "totalDuration": 205
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1571, 
        "numberRunning": 1572, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195430379", 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "detail": "No _idValue when handleIdValue called, on instance of com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest$A\n at [Source: {\"id\":\"123\",\"name\":\"A\"}; line: 1, column: 23]", 
          "isError": true, 
          "testMethod": "testObjectIdWithCreator", 
          "testClass": "com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.creators.CreatorWithObjectIdTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/198387397", 
        "date": "Feb 4, 2017 7:57:01 PM", 
        "id": 198387397
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195430379", 
        "date": "Jan 26, 2017 6:16:10 AM", 
        "id": 195430379
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/04cb1a27e0fe60fe9bab64dfe7f36b3f7649ba0c", 
        "sha": "04cb1a27e0fe60fe9bab64dfe7f36b3f7649ba0c", 
        "branchName": "2.7", 
        "date": "Feb 4, 2017 7:52:58 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/16d77253d2ba0ed293a12013e459d56420a7d056", 
        "sha": "16d77253d2ba0ed293a12013e459d56420a7d056", 
        "branchName": "2.7", 
        "date": "Jan 26, 2017 6:12:01 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-195430379-198387397", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_5", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\nindex 0e2b874..d0ebaba 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializer.java\n@@ -373,6 +373,10 @@ public class BeanDeserializer\n         for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n             String propName = p.getCurrentName();\n             p.nextToken(); // to point to value\n+            // Object Id property?\n+            if (buffer.readIdProperty(propName)) {\n+                continue;\n+            }\n             // creator property?\n             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n             if (creatorProp != null) {\n@@ -405,10 +409,6 @@ public class BeanDeserializer\n                 }\n                 continue;\n             }\n-            // Object Id property?\n-            if (buffer.readIdProperty(propName)) {\n-                continue;\n-            }\n             // regular property? needs buffering\n             SettableBeanProperty prop = _beanProperties.find(propName);\n             if (prop != null) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 364, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 230270312, 
        "hostName": "local", 
        "totalMemory": 353894400, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:37:09 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195430379/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            49
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 49
        }, 
        "testing": {
          "stepDurations": [
            41
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 41
        }, 
        "cloning": {
          "stepDurations": [
            51
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 51
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:33:23 AM", 
      "totalDuration": 219
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1686, 
        "numberRunning": 1688, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195646489", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException", 
          "testMethod": "testReadOnly935", 
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest", 
          "detail": "Unrecognized field \"fullName\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Pojo935), not marked as ignorable (2 known properties: \"lastName\", \"firstName\"])\n at [Source: {\"firstName\":\"Foo\",\"lastName\":\"Bar\",\"fullName\":\"Foo Bar\"}; line: 1, column: 49] (through reference chain: com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Pojo935[\"fullName\"])", 
          "isError": true
        }, 
        {
          "failureName": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException", 
          "testMethod": "testReadOnlyAndWriteOnly", 
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest", 
          "detail": "Unrecognized field \"x\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$ReadXWriteY), not marked as ignorable (one known property: \"y\"])\n at [Source: {\"x\":5, \"y\":6}; line: 1, column: 7] (through reference chain: com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$ReadXWriteY[\"x\"])", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195752461", 
        "date": "Jan 27, 2017 4:16:49 AM", 
        "id": 195752461
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195646489", 
        "date": "Jan 26, 2017 8:42:57 PM", 
        "id": 195646489
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4d34006e4d8a566c6c64a3a0e04c17e50d63bb82", 
        "sha": "4d34006e4d8a566c6c64a3a0e04c17e50d63bb82", 
        "branchName": "2.8", 
        "date": "Jan 27, 2017 4:12:29 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/2bb770bcd4cbc0c0c3ede86cedd4a602e328e2f6", 
        "sha": "2bb770bcd4cbc0c0c3ede86cedd4a602e328e2f6", 
        "branchName": "2.8", 
        "date": "Jan 26, 2017 8:38:42 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-195646489-195752461", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 384, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_6", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\nindex f542d84..fd6a613 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java\n@@ -4,6 +4,7 @@ import java.lang.reflect.Modifier;\n import java.util.*;\n \n import com.fasterxml.jackson.annotation.JsonAnySetter;\n+import com.fasterxml.jackson.annotation.JsonProperty.Access;\n import com.fasterxml.jackson.databind.*;\n import com.fasterxml.jackson.databind.cfg.HandlerInstantiator;\n import com.fasterxml.jackson.databind.cfg.MapperConfig;\n@@ -727,10 +728,14 @@ public class POJOPropertiesCollector\n \n         while (it.hasNext()) {\n             POJOPropertyBuilder prop = it.next();\n-            prop.removeNonVisible(inferMutators);\n+            // 26-Jan-2017, tatu: [databind#935]: need to denote removal of\n+            Access acc = prop.removeNonVisible(inferMutators);\n+            if (!_forSerialization && (acc == Access.READ_ONLY)) {\n+                _collectIgnorals(prop.getName());\n+            }\n         }\n     }\n-        \n+\n     /**\n      * Helper method called to add explicitly ignored properties to a list\n      * of known ignored properties; this helps in proper reporting of\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\nindex 954f5dd..b9a403c 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java\n@@ -641,7 +641,7 @@ public class POJOPropertyBuilder\n      * @param inferMutators Whether mutators can be \"pulled in\" by visible\n      *    accessors or not. \n      */\n-    public void removeNonVisible(boolean inferMutators)\n+    public JsonProperty.Access removeNonVisible(boolean inferMutators)\n     {\n         /* 07-Jun-2015, tatu: With 2.6, we will allow optional definition\n          *  of explicit access type for property; if not \"AUTO\", it will\n@@ -680,6 +680,7 @@ public class POJOPropertyBuilder\n                 _setters = _removeNonVisible(_setters);\n             }\n         }\n+        return acc;\n     }\n \n     /**\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 162681048, 
        "hostName": "local", 
        "totalMemory": 358088704, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:21:13 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195646489/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            54
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 54
        }, 
        "testing": {
          "stepDurations": [
            41
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 41
        }, 
        "cloning": {
          "stepDurations": [
            57
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 57
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:17:46 PM", 
      "totalDuration": 201
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1690, 
        "numberRunning": 1692, 
        "numberFailing": 1, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/195752461", 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "detail": "Expected an exception with one of substrings ([value not one of declared Enum]): got one with message \"Can not deserialize value of type com.fasterxml.jackson.databind.deser.EnumDeserializationTest$TestEnum from number 1: not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\n at [Source: \"1\"; line: 1, column: 1]\"", 
          "isError": false, 
          "testMethod": "testNumbersToEnums", 
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDeserializationTest"
        }, 
        {
          "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException", 
          "detail": "Can not deserialize value of type com.fasterxml.jackson.databind.deser.EnumDefaultReadTest$SimpleEnumWithDefault from number 0: not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\n at [Source: \"0\"; line: 1, column: 1]", 
          "isError": true, 
          "testMethod": "testWithFailOnNumbersAndReadUnknownAsDefault", 
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDefaultReadTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 27, 
          "numberRunning": 28, 
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDeserializationTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "com.fasterxml.jackson.databind.deser.EnumDefaultReadTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195777970", 
        "date": "Jan 27, 2017 7:43:20 AM", 
        "id": 195777970
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/195752461", 
        "date": "Jan 27, 2017 4:16:49 AM", 
        "id": 195752461
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ff441e82825ea48d28baee6ae7f0f705ff421def", 
        "sha": "ff441e82825ea48d28baee6ae7f0f705ff421def", 
        "branchName": "2.8", 
        "date": "Jan 27, 2017 7:39:00 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4d34006e4d8a566c6c64a3a0e04c17e50d63bb82", 
        "sha": "4d34006e4d8a566c6c64a3a0e04c17e50d63bb82", 
        "branchName": "2.8", 
        "date": "Jan 27, 2017 4:12:29 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-195752461-195777970", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_7", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\nindex 679c417..3c65723 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n@@ -167,17 +167,12 @@ public class EnumDeserializer\n             if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n                 return null;\n             }\n-        } else {\n-            // [databind#149]: Allow use of 'String' indexes as well\n+        } else if (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n+            // [databind#149]: Allow use of 'String' indexes as well -- unless prohibited (as per above)\n             char c = name.charAt(0);\n             if (c >= '0' && c <= '9') {\n                 try {\n                     int index = Integer.parseInt(name);\n-                    if (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n-                        return ctxt.handleWeirdNumberValue(_enumClass(), index,\n-                                \"not allowed to deserialize Enum value out of number: disable DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS to allow\"\n-                                );\n-                    }\n                     if (index >= 0 && index < _enumsByIndex.length) {\n                         return _enumsByIndex[index];\n                     }\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 385, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146750432, 
        "hostName": "local", 
        "totalMemory": 337117184, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:20:25 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/195752461/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            42
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 42
        }, 
        "testing": {
          "stepDurations": [
            30
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 30
        }, 
        "cloning": {
          "stepDurations": [
            59
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 59
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:16:48 PM", 
      "totalDuration": 210
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1693, 
        "numberRunning": 1694, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/203042777", 
      "failingClasses": [
        {
          "numberPassing": 13, 
          "numberRunning": 14, 
          "testClass": "com.fasterxml.jackson.databind.ser.TestMapSerialization", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "testMethod": "testConcurrentMaps", 
          "testClass": "com.fasterxml.jackson.databind.ser.TestMapSerialization", 
          "detail": "[no message for java.lang.NullPointerException]", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203306015", 
        "date": "Feb 20, 2017 3:55:22 AM", 
        "id": 203306015
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203042777", 
        "date": "Feb 19, 2017 12:18:29 AM", 
        "id": 203042777
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/64967c410514ec8a94bb11bb26d6a37fafafc14b", 
        "sha": "64967c410514ec8a94bb11bb26d6a37fafafc14b", 
        "branchName": "2.8", 
        "date": "Feb 20, 2017 3:47:15 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/dc02ceac1c3d0939ddf8692f62be52da0e1a242b", 
        "sha": "dc02ceac1c3d0939ddf8692f62be52da0e1a242b", 
        "branchName": "2.8", 
        "date": "Feb 19, 2017 12:14:01 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-203042777-203306015", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 385, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 17
      }
    }, 
    "bugId": "Bears_8", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\nindex dbba25d..a3af8cc 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java\n@@ -952,7 +952,9 @@ public class MapSerializer\n         }\n         // [databind#1411]: TreeMap does not like null key... (although note that\n         //   check above should prevent this code from being called in that case)\n-        if (input.containsKey(null)) {\n+        // [databind#153]: but, apparently, some custom Maps do manage hit this\n+        //   problem.\n+        if (_hasNullKey(input)) {\n             TreeMap<Object,Object> result = new TreeMap<Object,Object>();\n             for (Map.Entry<?,?> entry : input.entrySet()) {\n                 Object key = entry.getKey();\n@@ -967,6 +969,22 @@ public class MapSerializer\n         return new TreeMap<Object,Object>(input);\n     }\n \n+    /**\n+     * @since 2.8.7\n+     */\n+    protected boolean _hasNullKey(Map<?,?> input) {\n+        // 19-Feb-2017, tatu: As per [databind#1513] there are many cases where `null`\n+        //   keys are not allowed, and even attempt to check for presence can cause\n+        //   problems. Without resorting to external sorting (and internal API change),\n+        //   or custom sortable Map implementation (more code) we can try black- or\n+        //   white-listing (that is; either skip known problem cases; or only apply for\n+        //   known good cases).\n+        //   While my first instinct was to do black-listing (remove Hashtable and ConcurrentHashMap),\n+        //   all in all it is probably better to just white list `HashMap` (and its sub-classes).\n+        \n+        return (input instanceof HashMap) && input.containsKey(null);\n+    }\n+    \n     protected void _writeNullKeyedEntry(JsonGenerator gen, SerializerProvider provider,\n             Object suppressableValue, Object value) throws IOException\n     {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 249634072, 
        "hostName": "local", 
        "totalMemory": 340787200, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:31:00 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/203042777/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            48
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 48
        }, 
        "testing": {
          "stepDurations": [
            41
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 41
        }, 
        "cloning": {
          "stepDurations": [
            45
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 45
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:27:44 AM", 
      "totalDuration": 190
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1695, 
        "numberRunning": 1696, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/203649003", 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "detail": "Unexpected token (VALUE_STRING), expected FIELD_NAME: missing property 'type' that is to contain type id  (for class com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$AsProperty)\n at [Source: { \"value\": \"\" }; line: 1, column: 12] (through reference chain: com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$AsPropertyWrapper[\"value\"])", 
          "isError": true, 
          "testMethod": "testWithEmptyStringAsNullObject1533", 
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 12, 
          "numberRunning": 13, 
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/204682356", 
        "date": "Feb 23, 2017 7:04:53 PM", 
        "id": 204682356
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/203649003", 
        "date": "Feb 21, 2017 2:22:54 AM", 
        "id": 203649003
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/10d5ab37f06f7925bf959312bfb6211f5bc4a1cb", 
        "sha": "10d5ab37f06f7925bf959312bfb6211f5bc4a1cb", 
        "branchName": "2.8", 
        "date": "Feb 23, 2017 7:00:47 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ce37efcefbfab0fa91562a492f0f80af018a5313", 
        "sha": "ce37efcefbfab0fa91562a492f0f80af018a5313", 
        "branchName": "2.8", 
        "date": "Feb 21, 2017 2:06:13 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-203649003-204682356", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 7
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_9", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\nindex d1d096a..7941e05 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java\n@@ -153,6 +153,13 @@ public class AsPropertyTypeDeserializer extends AsArrayTypeDeserializer\n         // or, something for which \"as-property\" won't work, changed into \"wrapper-array\" type:\n         if (p.getCurrentToken() == JsonToken.START_ARRAY) {\n             return super.deserializeTypedFromAny(p, ctxt);\n+        } else if (p.getCurrentToken() == JsonToken.VALUE_STRING) {\n+            if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n+                String str = p.getText().trim();\n+                if (str.isEmpty()) {\n+                    return null;\n+                }\n+            }\n         }\n         ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,\n                 \"missing property '\"+_typePropertyName+\"' that is to contain type id  (for class \"+baseTypeName()+\")\");\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 385, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 266944648, 
        "hostName": "local", 
        "totalMemory": 354942976, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:27:40 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/203649003/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            52
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 52
        }, 
        "testing": {
          "stepDurations": [
            33
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 33
        }, 
        "cloning": {
          "stepDurations": [
            47
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 47
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:24:31 AM", 
      "totalDuration": 183
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1704, 
        "numberRunning": 1705, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/214497429", 
      "failingClasses": [
        {
          "numberPassing": 7, 
          "numberRunning": 8, 
          "testClass": "com.fasterxml.jackson.databind.struct.EmptyArrayAsNullTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "testMethod": "testNullEnumFromEmptyArray", 
          "testClass": "com.fasterxml.jackson.databind.struct.EmptyArrayAsNullTest", 
          "detail": "Can not deserialize instance of com.fasterxml.jackson.databind.BaseMapTest$ABC out of START_ARRAY token\n at [Source:   [\n]; line: 1, column: 3]", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/214500046", 
        "date": "Mar 24, 2017 3:32:01 AM", 
        "id": 214500046
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/214497429", 
        "date": "Mar 24, 2017 3:16:36 AM", 
        "id": 214497429
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/b96a3b55d4c28171cb92bd2cafff853ea973d36f", 
        "sha": "b96a3b55d4c28171cb92bd2cafff853ea973d36f", 
        "branchName": "2.8", 
        "date": "Mar 24, 2017 3:27:28 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/23d49e359217fad7b6f316fb31a7196ee4aed1b3", 
        "sha": "23d49e359217fad7b6f316fb31a7196ee4aed1b3", 
        "branchName": "2.8", 
        "date": "Mar 24, 2017 3:12:17 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-214497429-214500046", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 387, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 10, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_10", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\nindex 3c65723..c3ad93e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/EnumDeserializer.java\n@@ -165,7 +165,7 @@ public class EnumDeserializer\n         name = name.trim();\n         if (name.length() == 0) {\n             if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {\n-                return null;\n+                return getEmptyValue(ctxt);\n             }\n         } else if (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS)) {\n             // [databind#149]: Allow use of 'String' indexes as well -- unless prohibited (as per above)\n@@ -195,15 +195,8 @@ public class EnumDeserializer\n     protected Object _deserializeOther(JsonParser p, DeserializationContext ctxt) throws IOException\n     {\n         // [databind#381]\n-        if (ctxt.isEnabled(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS)\n-                && p.isExpectedStartArrayToken()) {\n-            p.nextToken();\n-            final Object parsed = deserialize(p, ctxt);\n-            JsonToken curr = p.nextToken();\n-            if (curr != JsonToken.END_ARRAY) {\n-                handleMissingEndArrayForSingle(p, ctxt);\n-            }\n-            return parsed;\n+        if (p.hasToken(JsonToken.START_ARRAY)) {\n+            return _deserializeFromArray(p, ctxt);\n         }\n         return ctxt.handleUnexpectedToken(_enumClass(), p);\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 170433536, 
        "hostName": "local", 
        "totalMemory": 339214336, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:13:36 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/214497429/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            54
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 54
        }, 
        "testing": {
          "stepDurations": [
            39
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 39
        }, 
        "cloning": {
          "stepDurations": [
            52
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 52
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:09:40 AM", 
      "totalDuration": 229
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1705, 
        "numberRunning": 1706, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/215036598", 
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "detail": "expected:<{\"map\":{\"[1]\":3}}> but was:<{\"map\":{\"[B]\":3}}>", 
          "isError": false, 
          "testMethod": "testMapWithEnumKeys", 
          "testClass": "com.fasterxml.jackson.databind.ser.TestEnumSerialization"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 22, 
          "numberRunning": 23, 
          "testClass": "com.fasterxml.jackson.databind.ser.TestEnumSerialization", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215111320", 
        "date": "Mar 26, 2017 1:37:59 AM", 
        "id": 215111320
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215036598", 
        "date": "Mar 25, 2017 7:52:45 PM", 
        "id": 215036598
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/934f485d4c62854dd2ef48ed7ebb238f3abec0b7", 
        "sha": "934f485d4c62854dd2ef48ed7ebb238f3abec0b7", 
        "branchName": "2.8", 
        "date": "Mar 26, 2017 1:33:25 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/d892303fa5cdcfd5278f6c2a2b1b008d720f7b15", 
        "sha": "d892303fa5cdcfd5278f6c2a2b1b008d720f7b15", 
        "branchName": "2.8", 
        "date": "Mar 25, 2017 7:48:09 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-215036598-215111320", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 22, 
        "numberDeleted": 9
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_11", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\nindex b708a02..fceba52 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java\n@@ -31,12 +31,15 @@ public class StdKeySerializer extends StdSerializer<Object>\n         } else if (cls.isEnum()) {\n             // 24-Sep-2015, tatu: Minor improvement over older (2.6.2 and before) code: at least\n             //     use name/toString() variation for as per configuration\n-            Enum<?> en = (Enum<?>) value;\n-\n             if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n-                str = en.toString();\n+                str = value.toString();\n             } else {\n-                str = en.name();\n+                Enum<?> en = (Enum<?>) value;\n+                if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n+                    str = String.valueOf(en.ordinal());\n+                } else {\n+                    str = en.name();\n+                }\n             }\n         } else if (value instanceof Date) {\n             provider.defaultSerializeDateKey((Date) value, g);\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\nindex fd6c99b..2462f2e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n@@ -144,9 +144,19 @@ public class StdKeySerializers\n                 break;\n             case TYPE_ENUM:\n                 {\n-                    String str = provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)\n-                            ? value.toString() : ((Enum<?>) value).name();\n-                    g.writeFieldName(str);\n+                    String key;\n+\n+                    if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_TO_STRING)) {\n+                        key = value.toString();\n+                    } else {\n+                        Enum<?> e = (Enum<?>) value;\n+                        if (provider.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {\n+                            key = String.valueOf(e.ordinal());\n+                        } else {\n+                            key = e.name();\n+                        }\n+                    }\n+                    g.writeFieldName(key);\n                 }\n                 break;\n             case TYPE_TO_STRING:\n@@ -250,6 +260,10 @@ public class StdKeySerializers\n                 return;\n             }\n             Enum<?> en = (Enum<?>) value;\n+            if (serializers.isEnabled(SerializationFeature.WRITE_ENUMS_USING_INDEX)) {\n+                g.writeFieldName(String.valueOf(en.ordinal()));\n+                return;\n+            }\n             g.writeFieldName(_values.serializedValueFor(en));\n         }\n     }\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 388, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 183977032, 
        "hostName": "local", 
        "totalMemory": 338165760, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:09:27 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/215036598/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            46
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 46
        }, 
        "testing": {
          "stepDurations": [
            44
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 44
        }, 
        "cloning": {
          "stepDurations": [
            46
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 46
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:06:07 AM", 
      "totalDuration": 195
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1708, 
        "numberRunning": 1712, 
        "numberFailing": 4, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 2
          }, 
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/215111320", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 6, 
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest", 
          "numberFailing": 4, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testWithUnwrappedAndCreatorSingleParameterInMiddle", 
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest", 
          "detail": "expected:<30> but was:<0>", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "testMethod": "testWithUnwrappedAndCreatorMultipleParametersAtBeginning", 
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest", 
          "detail": "expected:<John> but was:<null>", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testWithUnwrappedAndCreatorMultipleParametersInMiddle", 
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest", 
          "detail": "expected:<30> but was:<0>", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "testMethod": "testWithUnwrappedAndCreatorSingleParameterAtBeginning", 
          "testClass": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest", 
          "detail": "expected:<John> but was:<null>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215799347", 
        "date": "Mar 28, 2017 7:09:55 AM", 
        "id": 215799347
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/215111320", 
        "date": "Mar 26, 2017 1:37:59 AM", 
        "id": 215111320
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/e08dafef4faa7d71330160dafcbe77536d90e809", 
        "sha": "e08dafef4faa7d71330160dafcbe77536d90e809", 
        "branchName": "2.8", 
        "date": "Mar 28, 2017 7:05:43 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/934f485d4c62854dd2ef48ed7ebb238f3abec0b7", 
        "sha": "934f485d4c62854dd2ef48ed7ebb238f3abec0b7", 
        "branchName": "2.8", 
        "date": "Mar 26, 2017 1:33:25 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-215111320-215799347", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 389, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 47, 
        "numberDeleted": 22
      }
    }, 
    "bugId": "Bears_12", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\nindex 7b92423..817e29e 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java\n@@ -26,7 +26,7 @@ public class BuilderBasedDeserializer\n     private static final long serialVersionUID = 1L;\n \n     protected final AnnotatedMethod _buildMethod;\n-\t\n+\n     /*\n     /**********************************************************\n     /* Life-cycle, construction, initialization\n@@ -66,7 +66,7 @@ public class BuilderBasedDeserializer\n         super(src, ignoreAllUnknown);\n         _buildMethod = src._buildMethod;\n     }\n-    \n+\n     protected BuilderBasedDeserializer(BuilderBasedDeserializer src, NameTransformer unwrapper) {\n         super(src, unwrapper);\n         _buildMethod = src._buildMethod;\n@@ -86,7 +86,7 @@ public class BuilderBasedDeserializer\n         super(src, props);\n         _buildMethod = src._buildMethod;\n     }\n-    \n+\n     @Override\n     public JsonDeserializer<Object> unwrappingDeserializer(NameTransformer unwrapper)\n     {\n@@ -117,13 +117,13 @@ public class BuilderBasedDeserializer\n         SettableBeanProperty[] props = _beanProperties.getPropertiesInInsertionOrder();\n         return new BeanAsArrayBuilderDeserializer(this, props, _buildMethod);\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* JsonDeserializer implementation\n     /**********************************************************\n      */\n-    \n+\n     protected final Object finishBuild(DeserializationContext ctxt, Object builder)\n             throws IOException\n     {\n@@ -137,7 +137,7 @@ public class BuilderBasedDeserializer\n             return wrapInstantiationProblem(e, ctxt);\n         }\n     }\n-    \n+\n     /**\n      * Main deserialization method for bean-based objects (POJOs).\n      */\n@@ -146,7 +146,7 @@ public class BuilderBasedDeserializer\n         throws IOException\n     {\n         JsonToken t = p.getCurrentToken();\n-        \n+\n         // common case first:\n         if (t == JsonToken.START_OBJECT) {\n             t = p.nextToken();\n@@ -197,7 +197,7 @@ public class BuilderBasedDeserializer\n          */\n         return finishBuild(ctxt, _deserialize(p, ctxt, builder));\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Concrete deserialization methods\n@@ -207,7 +207,7 @@ public class BuilderBasedDeserializer\n     protected final Object _deserialize(JsonParser p,\n             DeserializationContext ctxt, Object builder)\n         throws IOException, JsonProcessingException\n-    {        \n+    {\n         if (_injectables != null) {\n             injectValues(ctxt, builder);\n         }\n@@ -233,7 +233,7 @@ public class BuilderBasedDeserializer\n             // Skip field name:\n             p.nextToken();\n             SettableBeanProperty prop = _beanProperties.find(propName);\n-            \n+\n             if (prop != null) { // normal case\n                 try {\n                     builder = prop.deserializeSetAndReturn(p, ctxt, builder);\n@@ -246,7 +246,7 @@ public class BuilderBasedDeserializer\n         }\n         return builder;\n     }\n-    \n+\n     /**\n      * Streamlined version that is only used when no \"special\"\n      * features are enabled.\n@@ -323,7 +323,7 @@ public class BuilderBasedDeserializer\n      * Method called to deserialize bean using \"property-based creator\":\n      * this means that a non-default constructor or factory method is\n      * called, and then possibly other setters. The trick is that\n-     * values for creator method need to be buffered, first; and \n+     * values for creator method need to be buffered, first; and\n      * due to non-guaranteed ordering possibly some other properties\n      * as well.\n      */\n@@ -332,7 +332,7 @@ public class BuilderBasedDeserializer\n     protected final Object _deserializeUsingPropertyBased(final JsonParser p,\n             final DeserializationContext ctxt)\n         throws IOException, JsonProcessingException\n-    { \n+    {\n         final PropertyBasedCreator creator = _propertyBasedCreator;\n         PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n \n@@ -414,13 +414,13 @@ public class BuilderBasedDeserializer\n         }\n         return bean;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Deserializing when we have to consider an active View\n     /**********************************************************\n      */\n-    \n+\n     protected final Object deserializeWithView(JsonParser p, DeserializationContext ctxt,\n             Object bean, Class<?> activeView)\n         throws IOException, JsonProcessingException\n@@ -447,7 +447,7 @@ public class BuilderBasedDeserializer\n         }\n         return bean;\n     }\n-    \n+\n     /*\n     /**********************************************************\n     /* Handling for cases where we have \"unwrapped\" values\n@@ -477,7 +477,7 @@ public class BuilderBasedDeserializer\n         }\n \n         final Class<?> activeView = _needViewProcesing ? ctxt.getActiveView() : null;\n-        \n+\n         for (; p.getCurrentToken() != JsonToken.END_OBJECT; p.nextToken()) {\n             String propName = p.getCurrentName();\n             p.nextToken();\n@@ -515,7 +515,7 @@ public class BuilderBasedDeserializer\n         tokens.writeEndObject();\n         _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n         return bean;\n-    }    \n+    }\n \n     @SuppressWarnings(\"resource\")\n     protected Object deserializeWithUnwrapped(JsonParser p,\n@@ -580,31 +580,7 @@ public class BuilderBasedDeserializer\n             // creator property?\n             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n             if (creatorProp != null) {\n-                // Last creator property to set?\n-                if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {\n-                    t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT\n-                    Object bean;\n-                    try {\n-                        bean = creator.build(ctxt, buffer);\n-                    } catch (Exception e) {\n-                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);\n-                        continue; // never gets here\n-                    }\n-                    // if so, need to copy all remaining tokens into buffer\n-                    while (t == JsonToken.FIELD_NAME) {\n-                        p.nextToken(); // to skip name\n-                        tokens.copyCurrentStructure(p);\n-                        t = p.nextToken();\n-                    }\n-                    tokens.writeEndObject();\n-                    if (bean.getClass() != _beanType.getRawClass()) {\n-                        // !!! 08-Jul-2011, tatu: Could probably support; but for now\n-                        //   it's too complicated, so bail out\n-                        ctxt.reportMappingException(\"Can not create polymorphic instances with unwrapped values\");\n-                        return null;\n-                    }\n-                    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n-                }\n+                buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));\n                 continue;\n             }\n             // Object Id property?\n@@ -646,7 +622,7 @@ public class BuilderBasedDeserializer\n     /* external type id\n     /**********************************************************\n      */\n-    \n+\n     protected Object deserializeWithExternalTypeId(JsonParser p, DeserializationContext ctxt)\n         throws IOException, JsonProcessingException\n     {\n@@ -699,15 +675,14 @@ public class BuilderBasedDeserializer\n                 } catch (Exception e) {\n                     wrapAndThrow(e, bean, propName, ctxt);\n                 }\n-                continue;\n             } else {\n                 // Unknown: let's call handler method\n-                handleUnknownProperty(p, ctxt, bean, propName);         \n+                handleUnknownProperty(p, ctxt, bean, propName);\n             }\n         }\n         // and when we get this far, let's try finalizing the deal:\n         return ext.complete(p, ctxt, bean);\n-    }        \n+    }\n \n     protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p,\n     \t\tDeserializationContext ctxt)\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 91458944, 
        "hostName": "local", 
        "totalMemory": 319815680, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:05:55 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/215111320/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            46
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 46
        }, 
        "testing": {
          "stepDurations": [
            24
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 24
        }, 
        "cloning": {
          "stepDurations": [
            48
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 48
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:02:54 AM", 
      "totalDuration": 176
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1712, 
        "numberRunning": 1713, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/216970075", 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "detail": "Could not find creator property with name 'name' (in class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Foo1345)\n at [Source: {\"name\":\"test\"}; line: 1, column: 1]", 
          "isError": true, 
          "testMethod": "testReadOnly1345", 
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/216985681", 
        "date": "Mar 31, 2017 2:02:41 AM", 
        "id": 216985681
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/216970075", 
        "date": "Mar 31, 2017 12:57:45 AM", 
        "id": 216970075
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/04c33a5e2abb2aeec6fb1a054ede951b3519d3b4", 
        "sha": "04c33a5e2abb2aeec6fb1a054ede951b3519d3b4", 
        "branchName": "2.8", 
        "date": "Mar 31, 2017 1:58:23 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/5f1039fd154df1337741fa1b3c1c5e61a63456d4", 
        "sha": "5f1039fd154df1337741fa1b3c1c5e61a63456d4", 
        "branchName": "2.8", 
        "date": "Mar 31, 2017 12:53:27 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-216970075-216985681", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 12, 
        "numberDeleted": 9
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_13", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 4c61444..c69169f 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -441,9 +441,11 @@ public class BeanDeserializerFactory\n             BeanDescription beanDesc, BeanDeserializerBuilder builder)\n         throws JsonMappingException\n     {\n-        final SettableBeanProperty[] creatorProps =\n-                builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());\n         final boolean isConcrete = !beanDesc.getType().isAbstract();\n+        final SettableBeanProperty[] creatorProps = isConcrete\n+                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n+                : null;\n+        final boolean hasCreatorProps = (creatorProps != null);\n         \n         // 01-May-2016, tatu: Which base type to use here gets tricky, since\n         //   it may often make most sense to use general type for overrides,\n@@ -490,8 +492,8 @@ public class BeanDeserializerFactory\n                 }\n             }\n         }\n-        final boolean useGettersAsSetters = (ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n-                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS));\n+        final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n+                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);\n \n         // Ok: let's then filter out property definitions\n         List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n@@ -531,7 +533,7 @@ public class BeanDeserializerFactory\n             }\n             // 25-Sep-2014, tatu: No point in finding constructor parameters for abstract types\n             //   (since they are never used anyway)\n-            if (isConcrete && propDef.hasConstructorParameter()) {\n+            if (hasCreatorProps && propDef.hasConstructorParameter()) {\n                 /* If property is passed via constructor parameter, we must\n                  * handle things in special way. Not sure what is the most optimal way...\n                  * for now, let's just call a (new) method in builder, which does nothing.\n@@ -548,8 +550,13 @@ public class BeanDeserializerFactory\n                     }\n                 }\n                 if (cprop == null) {\n-                    ctxt.reportMappingException(\"Could not find creator property with name '%s' (in class %s)\",\n-                            name, beanDesc.getBeanClass().getName());\n+                    List<String> n = new ArrayList<>();\n+                    for (SettableBeanProperty cp : creatorProps) {\n+                        n.add(cp.getName());\n+                    }\n+                    ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n+                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n+                            name, n);\n                     continue;\n                 }\n                 if (prop != null) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 392, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 260055472, 
        "hostName": "local", 
        "totalMemory": 345505792, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:59:43 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/216970075/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            55
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 55
        }, 
        "testing": {
          "stepDurations": [
            24
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 24
        }, 
        "cloning": {
          "stepDurations": [
            47
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 47
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:56:37 AM", 
      "totalDuration": 180
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1573, 
        "numberRunning": 1574, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/221825856", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testIssue1599", 
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest", 
          "detail": "Expected an exception with one of substrings ([Illegal type]): got one with message \"N/A\n at [Source: {\"id\": 124,\n \"obj\":[ \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",\n  {\n    \"transletBytecodes\" : [ \"AAIAZQ==\" ],\n    \"transletName\" : \"a.b\",\n    \"outputProperties\" : { }\n  }\n ]\n}; line: 6, column: 26] (through reference chain: com.fasterxml.jackson.databind.interop.Bean1599[\"obj\"]->com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl[\"outputProperties\"])\"", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/221903238", 
        "date": "Apr 14, 2017 12:14:16 AM", 
        "id": 221903238
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/221825856", 
        "date": "Apr 13, 2017 8:05:15 PM", 
        "id": 221825856
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/6ce32ffd18facac6abdbbf559c817b47fcb622c1", 
        "sha": "6ce32ffd18facac6abdbbf559c817b47fcb622c1", 
        "branchName": "2.7", 
        "date": "Apr 14, 2017 12:08:10 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/28ec8a47d381311818f805ae76bf84da30f516f9", 
        "sha": "28ec8a47d381311818f805ae76bf84da30f516f9", 
        "branchName": "2.7", 
        "date": "Apr 13, 2017 8:00:31 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-221825856-221903238", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 365, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 23
      }
    }, 
    "bugId": "Bears_14", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 9fcb68b..ad37dd1 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -139,6 +139,8 @@ public class BeanDeserializerFactory\n         if (!isPotentialBeanType(type.getRawClass())) {\n             return null;\n         }\n+        // For checks like [databind#1599]\n+        checkIllegalTypes(ctxt, type, beanDesc);\n         // Use generic bean introspection to build deserializer\n         return buildBeanDeserializer(ctxt, type, beanDesc);\n     }\n@@ -834,4 +836,25 @@ public class BeanDeserializerFactory\n         // We default to 'false', i.e. not ignorable\n         return (status == null) ? false : status.booleanValue(); \n     }\n+\n+    /**\n+     * @since 2.8.9\n+     */\n+    protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,\n+            BeanDescription beanDesc)\n+        throws JsonMappingException\n+    {\n+        // There are certain nasty classes that could cause problems, mostly\n+        // via default typing -- catch them here.\n+        Class<?> raw = type.getRawClass();\n+        String name = raw.getSimpleName();\n+\n+        if (\"TemplatesImpl\".equals(name)) { // [databind#1599] \n+            if (raw.getName().startsWith(\"com.sun.org.apache.xalan\")) {\n+                throw JsonMappingException.from(ctxt,\n+                        String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\",\n+                                name));\n+            }\n+        }\n+    }\n }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 121731360, 
        "hostName": "local", 
        "totalMemory": 381157376, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:35:04 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/221825856/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            52
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 52
        }, 
        "testing": {
          "stepDurations": [
            31
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 31
        }, 
        "cloning": {
          "stepDurations": [
            56
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 56
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:31:34 PM", 
      "totalDuration": 203
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1574, 
        "numberRunning": 1575, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/223024976", 
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "detail": "expected:<{\"alwaysClass\":[1],\"alwaysProp\":2}> but was:<{\"alwaysClass\":[{\"id\":1,\"value\":13}],\"alwaysProp\":2}>", 
          "isError": false, 
          "testMethod": "testIssue1607", 
          "testClass": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/223291136", 
        "date": "Apr 18, 2017 9:51:23 PM", 
        "id": 223291136
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/223024976", 
        "date": "Apr 18, 2017 7:15:44 AM", 
        "id": 223024976
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/ec859af181fa5b2da62077d00154e3c13c9d8f28", 
        "sha": "ec859af181fa5b2da62077d00154e3c13c9d8f28", 
        "branchName": "2.7", 
        "date": "Apr 18, 2017 9:46:33 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/8e98ed66bc262681a38052682ec5b6a42120f7f7", 
        "sha": "8e98ed66bc262681a38052682ec5b6a42120f7f7", 
        "branchName": "2.7", 
        "date": "Apr 18, 2017 7:11:02 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-223024976-223291136", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 14, 
        "numberDeleted": 17
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_15", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\nindex d74a2e9..f2bc1ca 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n@@ -576,10 +576,13 @@ public class JacksonAnnotationIntrospector\n     @Override\n     public ObjectIdInfo findObjectReferenceInfo(Annotated ann, ObjectIdInfo objectIdInfo) {\n         JsonIdentityReference ref = _findAnnotation(ann, JsonIdentityReference.class);\n-        if (ref != null) {\n-            objectIdInfo = objectIdInfo.withAlwaysAsId(ref.alwaysAsId());\n+        if (ref == null) {\n+            return objectIdInfo;\n         }\n-        return objectIdInfo;\n+        if (objectIdInfo == null) {\n+            objectIdInfo = ObjectIdInfo.empty();\n+        }\n+        return objectIdInfo.withAlwaysAsId(ref.alwaysAsId());\n     }\n \n     /*\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java b/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\nindex 0457ec0..049ab35 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java\n@@ -19,6 +19,11 @@ public class ObjectIdInfo\n     protected final Class<?> _scope;\n     protected final boolean _alwaysAsId;\n \n+    /**\n+     * @since 2.8.9\n+     */\n+    private final static ObjectIdInfo EMPTY = new ObjectIdInfo(PropertyName.NO_NAME, Object.class, null, false, null);\n+\n     public ObjectIdInfo(PropertyName name, Class<?> scope, Class<? extends ObjectIdGenerator<?>> gen,\n             Class<? extends ObjectIdResolver> resolver)\n     {\n@@ -56,6 +61,10 @@ public class ObjectIdInfo\n         _resolver = resolver;\n     }\n \n+    public static ObjectIdInfo empty() {\n+        return EMPTY;\n+    }\n+\n     public ObjectIdInfo withAlwaysAsId(boolean state) {\n         if (_alwaysAsId == state) {\n             return this;\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\nindex 658786d..3b838cc 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java\n@@ -429,15 +429,14 @@ public abstract class BeanSerializerBase\n             if (objectIdInfo == null) {\n                 // no ObjectId override, but maybe ObjectIdRef?\n                 if (oiw != null) {\n-                    objectIdInfo = intr.findObjectReferenceInfo(accessor,\n-                            new ObjectIdInfo(NAME_FOR_OBJECT_REF, null, null, null));\n-                    oiw = _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());\n+                    objectIdInfo = intr.findObjectReferenceInfo(accessor, null);\n+                    if (objectIdInfo != null) {\n+                        oiw = _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());\n+                    }\n                 }\n             } else {\n-                /* Ugh: mostly copied from BeanSerializerBase: but can't easily\n-                 * change it to be able to move to SerializerProvider (where it\n-                 * really belongs)\n-                 */\n+                // Ugh: mostly copied from BeanDeserializerBase: but can't easily change it\n+                // to be able to move to SerializerProvider (where it really belongs)\n                 \n                 // 2.1: allow modifications by \"id ref\" annotations as well:\n                 objectIdInfo = intr.findObjectReferenceInfo(accessor, objectIdInfo);\n", 
    "projectMetrics": {
      "numberSourceFiles": 389, 
      "numberLibrariesFailingModule": 14, 
      "numberTestFiles": 365, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 280575688, 
        "hostName": "local", 
        "totalMemory": 555745280, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:31:44 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/223024976/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            60
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 62
        }, 
        "testing": {
          "stepDurations": [
            66
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 66
        }, 
        "cloning": {
          "stepDurations": [
            69
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 69
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:26:28 PM", 
      "totalDuration": 311
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1974, 
        "numberRunning": 1975, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/226276279", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier1612Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.JsonMappingException", 
          "testMethod": "testIssue1612", 
          "testClass": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier1612Test", 
          "detail": "java.lang.Integer cannot be cast to java.lang.Double (through reference chain: com.fasterxml.jackson.databind.ser.BeanSerializerModifier1612Test$Bean1612[\"b\"])", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226639126", 
        "date": "Apr 28, 2017 3:08:19 AM", 
        "id": 226639126
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226276279", 
        "date": "Apr 27, 2017 7:57:58 AM", 
        "id": 226276279
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/c9ab9b3ac1881cacbdbb1a32a1de0e58fc3f6e06", 
        "sha": "c9ab9b3ac1881cacbdbb1a32a1de0e58fc3f6e06", 
        "branchName": "master", 
        "date": "Apr 28, 2017 3:02:18 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/b8b25e51327101cdb0d5b333cd7740a9684fea2e", 
        "sha": "b8b25e51327101cdb0d5b333cd7740a9684fea2e", 
        "branchName": "master", 
        "date": "Apr 27, 2017 7:39:11 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-226276279-226639126", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 412, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 451, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 13, 
        "numberDeleted": 27
      }
    }, 
    "bugId": "Bears_16", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\nindex 89f51b5..4307709 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java\n@@ -1155,7 +1155,7 @@ public abstract class SerializerProvider\n             String msg, Object... msgArgs) throws JsonMappingException {\n         String beanDesc = \"N/A\";\n         if (bean != null) {\n-            beanDesc = _desc(bean.getType().getGenericSignature());\n+            beanDesc = ClassUtil.nameOf(bean.getBeanClass());\n         }\n         msg = String.format(\"Invalid type definition for type %s: %s\",\n                 beanDesc, _format(msg, msgArgs));\n@@ -1178,7 +1178,7 @@ public abstract class SerializerProvider\n         }\n         String beanDesc = \"N/A\";\n         if (bean != null) {\n-            beanDesc = _desc(bean.getType().getGenericSignature());\n+            beanDesc = ClassUtil.nameOf(bean.getBeanClass());\n         }\n         message = String.format(\"Invalid definition for property %s (of type %s): %s\",\n                 propName, beanDesc, message);\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.java b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.java\nindex 95613e1..c89d380 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.java\n@@ -37,7 +37,7 @@ public class BeanSerializerBuilder\n     /**\n      * Bean properties, in order of serialization\n      */\n-    protected List<BeanPropertyWriter> _properties;\n+    protected List<BeanPropertyWriter> _properties = Collections.emptyList();\n \n     /**\n      * Optional array of filtered property writers; if null, no\n@@ -66,13 +66,13 @@ public class BeanSerializerBuilder\n      * type, if any.\n      */\n     protected ObjectIdWriter _objectIdWriter;\n-    \n+\n     /*\n     /**********************************************************\n     /* Construction and setter methods\n     /**********************************************************\n      */\n-    \n+\n     public BeanSerializerBuilder(BeanDescription beanDesc) {\n         _beanDesc = beanDesc;\n     }\n@@ -105,10 +105,22 @@ public class BeanSerializerBuilder\n         _properties = properties;\n     }\n \n+    /**\n+     * @param properties Number and order of properties here MUST match that\n+     *    of \"regular\" properties set earlier using {@link #setProperties(List)}; if not,\n+     *    an {@link IllegalArgumentException} will be thrown\n+     */\n     public void setFilteredProperties(BeanPropertyWriter[] properties) {\n+        if (properties != null) {\n+            if (properties.length != _properties.size()) { // as per [databind#1612]\n+                throw new IllegalArgumentException(String.format(\n+                        \"Trying to set %d filtered properties; must match length of non-filtered `properties` (%d)\",\n+                        properties.length, _properties.size()));\n+            }\n+        }\n         _filteredProperties = properties;\n     }\n-    \n+\n     public void setAnyGetter(AnyGetterWriter anyGetter) {\n         _anyGetter = anyGetter;\n     }\n@@ -185,6 +197,14 @@ public class BeanSerializerBuilder\n                 }\n             }\n         }\n+        // 27-Apr-2017, tatu: Verify that filtered-properties settings are compatible\n+        if (_filteredProperties != null) {\n+            if (_filteredProperties.length != _properties.size()) {\n+                throw new IllegalStateException(String.format(\n+\"Mismatch between `properties` size (%d), `filteredProperties` (%s): should have as many (or `null` for latter)\",\n+_properties.size(), _filteredProperties.length));\n+            }\n+        }\n         if (_anyGetter != null) {\n             _anyGetter.fixAccess(_config);\n         }\ndiff --git a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\nindex f0fa9c5..50436bb 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java\n@@ -520,7 +520,13 @@ public class BeanSerializerFactory\n             }\n         }\n \n-        JsonSerializer<Object> ser = (JsonSerializer<Object>) builder.build();\n+        JsonSerializer<Object> ser = null;\n+        try {\n+            ser = (JsonSerializer<Object>) builder.build();\n+        } catch (RuntimeException e) {\n+            prov.reportBadTypeDefinition(beanDesc, \"Failed to construct BeanSerializer for %s: (%s) %s\",\n+                    beanDesc.getType(), e.getClass().getName(), e.getMessage());\n+        }\n         if (ser == null) {\n             // If we get this far, there were no properties found, so no regular BeanSerializer\n             // would be constructed. But, couple of exceptions.\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 257290912, 
        "hostName": "local", 
        "totalMemory": 504889344, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:24:11 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/226276279/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            54
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 54
        }, 
        "testing": {
          "stepDurations": [
            56
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 56
        }, 
        "cloning": {
          "stepDurations": [
            53
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 53
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:19:31 PM", 
      "totalDuration": 272
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1975, 
        "numberRunning": 1976, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/226654766", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "testBaseTypeId1616", 
          "isError": true, 
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestTypeNames"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "com.fasterxml.jackson.databind.jsontype.TestTypeNames", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226666085", 
        "date": "Apr 28, 2017 5:37:56 AM", 
        "id": 226666085
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226654766", 
        "date": "Apr 28, 2017 4:33:51 AM", 
        "id": 226654766
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/974ccddfd718a06f889da2dcd58ebb6bc22c8dca", 
        "sha": "974ccddfd718a06f889da2dcd58ebb6bc22c8dca", 
        "branchName": "master", 
        "date": "Apr 28, 2017 5:32:14 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/8c20a7670f71958c9af6c8daffab227d2d7ba87a", 
        "sha": "8c20a7670f71958c9af6c8daffab227d2d7ba87a", 
        "branchName": "master", 
        "date": "Apr 28, 2017 4:28:09 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-226654766-226666085", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 29, 
        "numberDeleted": 30
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_17", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java\nindex 651b62d..9cb8bec 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java\n@@ -1,5 +1,6 @@\n package com.fasterxml.jackson.databind.jsontype.impl;\n \n+import java.lang.reflect.Modifier;\n import java.util.*;\n \n import com.fasterxml.jackson.databind.AnnotationIntrospector;\n@@ -21,7 +22,7 @@ public class StdSubtypeResolver\n     protected LinkedHashSet<NamedType> _registeredSubtypes;\n \n     public StdSubtypeResolver() { }\n-    \n+\n     /*\n     /**********************************************************\n     /* Subtype registration\n@@ -75,15 +76,17 @@ public class StdSubtypeResolver\n         }\n         \n         // then annotated types for property itself\n-        Collection<NamedType> st = ai.findSubtypes(property);\n-        if (st != null) {\n-            for (NamedType nt : st) {\n-                AnnotatedClass ac = AnnotatedClassResolver.resolveWithoutSuperTypes(config,\n-                        nt.getType());\n-                _collectAndResolve(ac, nt, config, ai, collected);\n-            }            \n+        if (property != null) {\n+            Collection<NamedType> st = ai.findSubtypes(property);\n+            if (st != null) {\n+                for (NamedType nt : st) {\n+                    AnnotatedClass ac = AnnotatedClassResolver.resolveWithoutSuperTypes(config,\n+                            nt.getType());\n+                    _collectAndResolve(ac, nt, config, ai, collected);\n+                }            \n+            }\n         }\n-        \n+\n         NamedType rootType = new NamedType(rawBase, null);\n         AnnotatedClass ac = AnnotatedClassResolver.resolveWithoutSuperTypes(config, rawBase);\n             \n@@ -128,7 +131,7 @@ public class StdSubtypeResolver\n             AnnotatedMember property, JavaType baseType)\n     {\n         final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n-        Class<?> rawBase = (baseType == null) ? property.getRawType() : baseType.getRawClass();\n+        Class<?> rawBase = baseType.getRawClass();\n \n         // Need to keep track of classes that have been handled already \n         Set<Class<?>> typesHandled = new HashSet<Class<?>>();\n@@ -141,14 +144,15 @@ public class StdSubtypeResolver\n         _collectAndResolveByTypeId(ac, rootType, config, typesHandled, byName);\n         \n         // then with definitions from property\n-        Collection<NamedType> st = ai.findSubtypes(property);\n-        if (st != null) {\n-            for (NamedType nt : st) {\n-                ac = AnnotatedClassResolver.resolveWithoutSuperTypes(config, nt.getType());\n-                _collectAndResolveByTypeId(ac, nt, config, typesHandled, byName);\n-            }            \n+        if (property != null) {\n+            Collection<NamedType> st = ai.findSubtypes(property);\n+            if (st != null) {\n+                for (NamedType nt : st) {\n+                    ac = AnnotatedClassResolver.resolveWithoutSuperTypes(config, nt.getType());\n+                    _collectAndResolveByTypeId(ac, nt, config, typesHandled, byName);\n+                }            \n+            }\n         }\n-        \n         // and finally explicit type registrations (highest precedence)\n         if (_registeredSubtypes != null) {\n             for (NamedType subtype : _registeredSubtypes) {\n@@ -160,21 +164,21 @@ public class StdSubtypeResolver\n                 }\n             }\n         }\n-        return _combineNamedAndUnnamed(typesHandled, byName);\n+        return _combineNamedAndUnnamed(rawBase, typesHandled, byName);\n     }\n \n     @Override\n     public Collection<NamedType> collectAndResolveSubtypesByTypeId(MapperConfig<?> config,\n-            AnnotatedClass type)\n+            AnnotatedClass baseType)\n     {\n+        final Class<?> rawBase = baseType.getRawType();\n         Set<Class<?>> typesHandled = new HashSet<Class<?>>();\n         Map<String,NamedType> byName = new LinkedHashMap<String,NamedType>();\n \n-        NamedType rootType = new NamedType(type.getRawType(), null);\n-        _collectAndResolveByTypeId(type, rootType, config, typesHandled, byName);\n+        NamedType rootType = new NamedType(rawBase, null);\n+        _collectAndResolveByTypeId(baseType, rootType, config, typesHandled, byName);\n         \n         if (_registeredSubtypes != null) {\n-            Class<?> rawBase = type.getRawType();\n             for (NamedType subtype : _registeredSubtypes) {\n                 // is it a subtype of root type?\n                 if (rawBase.isAssignableFrom(subtype.getType())) { // yes\n@@ -184,7 +188,7 @@ public class StdSubtypeResolver\n                 }\n             }\n         }\n-        return _combineNamedAndUnnamed(typesHandled, byName);\n+        return _combineNamedAndUnnamed(rawBase, typesHandled, byName);\n     }\n \n     /*\n@@ -267,8 +271,8 @@ public class StdSubtypeResolver\n      * Helper method used for merging explicitly named types and handled classes\n      * without explicit names.\n      */\n-    protected Collection<NamedType> _combineNamedAndUnnamed(Set<Class<?>> typesHandled,\n-            Map<String,NamedType> byName)\n+    protected Collection<NamedType> _combineNamedAndUnnamed(Class<?> rawBase,\n+            Set<Class<?>> typesHandled, Map<String,NamedType> byName)\n     {\n         ArrayList<NamedType> result = new ArrayList<NamedType>(byName.values());\n \n@@ -279,6 +283,11 @@ public class StdSubtypeResolver\n             typesHandled.remove(t.getType());\n         }\n         for (Class<?> cls : typesHandled) {\n+            // 27-Apr-2017, tatu: [databind#1616] Do not add base type itself unless\n+            //     it is concrete (or has explicit type name)\n+            if ((cls == rawBase) && Modifier.isAbstract(cls.getModifiers())) {\n+                continue;\n+            }\n             result.add(new NamedType(cls));\n         }\n         return result;\n", 
    "projectMetrics": {
      "numberSourceFiles": 412, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 452, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 311049928, 
        "hostName": "local", 
        "totalMemory": 396886016, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:20:20 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/226654766/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            65
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 65
        }, 
        "testing": {
          "stepDurations": [
            79
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 79
        }, 
        "cloning": {
          "stepDurations": [
            69
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 69
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:15:23 PM", 
      "totalDuration": 290
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1976, 
        "numberRunning": 1977, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/226666085", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException", 
          "testMethod": "testTypeCoercion1592", 
          "testClass": "com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test", 
          "detail": "Invalid definition for property \"i\" (of type com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test$Bean1592): Can not refine serialization type [simple type, class int] into java.lang.Integer; types not related", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226673064", 
        "date": "Apr 28, 2017 6:16:09 AM", 
        "id": 226673064
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/226666085", 
        "date": "Apr 28, 2017 5:37:56 AM", 
        "id": 226666085
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/029413a6e381bb04b7b0a420730d3119e9cc0961", 
        "sha": "029413a6e381bb04b7b0a420730d3119e9cc0961", 
        "branchName": "master", 
        "date": "Apr 28, 2017 6:10:46 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/974ccddfd718a06f889da2dcd58ebb6bc22c8dca", 
        "sha": "974ccddfd718a06f889da2dcd58ebb6bc22c8dca", 
        "branchName": "master", 
        "date": "Apr 28, 2017 5:32:14 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-226666085-226673064", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 412, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 453, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 27, 
        "numberDeleted": 17
      }
    }, 
    "bugId": "Bears_18", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\nindex d4a624a..19f52c6 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java\n@@ -761,6 +761,9 @@ public class JacksonAnnotationIntrospector\n                         type = tf.constructGeneralizedType(type, serClass);\n                     } else if (currRaw.isAssignableFrom(serClass)) { // specialization, ok as well\n                         type = tf.constructSpecializedType(type, serClass);\n+                    } else if (_primitiveAndWrapper(currRaw, serClass)) {\n+                        // 27-Apr-2017, tatu: [databind#1592] ignore primitive<->wrapper refinements\n+                        type = type.withStaticTyping();\n                     } else {\n                         throw new JsonMappingException(null,\n                                 String.format(\"Can not refine serialization type %s into %s; types not related\",\n@@ -793,6 +796,9 @@ public class JacksonAnnotationIntrospector\n                             keyType = tf.constructGeneralizedType(keyType, keyClass);\n                         } else if (currRaw.isAssignableFrom(keyClass)) { // specialization, ok as well\n                             keyType = tf.constructSpecializedType(keyType, keyClass);\n+                        } else if (_primitiveAndWrapper(currRaw, keyClass)) {\n+                            // 27-Apr-2017, tatu: [databind#1592] ignore primitive<->wrapper refinements\n+                            keyType = keyType.withStaticTyping();\n                         } else {\n                             throw new JsonMappingException(null,\n                                     String.format(\"Can not refine serialization key type %s into %s; types not related\",\n@@ -826,6 +832,9 @@ public class JacksonAnnotationIntrospector\n                            contentType = tf.constructGeneralizedType(contentType, contentClass);\n                        } else if (currRaw.isAssignableFrom(contentClass)) { // specialization, ok as well\n                            contentType = tf.constructSpecializedType(contentType, contentClass);\n+                       } else if (_primitiveAndWrapper(currRaw, contentClass)) {\n+                           // 27-Apr-2017, tatu: [databind#1592] ignore primitive<->wrapper refinements\n+                           contentType = contentType.withStaticTyping();\n                        } else {\n                            throw new JsonMappingException(null,\n                                    String.format(\"Can not refine serialization content type %s into %s; types not related\",\n@@ -1113,7 +1122,8 @@ public class JacksonAnnotationIntrospector\n         \n         // Ok: start by refining the main type itself; common to all types\n         final Class<?> valueClass = (jsonDeser == null) ? null : _classIfExplicit(jsonDeser.as());\n-        if ((valueClass != null) && !type.hasRawClass(valueClass)) {\n+        if ((valueClass != null) && !type.hasRawClass(valueClass)\n+                && !_primitiveAndWrapper(type, valueClass)) {\n             try {\n                 type = tf.constructSpecializedType(type, valueClass);\n             } catch (IllegalArgumentException iae) {\n@@ -1129,7 +1139,8 @@ public class JacksonAnnotationIntrospector\n         if (type.isMapLikeType()) {\n             JavaType keyType = type.getKeyType();\n             final Class<?> keyClass = (jsonDeser == null) ? null : _classIfExplicit(jsonDeser.keyAs());\n-            if (keyClass != null) {\n+            if ((keyClass != null)\n+                    && !_primitiveAndWrapper(keyType, keyClass)) {\n                 try {\n                     keyType = tf.constructSpecializedType(keyType, keyClass);\n                     type = ((MapLikeType) type).withKeyType(keyType);\n@@ -1145,7 +1156,8 @@ public class JacksonAnnotationIntrospector\n         if (contentType != null) { // collection[like], map[like], array, reference\n             // And then value types for all containers:\n             final Class<?> contentClass = (jsonDeser == null) ? null : _classIfExplicit(jsonDeser.contentAs());\n-            if (contentClass != null) {\n+            if ((contentClass != null)\n+                    && !_primitiveAndWrapper(contentType, contentClass)) {\n                 try {\n                     contentType = tf.constructSpecializedType(contentType, contentClass);\n                     type = type.withContentType(contentType);\n@@ -1451,9 +1463,25 @@ public class JacksonAnnotationIntrospector\n         return StdTypeResolverBuilder.noTypeInfoBuilder();\n     }\n \n-    /*\n-    /**********************************************************\n-    /* Helper classes\n-    /**********************************************************\n-     */\n+    private boolean _primitiveAndWrapper(Class<?> baseType, Class<?> refinement)\n+    {\n+        if (baseType.isPrimitive()) {\n+            return baseType == ClassUtil.primitiveType(refinement);\n+        }\n+        if (refinement.isPrimitive()) {\n+            return refinement == ClassUtil.primitiveType(baseType);\n+        }\n+        return false;\n+    }\n+\n+    private boolean _primitiveAndWrapper(JavaType baseType, Class<?> refinement)\n+    {\n+        if (baseType.isPrimitive()) {\n+            return baseType.hasRawClass(ClassUtil.primitiveType(refinement));\n+        }\n+        if (refinement.isPrimitive()) {\n+            return refinement == ClassUtil.primitiveType(baseType.getRawClass());\n+        }\n+        return false;\n+    }\n }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 204123192, 
        "hostName": "local", 
        "totalMemory": 350748672, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:19:46 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/226666085/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            62
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 62
        }, 
        "testing": {
          "stepDurations": [
            68
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 68
        }, 
        "cloning": {
          "stepDurations": [
            53
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 53
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:14:37 PM", 
      "totalDuration": 303
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1720, 
        "numberRunning": 1721, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/228025083", 
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "detail": "expected:<jack> but was:<null>", 
          "isError": false, 
          "testMethod": "testIgnoreGetterNotSetter1595", 
          "testClass": "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/228873360", 
        "date": "May 4, 2017 9:53:36 PM", 
        "id": 228873360
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/228025083", 
        "date": "May 2, 2017 6:47:20 PM", 
        "id": 228025083
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4a2b1ae08ded66b77e05bf8fa0ac8a2e8c60709d", 
        "sha": "4a2b1ae08ded66b77e05bf8fa0ac8a2e8c60709d", 
        "branchName": "2.8", 
        "date": "May 4, 2017 9:48:52 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/f13cfb1f671af15814e2aa34e9f12cf00ab93b58", 
        "sha": "f13cfb1f671af15814e2aa34e9f12cf00ab93b58", 
        "branchName": "2.8", 
        "date": "May 2, 2017 6:42:22 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-228025083-228873360", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_19", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\nindex 4b0434e..1423f28 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java\n@@ -492,7 +492,7 @@ public class BeanDeserializerFactory\n             boolean ignoreAny = ignorals.getIgnoreUnknown();\n             builder.setIgnoreUnknownProperties(ignoreAny);\n             // Or explicit/implicit definitions?\n-            ignored = ignorals.getIgnored();\n+            ignored = ignorals.findIgnoredForDeserialization();\n             for (String propName : ignored) {\n                 builder.addIgnorable(propName);\n             }\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 396, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 238036008, 
        "hostName": "local", 
        "totalMemory": 346554368, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 3:24:48 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/228025083/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            44
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 44
        }, 
        "testing": {
          "stepDurations": [
            26
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 26
        }, 
        "cloning": {
          "stepDurations": [
            46
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 46
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:21:59 PM", 
      "totalDuration": 164
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1721, 
        "numberRunning": 1722, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/233857275", 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "com.fasterxml.jackson.databind.filter.ProblemHandlerTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "com.fasterxml.jackson.databind.exc.InvalidFormatException", 
          "testMethod": "testWeirdStringHandling", 
          "testClass": "com.fasterxml.jackson.databind.filter.ProblemHandlerTest", 
          "detail": "Can not deserialize value of type java.util.UUID from String \"not a uuid!\": not a valid textual representation\n at [Source: \"not a uuid!\"; line: 1, column: 1]", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/234147085", 
        "date": "May 19, 2017 10:12:31 PM", 
        "id": 234147085
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/233857275", 
        "date": "May 19, 2017 3:39:30 AM", 
        "id": 233857275
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/9a083ad56b20711eab368a7818fb079a870feb93", 
        "sha": "9a083ad56b20711eab368a7818fb079a870feb93", 
        "branchName": "2.8", 
        "date": "May 19, 2017 10:07:44 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/edaa4ad8204dfda985d3c74ffe542c9eb67a201d", 
        "sha": "edaa4ad8204dfda985d3c74ffe542c9eb67a201d", 
        "branchName": "2.8", 
        "date": "May 19, 2017 3:34:35 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-233857275-234147085", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 396, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 6
      }
    }, 
    "bugId": "Bears_20", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\nindex 102e0e3..0d01e78 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java\n@@ -13,6 +13,7 @@ import java.util.TimeZone;\n import java.util.regex.Pattern;\n \n import com.fasterxml.jackson.core.*;\n+import com.fasterxml.jackson.core.util.VersionUtil;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JavaType;\n import com.fasterxml.jackson.databind.JsonMappingException;\n@@ -112,10 +113,10 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>\n             }\n             Exception cause = null;\n             try {\n-                T result = _deserialize(text, ctxt);\n-                if (result != null) {\n-                    return result;\n-                }\n+                // 19-May-2017, tatu: Used to require non-null result (assuming `null`\n+                //    indicated error; but that seems wrong. Should be able to return\n+                //    `null` as value.\n+                return _deserialize(text, ctxt);\n             } catch (IllegalArgumentException iae) {\n                 cause = iae;\n             } catch (MalformedURLException me) {\n@@ -277,7 +278,8 @@ public abstract class FromStringDeserializer<T> extends StdScalarDeserializer<T>\n             case STD_STRING_BUILDER:\n                 return new StringBuilder(value);\n             }\n-            throw new IllegalArgumentException();\n+            VersionUtil.throwInternal();\n+            return null;\n         }\n \n         @Override\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 270497080, 
        "hostName": "local", 
        "totalMemory": 377487360, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 3:20:44 PM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/233857275/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            45
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 45
        }, 
        "testing": {
          "stepDurations": [
            37
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 37
        }, 
        "cloning": {
          "stepDurations": [
            49
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 49
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:17:16 PM", 
      "totalDuration": 201
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1722, 
        "numberRunning": 1723, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/241044631", 
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "detail": "expected:<{\"date\":\"1970-01-01[X01:00:]00\"}> but was:<{\"date\":\"1970-01-01[T01:00:00.000+01]00\"}>", 
          "isError": false, 
          "testMethod": "testFormatWithoutPattern", 
          "testClass": "com.fasterxml.jackson.databind.ser.DateSerializationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 13, 
          "numberRunning": 14, 
          "testClass": "com.fasterxml.jackson.databind.ser.DateSerializationTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/241063530", 
        "date": "Jun 9, 2017 7:25:15 AM", 
        "id": 241063530
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/241044631", 
        "date": "Jun 9, 2017 5:11:11 AM", 
        "id": 241044631
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/93f7e14d096181a251aae3355464d24bcd7677a5", 
        "sha": "93f7e14d096181a251aae3355464d24bcd7677a5", 
        "branchName": "2.8", 
        "date": "Jun 9, 2017 7:20:50 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4b00ccc8ae9763c76e363621dc9ee4b8692d30dc", 
        "sha": "4b00ccc8ae9763c76e363621dc9ee4b8692d30dc", 
        "branchName": "2.8", 
        "date": "Jun 9, 2017 5:06:58 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-241044631-241063530", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 64, 
        "numberDeleted": 29
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_21", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\nindex ea67b88..4b9312b 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java\n@@ -49,33 +49,76 @@ public abstract class DateTimeSerializerBase<T>\n     public JsonSerializer<?> createContextual(SerializerProvider serializers,\n             BeanProperty property) throws JsonMappingException\n     {\n-        if (property != null) {\n-            JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n-            if (format != null) {\n-            \t// Simple case first: serialize as numeric timestamp?\n-                JsonFormat.Shape shape = format.getShape();\n-                if (shape.isNumeric()) {\n-                    return withFormat(Boolean.TRUE, null);\n-                }\n-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()\n-                                || format.hasLocale() || format.hasTimeZone()) {\n-                    TimeZone tz = format.getTimeZone();\n-                    final String pattern = format.hasPattern()\n-                                    ? format.getPattern()\n-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n-                    final Locale loc = format.hasLocale()\n-                                    ? format.getLocale()\n-                                    : serializers.getLocale();\n-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n-                    if (tz == null) {\n-                        tz = serializers.getTimeZone();\n-                    }\n-                    df.setTimeZone(tz);\n-                    return withFormat(Boolean.FALSE, df);\n-                }\n+        if (property == null) {\n+            return this;\n+        }\n+        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n+        if (format == null) {\n+            return this;\n+        }\n+        // Simple case first: serialize as numeric timestamp?\n+        JsonFormat.Shape shape = format.getShape();\n+        if (shape.isNumeric()) {\n+            return withFormat(Boolean.TRUE, null);\n+        }\n+\n+        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..\n+        // First: custom pattern will override things\n+        if (format.hasPattern()) {\n+            final Locale loc = format.hasLocale()\n+                            ? format.getLocale()\n+                            : serializers.getLocale();\n+            SimpleDateFormat df = new SimpleDateFormat(format.getPattern(), loc);\n+            TimeZone tz = format.hasTimeZone() ? format.getTimeZone()\n+                    : serializers.getTimeZone();\n+            df.setTimeZone(tz);\n+            return withFormat(Boolean.FALSE, df);\n+        }\n+\n+        // Otherwise, need one of these changes:\n+        final boolean hasLocale = format.hasLocale();\n+        final boolean hasTZ = format.hasTimeZone();\n+        final boolean asString = (shape == JsonFormat.Shape.STRING);\n+\n+        if (!hasLocale && !hasTZ && !asString) {\n+            return this;\n+        }\n+\n+        DateFormat df0 = serializers.getConfig().getDateFormat();\n+        // Jackson's own `StdDateFormat` is quite easy to deal with...\n+        if (df0 instanceof StdDateFormat) {\n+            StdDateFormat std = (StdDateFormat) df0;\n+            if (format.hasLocale()) {\n+                std = std.withLocale(format.getLocale());\n+            }\n+            if (format.hasTimeZone()) {\n+                std = std.withTimeZone(format.getTimeZone());\n             }\n+            return withFormat(Boolean.FALSE, std);\n+        }\n+\n+        // 08-Jun-2017, tatu: Unfortunately there's no generally usable\n+        //    mechanism for changing `DateFormat` instances (or even clone()ing)\n+        //    So: require it be `SimpleDateFormat`; can't config other types\n+        if (!(df0 instanceof SimpleDateFormat)) {\n+//            serializers.reportBadDefinition(handledType(), String.format(\n+            serializers.reportMappingProblem(\n+\"Configured `DateFormat` (%s) not a `SimpleDateFormat`; can not configure `Locale` or `TimeZone`\",\n+df0.getClass().getName());\n+        }\n+        SimpleDateFormat df = (SimpleDateFormat) df0;\n+        if (hasLocale) {\n+            // Ugh. No way to change `Locale`, create copy; must re-crete completely:\n+            df = new SimpleDateFormat(df.toPattern(), format.getLocale());\n+        } else {\n+            df = (SimpleDateFormat) df.clone();\n+        }\n+        TimeZone newTz = format.getTimeZone();\n+        boolean changeTZ = (newTz != null) && !newTz.equals(df.getTimeZone());\n+        if (changeTZ) {\n+            df.setTimeZone(newTz);\n         }\n-        return this;\n+        return withFormat(Boolean.FALSE, df);\n     }\n \n     /*\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 396, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 433435336, 
        "hostName": "spirals-bears", 
        "totalMemory": 634912768, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:26:42 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/241044631/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            52
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 52
        }, 
        "testing": {
          "stepDurations": [
            40
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 40
        }, 
        "cloning": {
          "stepDurations": [
            29
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 29
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:23:14 AM", 
      "totalDuration": 202
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1723, 
        "numberRunning": 1725, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/241063530", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "com.fasterxml.jackson.databind.type.RecursiveTypeTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testClass": "com.fasterxml.jackson.databind.type.RecursiveTypeTest", 
          "testMethod": "testSuperClassWithReferencedJavaType", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "testMethod": "testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType", 
          "testClass": "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes", 
          "detail": "expected:<{\"[base\":1,\"]sub\":2}> but was:<{\"[]sub\":2}>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/241065840", 
        "date": "Jun 9, 2017 7:43:50 AM", 
        "id": 241065840
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/241063530", 
        "date": "Jun 9, 2017 7:25:15 AM", 
        "id": 241063530
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/3d743477e1531cd3c4c041941f047eee5b040924", 
        "sha": "3d743477e1531cd3c4c041941f047eee5b040924", 
        "branchName": "2.8", 
        "date": "Jun 9, 2017 7:36:00 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/93f7e14d096181a251aae3355464d24bcd7677a5", 
        "sha": "93f7e14d096181a251aae3355464d24bcd7677a5", 
        "branchName": "2.8", 
        "date": "Jun 9, 2017 7:20:50 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-241063530-241065840", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 8
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_22", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\nindex 21f37fe..12162c5 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\n@@ -25,6 +25,14 @@ public class ResolvedRecursiveType extends TypeBase\n         }\n         _referencedType = ref;\n     }\n+   \n+    @Override\n+    public JavaType getSuperClass() {\n+    \tif (_referencedType != null) {\n+    \t\treturn _referencedType.getSuperClass();\n+    \t}\n+    \treturn super.getSuperClass();\n+    }\n \n     public JavaType getSelfReferencedType() { return _referencedType; }\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 397, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 449016096, 
        "hostName": "spirals-bears", 
        "totalMemory": 576716800, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:26:05 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/241063530/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            51
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 51
        }, 
        "testing": {
          "stepDurations": [
            37
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 37
        }, 
        "cloning": {
          "stepDurations": [
            29
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 29
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:22:36 AM", 
      "totalDuration": 202
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1725, 
        "numberRunning": 1726, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/242268513", 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "detail": "expected:<Thu Jan 01 01:00:00 CET 1970> but was:<Thu Jan 01 03:00:00 CET 1970>", 
          "isError": false, 
          "testMethod": "testDateUtilISO8601NoTimezoneNonDefault", 
          "testClass": "com.fasterxml.jackson.databind.deser.TestDateDeserialization"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 22, 
          "testClass": "com.fasterxml.jackson.databind.deser.TestDateDeserialization", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/242687710", 
        "date": "Jun 14, 2017 6:30:01 AM", 
        "id": 242687710
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/242268513", 
        "date": "Jun 13, 2017 5:52:52 AM", 
        "id": 242268513
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/5a0ce57b5d3a6d30420267b56b3d2282c76df581", 
        "sha": "5a0ce57b5d3a6d30420267b56b3d2282c76df581", 
        "branchName": "2.8", 
        "date": "Jun 14, 2017 6:25:31 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/fe80e86551be38fccb1a983854925a78db6e845f", 
        "sha": "fe80e86551be38fccb1a983854925a78db6e845f", 
        "branchName": "2.8", 
        "date": "Jun 13, 2017 5:45:17 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-242268513-242687710", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 10, 
        "numberDeleted": 23
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_23", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java b/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java\nindex 3faefb9..46346de 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java\n@@ -39,6 +39,13 @@ public class StdDateFormat\n      */\n     protected final static String DATE_FORMAT_STR_ISO8601_Z = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\";\n \n+    /**\n+     * Same as 'regular' 8601 except misses timezone altogether\n+     *\n+     * @since 2.8.10\n+     */\n+    protected final static String DATE_FORMAT_STR_ISO8601_NO_TZ = \"yyyy-MM-dd'T'HH:mm:ss.SSS\";\n+\n     /**\n      * ISO-8601 with just the Date part, no time\n      */\n@@ -56,6 +63,7 @@ public class StdDateFormat\n     protected final static String[] ALL_FORMATS = new String[] {\n         DATE_FORMAT_STR_ISO8601,\n         DATE_FORMAT_STR_ISO8601_Z,\n+        DATE_FORMAT_STR_ISO8601_NO_TZ,\n         DATE_FORMAT_STR_RFC1123,\n         DATE_FORMAT_STR_PLAIN\n     };\n@@ -70,11 +78,12 @@ public class StdDateFormat\n     }\n \n     private final static Locale DEFAULT_LOCALE = Locale.US;\n-    \n+\n     protected final static DateFormat DATE_FORMAT_RFC1123;\n \n     protected final static DateFormat DATE_FORMAT_ISO8601;\n     protected final static DateFormat DATE_FORMAT_ISO8601_Z;\n+    protected final static DateFormat DATE_FORMAT_ISO8601_NO_TZ; // since 2.8.10\n \n     protected final static DateFormat DATE_FORMAT_PLAIN;\n \n@@ -93,6 +102,8 @@ public class StdDateFormat\n         DATE_FORMAT_ISO8601.setTimeZone(DEFAULT_TIMEZONE);\n         DATE_FORMAT_ISO8601_Z = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601_Z, DEFAULT_LOCALE);\n         DATE_FORMAT_ISO8601_Z.setTimeZone(DEFAULT_TIMEZONE);\n+        DATE_FORMAT_ISO8601_NO_TZ = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601_NO_TZ, DEFAULT_LOCALE);\n+        DATE_FORMAT_ISO8601_NO_TZ.setTimeZone(DEFAULT_TIMEZONE);\n         DATE_FORMAT_PLAIN = new SimpleDateFormat(DATE_FORMAT_STR_PLAIN, DEFAULT_LOCALE);\n         DATE_FORMAT_PLAIN.setTimeZone(DEFAULT_TIMEZONE);\n     }\n@@ -123,6 +134,7 @@ public class StdDateFormat\n     protected transient DateFormat _formatRFC1123;\n     protected transient DateFormat _formatISO8601;\n     protected transient DateFormat _formatISO8601_z;\n+    protected transient DateFormat _formatISO8601_noTz; // 2.8.10\n     protected transient DateFormat _formatPlain;\n \n     /*\n@@ -504,11 +516,11 @@ public class StdDateFormat\n                             _timezone, _locale, _lenient);\n                 }\n             } else {\n-                // If not, plain date. Easiest to just patch 'Z' in the end?\n-                StringBuilder sb = new StringBuilder(dateStr);\n-                // And possible also millisecond part if missing\n+                // If not, plain date, no timezone\n                 int timeLen = len - dateStr.lastIndexOf('T') - 1;\n+                // And possible also millisecond part if missing\n                 if (timeLen < 12) { // missing, or partial\n+                    StringBuilder sb = new StringBuilder(dateStr);\n                     switch (timeLen) {\n                     case 11: sb.append('0');\n                     case 10: sb.append('0');\n@@ -517,17 +529,16 @@ public class StdDateFormat\n                     default:\n                         sb.append(\".000\");\n                     }\n+                    dateStr = sb.toString();\n                 }\n-                sb.append('Z');\n-                dateStr = sb.toString();\n-                df = _formatISO8601_z;\n-                formatStr = DATE_FORMAT_STR_ISO8601_Z;\n+                df = _formatISO8601_noTz;\n+                formatStr = DATE_FORMAT_STR_ISO8601_NO_TZ;\n                 if (df == null) {\n                     // 10-Jun-2017, tatu: As per [databind#1651], when using this format,\n                     //    must use UTC, not whatever is configured as default timezone\n                     //    (because we know `Z` identifier is used)\n-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, formatStr,\n-                            DEFAULT_TIMEZONE, _locale, _lenient);\n+                    df = _formatISO8601_noTz = _cloneFormat(DATE_FORMAT_ISO8601_NO_TZ, formatStr,\n+                            _timezone, _locale, _lenient);\n                 }\n             }\n         }\n@@ -588,6 +599,8 @@ public class StdDateFormat\n         _formatRFC1123 = null;\n         _formatISO8601 = null;\n         _formatISO8601_z = null;\n+        _formatISO8601_noTz = null;\n+\n         _formatPlain = null;\n     }\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 397, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 423009520, 
        "hostName": "spirals-bears", 
        "totalMemory": 625475584, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:24:13 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/242268513/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            51
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 51
        }, 
        "testing": {
          "stepDurations": [
            38
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 38
        }, 
        "cloning": {
          "stepDurations": [
            30
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 30
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:20:48 AM", 
      "totalDuration": 199
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1736, 
        "numberRunning": 1737, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.StackOverflowError", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/243509258", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.type.RecursiveType1658Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.StackOverflowError", 
          "isError": true, 
          "testClass": "com.fasterxml.jackson.databind.type.RecursiveType1658Test", 
          "testMethod": "testRecursive1658"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/243861380", 
        "date": "Jun 17, 2017 1:19:34 AM", 
        "id": 243861380
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/243509258", 
        "date": "Jun 16, 2017 4:26:23 AM", 
        "id": 243509258
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/075319dbf91d6c091c78a3b7c686b579569678e1", 
        "sha": "075319dbf91d6c091c78a3b7c686b579569678e1", 
        "branchName": "2.8", 
        "date": "Jun 17, 2017 1:14:37 AM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/dc2c00358822901b943019a9dbc0c912285998af", 
        "sha": "dc2c00358822901b943019a9dbc0c912285998af", 
        "branchName": "2.8", 
        "date": "Jun 16, 2017 4:22:10 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-243509258-243861380", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 399, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 12
      }
    }, 
    "bugId": "Bears_24", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\nindex 12162c5..53e061c 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java\n@@ -111,11 +111,22 @@ public class ResolvedRecursiveType extends TypeBase\n     public boolean equals(Object o) {\n         if (o == this) return true;\n         if (o == null) return false;\n-        // Do NOT ever match unresolved references\n-        if (_referencedType == null) {\n+        if (o.getClass() == getClass()) {\n+            // 16-Jun-2017, tatu: as per [databind#1658], can not do recursive call since\n+            //    there is likely to be a cycle...\n+\n+            // but... true or false?\n             return false;\n+            \n+            /*\n+            // Do NOT ever match unresolved references\n+            if (_referencedType == null) {\n+                return false;\n+            }\n+            return (o.getClass() == getClass()\n+                    && _referencedType.equals(((ResolvedRecursiveType) o).getSelfReferencedType()));\n+                    */\n         }\n-        return (o.getClass() == getClass()\n-                && _referencedType.equals(((ResolvedRecursiveType) o).getSelfReferencedType()));\n+        return false;\n     }\n }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 453195184, 
        "hostName": "spirals-bears", 
        "totalMemory": 594018304, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:22:58 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/243509258/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            50
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 51
        }, 
        "testing": {
          "stepDurations": [
            39
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 39
        }, 
        "cloning": {
          "stepDurations": [
            28
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 28
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:19:36 AM", 
      "totalDuration": 196
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1737, 
        "numberRunning": 1738, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.StackOverflowError", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/247621332", 
      "failureDetails": [
        {
          "failureName": "java.lang.StackOverflowError", 
          "testClass": "com.fasterxml.jackson.databind.ser.KeySerializers1679Test", 
          "testMethod": "testRecursion1679", 
          "isError": true
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.fasterxml.jackson.databind.ser.KeySerializers1679Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/247674379", 
        "date": "Jun 27, 2017 10:05:11 PM", 
        "id": 247674379
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/247621332", 
        "date": "Jun 27, 2017 7:37:24 PM", 
        "id": 247621332
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/e20bcc877a8149a9c4ecd562209b3b3954b6dda2", 
        "sha": "e20bcc877a8149a9c4ecd562209b3b3954b6dda2", 
        "branchName": "2.8", 
        "date": "Jun 27, 2017 10:01:02 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/4009fe3a05caaf45ec230fbedc29dbe5d9b7f412", 
        "sha": "4009fe3a05caaf45ec230fbedc29dbe5d9b7f412", 
        "branchName": "2.8", 
        "date": "Jun 27, 2017 7:33:01 PM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-247621332-247674379", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 7
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_25", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\nindex 2462f2e..369e659 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java\n@@ -207,6 +207,13 @@ public class StdKeySerializers\n         protected JsonSerializer<Object> _findAndAddDynamic(PropertySerializerMap map,\n                 Class<?> type, SerializerProvider provider) throws JsonMappingException\n         {\n+            // 27-Jun-2017, tatu: [databind#1679] Need to avoid StackOverflowError...\n+            if (type == Object.class) {\n+                // basically just need to call `toString()`, easiest way:\n+                JsonSerializer<Object> ser = new Default(Default.TYPE_TO_STRING, type);\n+                _dynamicSerializers = map.newWith(type, ser);\n+                return ser;\n+            }\n             PropertySerializerMap.SerializerAndMapResult result =\n                     // null -> for now we won't keep ref or pass BeanProperty; could change\n                     map.findAndAddKeySerializer(type, provider, null);\n", 
    "projectMetrics": {
      "numberSourceFiles": 397, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 400, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 348421080, 
        "hostName": "spirals-bears", 
        "totalMemory": 602931200, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:22:19 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/247621332/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            49
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 50
        }, 
        "testing": {
          "stepDurations": [
            36
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 36
        }, 
        "cloning": {
          "stepDurations": [
            32
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 32
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:18:53 AM", 
      "totalDuration": 199
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1754, 
        "numberRunning": 1755, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/FasterXML/jackson-databind/318458719", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testJDKTypes1855", 
          "testClass": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest", 
          "detail": "Expected an exception with one of substrings ([Illegal type]): got one (of type com.fasterxml.jackson.databind.JsonMappingException) with message \"Can not construct instance of org.springframework.jacksontest.BogusPointcutAdvisor, problem: Wrong!\n at [Source: {\"v\":[\"org.springframework.jacksontest.BogusPointcutAdvisor\",\"/tmp/foobar.txt\"]}; line: 1, column: 62] (through reference chain: com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest$PolyWrapper[\"v\"])\"", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/318715551", 
        "date": "Dec 19, 2017 5:36:21 PM", 
        "id": 318715551
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/FasterXML/jackson-databind/builds/318458719", 
        "date": "Dec 19, 2017 6:48:31 AM", 
        "id": 318458719
      }
    }, 
    "repository": {
      "name": "FasterXML-jackson-databind", 
      "url": "https://github.com/FasterXML/jackson-databind", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3038937
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/459107dccc9b3ea991af3e6ad0953e54b01ef7c1", 
        "sha": "459107dccc9b3ea991af3e6ad0953e54b01ef7c1", 
        "branchName": "2.8", 
        "date": "Dec 19, 2017 5:31:49 PM", 
        "repoName": "FasterXML/jackson-databind"
      }, 
      "buggyBuild": {
        "url": "http://github.com/FasterXML/jackson-databind/commit/bade4792d12bcf7242ada53c197a924332840864", 
        "sha": "bade4792d12bcf7242ada53c197a924332840864", 
        "branchName": "2.8", 
        "date": "Dec 19, 2017 6:44:34 AM", 
        "repoName": "FasterXML/jackson-databind"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/FasterXML-jackson-databind-318458719-318715551", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 399, 
      "numberLibrariesFailingModule": 17, 
      "numberTestFiles": 411, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_26", 
    "diff": "diff --git a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\nindex 8a273cc..45a7616 100644\n--- a/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\n+++ b/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java\n@@ -71,6 +71,7 @@ public class SubTypeValidator\n         final Class<?> raw = type.getRawClass();\n         String full = raw.getName();\n \n+        main_check:\n         do {\n             if (_cfgIllegalClassNames.contains(full)) {\n                 break;\n@@ -84,8 +85,8 @@ public class SubTypeValidator\n                     // looking for \"AbstractBeanFactoryPointcutAdvisor\" but no point to allow any is there?\n                     if (\"AbstractPointcutAdvisor\".equals(name)\n                             // ditto  for \"FileSystemXmlApplicationContext\": block all ApplicationContexts\n-                            || \"AbstractApplicationContext.equals\".equals(name)) {\n-                        break;\n+                            || \"AbstractApplicationContext\".equals(name)) {\n+                        break main_check;\n                     }\n                 }\n             }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 248725608, 
        "hostName": "spirals-bears", 
        "totalMemory": 585105408, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:31:23 AM", 
      "projectRootPomPath": "./workspace/FasterXML/jackson-databind/318458719/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            55
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 55
        }, 
        "testing": {
          "stepDurations": [
            42
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 42
        }, 
        "cloning": {
          "stepDurations": [
            30
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 30
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:27:45 AM", 
      "totalDuration": 210
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 967, 
        "numberRunning": 968, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/189186902", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<(unknown file)> but was:<(/root/workspace/INRIA/spoon/189186902/src/test/java/spoon/test/position/testclasses/Foo.java:3)>", 
          "isError": false, 
          "testMethod": "defaultConstructorPositionTest", 
          "testClass": "spoon.test.position.PositionTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 7, 
          "testClass": "spoon.test.position.PositionTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189233591", 
        "date": "Jan 5, 2017 5:20:38 PM", 
        "id": 189233591
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189186902", 
        "date": "Jan 5, 2017 2:58:41 PM", 
        "id": 189186902
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/bf0652c5a3dddb0322ff2b471071ffecce7b7c70", 
        "sha": "bf0652c5a3dddb0322ff2b471071ffecce7b7c70", 
        "branchName": "master", 
        "date": "Jan 5, 2017 5:11:54 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/af9ecca3acc9eab0c78f75491f5218beaac17486", 
        "sha": "af9ecca3acc9eab0c78f75491f5218beaac17486", 
        "branchName": "master", 
        "date": "Jan 5, 2017 2:49:59 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-189186902-189233591", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_27", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java b/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\nindex 3b481e3..93db295 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ContextBuilder.java\n@@ -87,7 +87,7 @@ public class ContextBuilder {\n \tvoid enter(CtElement e, ASTNode node) {\n \t\tstack.push(new ASTPair(e, node));\n \t\tif (!(e instanceof CtPackage) || (compilationUnitSpoon.getFile() != null && compilationUnitSpoon.getFile().getName().equals(DefaultJavaPrettyPrinter.JAVA_PACKAGE_DECLARATION))) {\n-\t\t\tif (compilationunitdeclaration != null) {\n+\t\t\tif (compilationunitdeclaration != null && !e.isImplicit()) {\n \t\t\t\te.setPosition(this.jdtTreeBuilder.getPositionBuilder().buildPositionCtElement(e, node));\n \t\t\t}\n \t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 446, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 459, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 126159672, 
        "hostName": "local", 
        "totalMemory": 245366784, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:43:38 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/189186902/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            69
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 69
        }, 
        "testing": {
          "stepDurations": [
            257
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 257
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:32:30 PM", 
      "totalDuration": 662
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 967, 
        "numberRunning": 968, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/189233636", 
      "failingClasses": [
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "spoon.test.comment.CommentTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testInLineComment", 
          "testClass": "spoon.test.comment.CommentTest", 
          "detail": "// last comment at the end of array:new int[]{ // comment before array value\n1 , // comment after array value\n2 , 3 } is not printed", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189234660", 
        "date": "Jan 5, 2017 5:24:07 PM", 
        "id": 189234660
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/189233636", 
        "date": "Jan 5, 2017 5:22:05 PM", 
        "id": 189233636
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ce55bc43a9751081097121a5745d516cad2c5200", 
        "sha": "ce55bc43a9751081097121a5745d516cad2c5200", 
        "branchName": "master", 
        "date": "Jan 5, 2017 5:15:25 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ac4988af27def9422c7b95f88efa7263549ee56c", 
        "sha": "ac4988af27def9422c7b95f88efa7263549ee56c", 
        "branchName": "master", 
        "date": "Jan 5, 2017 5:12:15 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-189233636-189234660", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 446, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 459, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 8, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_28", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 136ee74..b0a9f5d 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -1188,7 +1188,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@SuppressWarnings(\"rawtypes\")\n \tpublic <T> void visitCtNewArray(CtNewArray<T> newArray) {\n \t\tenterCtExpression(newArray);\n-\n+\t\telementPrinterHelper.writeComment(newArray, CommentOffset.BEFORE);\n \t\tboolean isNotInAnnotation;\n \t\ttry {\n \t\t\tisNotInAnnotation = (newArray.getParent(CtAnnotationType.class) == null) && (newArray.getParent(CtAnnotation.class) == null);\n@@ -1244,8 +1244,11 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\telementPrinterHelper.writeComment(newArray, CommentOffset.INSIDE);\n \t\t\tprinter.write(\" }\");\n \t\t}\n+\t\telementPrinterHelper.writeComment(newArray, CommentOffset.AFTER);\n \t\texitCtExpression(newArray);\n \t}\n \ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 7b08fac..0fe008d 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -336,7 +336,8 @@ public class ElementPrinterHelper {\n \t\t\t}\n \t\t\tfinal int line = element.getPosition().getLine();\n \t\t\tfinal int sourceEnd = element.getPosition().getSourceEnd();\n-\t\t\tif (offset == CommentOffset.BEFORE && (comment.getPosition().getLine() < line || sourceEnd >= comment.getPosition().getSourceEnd())) {\n+\t\t\tfinal int sourceStart = element.getPosition().getSourceStart();\n+\t\t\tif (offset == CommentOffset.BEFORE && (comment.getPosition().getLine() < line || (sourceStart <= comment.getPosition().getSourceStart() && sourceEnd >= comment.getPosition().getSourceEnd()))) {\n \t\t\t\tcommentsToPrint.add(comment);\n \t\t\t} else if (offset == CommentOffset.AFTER && comment.getPosition().getSourceStart() > sourceEnd) {\n \t\t\t\tcommentsToPrint.add(comment);\ndiff --git a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\nindex d5473f1..1b643a1 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n@@ -142,6 +142,7 @@ class JDTCommentBuilder {\n \tprivate CtElement addCommentToNear(final CtComment comment, final Collection<CtElement> elements) {\n \t\tCtElement best = null;\n \t\tint smallDistance = Integer.MAX_VALUE;\n+\n \t\tfor (CtElement element : elements) {\n \t\t\tif (element.getPosition() == null) {\n \t\t\t\tcontinue;\n@@ -157,7 +158,11 @@ class JDTCommentBuilder {\n \t\t\tif (isAfter) {\n \t\t\t\tdistance = Math.abs(element.getPosition().getSourceEnd() - comment.getPosition().getSourceStart());\n \t\t\t}\n-\t\t\tif (distance < smallDistance && (!isAfter || element.getPosition().getEndLine() == comment.getPosition().getLine())) {\n+\n+\t\t\tint elementEndLine = element.getPosition().getEndLine();\n+\t\t\tint commentLine = comment.getPosition().getLine();\n+\n+\t\t\tif (distance < smallDistance && (!isAfter || elementEndLine == commentLine)) {\n \t\t\t\tbest = element;\n \t\t\t\tsmallDistance = distance;\n \t\t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 170732952, 
        "hostName": "local", 
        "totalMemory": 367525888, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:38:27 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/189233636/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            64
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 64
        }, 
        "testing": {
          "stepDurations": [
            243
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 243
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:27:27 PM", 
      "totalDuration": 654
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 968, 
        "numberRunning": 969, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/190241093", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<spoon.test.reference.testclasses.ParamRefs> but was:<void>", 
          "isError": false, 
          "testMethod": "testEqualityTypeReference", 
          "testClass": "spoon.test.reference.TypeReferenceTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 25, 
          "numberRunning": 26, 
          "testClass": "spoon.test.reference.TypeReferenceTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241752", 
        "date": "Jan 9, 2017 2:13:49 PM", 
        "id": 190241752
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241093", 
        "date": "Jan 9, 2017 2:10:43 PM", 
        "id": 190241093
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/669bcc077b462157d1e14fb771e10ae86075f59d", 
        "sha": "669bcc077b462157d1e14fb771e10ae86075f59d", 
        "branchName": "master", 
        "date": "Jan 9, 2017 2:04:17 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3810dc9ccc2ba26aac9bc6e8092eb163b0cc75b9", 
        "sha": "3810dc9ccc2ba26aac9bc6e8092eb163b0cc75b9", 
        "branchName": "master", 
        "date": "Jan 9, 2017 2:02:32 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-190241093-190241752", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 11, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_29", 
    "diff": "diff --git a/src/main/java/spoon/reflect/factory/ExecutableFactory.java b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\nindex d06fe9a..e4ea1ff 100644\n--- a/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n+++ b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n@@ -114,6 +114,7 @@ public class ExecutableFactory extends SubFactory {\n \t\t} else if (e instanceof CtAnonymousExecutable) {\n \t\t\treturn createReference(((CtAnonymousExecutable) e).getDeclaringType().getReference(), e.getType().clone(), executableName);\n \t\t}\n+\t\t// constructor\n \t\treturn createReference(((CtConstructor<T>) e).getDeclaringType().getReference(), ((CtConstructor<T>) e).getType().clone(), CtExecutableReference.CONSTRUCTOR_NAME, refs);\n \t}\n \ndiff --git a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\nindex 51bbfa3..f7fa778 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n@@ -721,9 +721,7 @@ public class ParentExiter extends CtInheritanceScanner {\n \tprivate <T> boolean hasChildEqualsToType(CtConstructorCall<T> ctConstructorCall) {\n \t\tfinal AllocationExpression parent = (AllocationExpression) jdtTreeBuilder.getContextBuilder().stack.peek().node;\n \t\t// Type is equals to the jdt child.\n-\t\treturn parent.type != null && parent.type.equals(childJDT)\n-\t\t\t\t// Type not yet initialized.\n-\t\t\t\t&& !((CtTypeAccess) child).getAccessedType().equals(ctConstructorCall.getExecutable().getType());\n+\t\treturn parent.type != null && parent.type.equals(childJDT);\n \t}\n \n \t@Override\ndiff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex f873b1f..a8c8208 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -338,11 +338,14 @@ public class ReferenceBuilder {\n \t\tif (exec == null) {\n \t\t\treturn null;\n \t\t}\n-\n \t\tfinal CtExecutableReference ref = this.jdtTreeBuilder.getFactory().Core().createExecutableReference();\n-\t\tref.setSimpleName(new String(exec.selector));\n-\t\tref.setType(getTypeReference(exec.returnType));\n-\n+\t\tif (exec.isConstructor()) {\n+\t\t\tref.setSimpleName(CtExecutableReference.CONSTRUCTOR_NAME);\n+\t\t\tref.setType(getTypeReference(exec.declaringClass));\n+\t\t} else {\n+\t\t\tref.setSimpleName(new String(exec.selector));\n+\t\t\tref.setType(getTypeReference(exec.returnType));\n+\t\t}\n \t\tif (exec instanceof ProblemMethodBinding) {\n \t\t\tif (exec.declaringClass != null && Arrays.asList(exec.declaringClass.methods()).contains(exec)) {\n \t\t\t\tref.setDeclaringType(getTypeReference(exec.declaringClass));\n", 
    "projectMetrics": {
      "numberSourceFiles": 446, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 460, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 122242408, 
        "hostName": "local", 
        "totalMemory": 270532608, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:31:53 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/190241093/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            65
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 65
        }, 
        "testing": {
          "stepDurations": [
            238
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 238
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:21:00 PM", 
      "totalDuration": 647
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 969, 
        "numberRunning": 970, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.ClassCastException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/190241752", 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "spoon.test.reference.VariableAccessTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.ClassCastException", 
          "testMethod": "testParameterReferenceInConstructorNoClasspath", 
          "testClass": "spoon.test.reference.VariableAccessTest", 
          "detail": "spoon.support.reflect.declaration.CtConstructorImpl cannot be cast to spoon.reflect.declaration.CtMethod", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190558172", 
        "date": "Jan 10, 2017 11:21:52 AM", 
        "id": 190558172
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/190241752", 
        "date": "Jan 9, 2017 2:13:49 PM", 
        "id": 190241752
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e60e3ab92d706a87e3475645f312675fc278c9f1", 
        "sha": "e60e3ab92d706a87e3475645f312675fc278c9f1", 
        "branchName": "master", 
        "date": "Jan 10, 2017 11:13:22 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/669bcc077b462157d1e14fb771e10ae86075f59d", 
        "sha": "669bcc077b462157d1e14fb771e10ae86075f59d", 
        "branchName": "master", 
        "date": "Jan 9, 2017 2:04:17 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-190241752-190558172", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 446, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 460, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 49, 
        "numberDeleted": 34
      }
    }, 
    "bugId": "Bears_30", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\nindex b927920..61e0dc4 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilderHelper.java\n@@ -17,9 +17,9 @@\n package spoon.support.compiler.jdt;\n \n import org.eclipse.jdt.core.compiler.CharOperation;\n+import org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.Argument;\n import org.eclipse.jdt.internal.compiler.ast.FieldReference;\n-import org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;\n import org.eclipse.jdt.internal.compiler.ast.ReferenceExpression;\n import org.eclipse.jdt.internal.compiler.ast.SingleNameReference;\n@@ -42,14 +42,16 @@ import spoon.reflect.code.CtLambda;\n import spoon.reflect.code.CtTypeAccess;\n import spoon.reflect.code.CtVariableAccess;\n import spoon.reflect.declaration.CtClass;\n+import spoon.reflect.declaration.CtConstructor;\n+import spoon.reflect.declaration.CtExecutable;\n import spoon.reflect.declaration.CtField;\n-import spoon.reflect.declaration.CtMethod;\n import spoon.reflect.declaration.CtParameter;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ModifierKind;\n import spoon.reflect.factory.CoreFactory;\n import spoon.reflect.factory.ExecutableFactory;\n+import spoon.reflect.factory.TypeFactory;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtFieldReference;\n@@ -161,6 +163,7 @@ class JDTTreeBuilderHelper {\n \t * \t\t   visible in current scope, {@code null} otherwise.\n \t */\n \t<T> CtVariableAccess<T> createVariableAccessNoClasspath(SingleNameReference singleNameReference) {\n+\t\tfinal TypeFactory typeFactory = jdtTreeBuilder.getFactory().Type();\n \t\tfinal CoreFactory coreFactory = jdtTreeBuilder.getFactory().Core();\n \t\tfinal ExecutableFactory executableFactory = jdtTreeBuilder.getFactory().Executable();\n \t\tfinal ContextBuilder contextBuilder = jdtTreeBuilder.getContextBuilder();\n@@ -186,50 +189,64 @@ class JDTTreeBuilderHelper {\n \t\t\t\t// references (in terms of Java objects) have not been set up yet. Thus, we need to\n \t\t\t\t// create the required parameter reference by our own.\n \n-\t\t\t\t// since the given parameter has not been declared in a lambda expression it must\n-\t\t\t\t// have been declared by a method!\n-\t\t\t\tfinal CtMethod method = (CtMethod) variable.getParent();\n+\t\t\t\t// Since the given parameter has not been declared in a lambda expression it must\n+\t\t\t\t// have been declared by a method/constructor.\n+\t\t\t\tfinal CtExecutable executable = (CtExecutable) variable.getParent();\n \n-\t\t\t\t// create list of method's parameter types\n-\t\t\t\tfinal List<CtTypeReference<?>> parameterTypesOfMethod = new ArrayList<>();\n-\t\t\t\tfinal List<CtParameter<?>> parametersOfMethod = method.getParameters();\n-\t\t\t\tfor (CtParameter<?> parameter : parametersOfMethod) {\n+\t\t\t\t// create list of executable's parameter types\n+\t\t\t\tfinal List<CtTypeReference<?>> parameterTypesOfExecutable = new ArrayList<>();\n+\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\tfinal List<CtParameter<?>> parametersOfExecutable = executable.getParameters();\n+\t\t\t\tfor (CtParameter<?> parameter : parametersOfExecutable) {\n \t\t\t\t\tif (parameter.getType() != null) {\n-\t\t\t\t\t\tparameterTypesOfMethod.add(parameter.getType().clone());\n+\t\t\t\t\t\tparameterTypesOfExecutable.add(parameter.getType().clone());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\t// it's the best match :(\n+\t\t\t\t\t\tparameterTypesOfExecutable.add(typeFactory.OBJECT);\n \t\t\t\t\t}\n \t\t\t\t}\n \n-\t\t\t\t// find method's corresponding jdt element\n-\t\t\t\tMethodDeclaration methodJDT = null;\n+\t\t\t\t// find executable's corresponding jdt element\n+\t\t\t\tAbstractMethodDeclaration executableJDT = null;\n \t\t\t\tfor (final ASTPair astPair : contextBuilder.stack) {\n-\t\t\t\t\tif (astPair.element == method) {\n-\t\t\t\t\t\tmethodJDT = (MethodDeclaration) astPair.node;\n-\t\t\t\t\t\tbreak;\n+\t\t\t\t\tif (astPair.element == executable) {\n+\t\t\t\t\t\texecutableJDT = (AbstractMethodDeclaration) astPair.node;\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tassert methodJDT != null;\n+\t\t\t\tassert executableJDT != null;\n \n-\t\t\t\t// create a reference to method's declaring class\n-\t\t\t\tfinal CtTypeReference declaringReferenceOfMethod =\n+\t\t\t\t// create a reference to executable's declaring class\n+\t\t\t\tfinal CtTypeReference declaringReferenceOfExecutable =\n \t\t\t\t\t\t// `binding` may be null for anonymous classes which means we have to\n \t\t\t\t\t\t// create an 'empty' type reference since we have no further information\n-\t\t\t\t\t\tmethodJDT.binding == null ? coreFactory.createTypeReference()\n-\t\t\t\t\t\t\t\t: referenceBuilder.getTypeReference(methodJDT.binding.declaringClass);\n-\n-\t\t\t\t// create a reference to the method of the currently processed parameter reference\n-\t\t\t\tfinal CtExecutableReference methodReference =\n-\t\t\t\t\t\texecutableFactory.createReference(declaringReferenceOfMethod,\n-\t\t\t\t\t\t\t\t// we need to clone method's return type (rt) before passing to\n-\t\t\t\t\t\t\t\t// `createReference` since this method (indirectly) sets the parent\n-\t\t\t\t\t\t\t\t// of the rt and, therefore, may break the AST\n-\t\t\t\t\t\t\t\tmethod.getType().clone(),\n-\t\t\t\t\t\t\t\t// no need to clone/copy as Strings are immutable\n-\t\t\t\t\t\t\t\tmethod.getSimpleName(),\n-\t\t\t\t\t\t\t\t// no need to clone/copy as we just created this object\n-\t\t\t\t\t\t\t\tparameterTypesOfMethod);\n-\n-\t\t\t\t// finally, we can set the method reference...\n-\t\t\t\tparameterReference.setDeclaringExecutable(methodReference);\n+\t\t\t\t\t\t// available\n+\t\t\t\t\t\texecutableJDT.binding == null ? coreFactory.createTypeReference()\n+\t\t\t\t\t\t\t\t: referenceBuilder.getTypeReference(\n+\t\t\t\t\t\t\t\t\t\texecutableJDT.binding.declaringClass);\n+\n+\t\t\t\t// If executable is a constructor, `executable.getType()` returns null since the\n+\t\t\t\t// parent is not available yet. Fortunately, however, the return type of a\n+\t\t\t\t// constructor is its declaring class which, in our case, is already available with\n+\t\t\t\t// declaringReferenceOfExecutable.\n+\t\t\t\tCtTypeReference executableTypeReference = executable instanceof CtConstructor\n+\t\t\t\t\t\t// IMPORTANT: Create a clone of the type reference (rt) if retrieved by\n+\t\t\t\t\t\t// other AST elements as `executableFactory.createReference` (see below)\n+\t\t\t\t\t\t// indirectly sets the parent of `rt` and, thus, may break the AST!\n+\t\t\t\t\t\t? declaringReferenceOfExecutable.clone()\n+\t\t\t\t\t\t: executable.getType().clone();\n+\n+\t\t\t\t// create a reference to the executable of the currently processed parameter\n+\t\t\t\t// reference\n+\t\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\t\tfinal CtExecutableReference executableReference =\n+\t\t\t\t\t\texecutableFactory.createReference(\n+\t\t\t\t\t\t\t\tdeclaringReferenceOfExecutable,\n+\t\t\t\t\t\t\t\texecutableTypeReference,\n+\t\t\t\t\t\t\t\texecutable.getSimpleName(),\n+\t\t\t\t\t\t\t\tparameterTypesOfExecutable);\n+\n+\t\t\t\t// finally, we can set the executable reference...\n+\t\t\t\tparameterReference.setDeclaringExecutable(executableReference);\n \t\t\t}\n \t\t\tvariableReference = parameterReference;\n \t\t\tvariableAccess = isLhsAssignment(contextBuilder, singleNameReference)\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 196854312, 
        "hostName": "local", 
        "totalMemory": 255328256, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:25:08 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/190241752/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            59
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 59
        }, 
        "testing": {
          "stepDurations": [
            201
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 201
        }, 
        "cloning": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:15:11 PM", 
      "totalDuration": 591
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 981, 
        "numberRunning": 985, 
        "numberFailing": 2, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 2
          }, 
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/191511078", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<...ltimap<K, V>.Wrapped[Collection].WrappedIterator {}> but was:<...ltimap<K, V>.Wrapped[List].WrappedIterator {}>", 
          "isError": false, 
          "testMethod": "testNestedAccessPathWithTypedParameter", 
          "testClass": "spoon.test.imports.ImportTest"
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "detail": "java.lang.NullPointerException", 
          "isError": true, 
          "testMethod": "testTest", 
          "testClass": "spoon.test.main.MainTest"
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "detail": "java.lang.NullPointerException", 
          "isError": true, 
          "testMethod": "testAccessPath", 
          "testClass": "spoon.test.imports.ImportTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<...ltimap<K, V>.Wrapped[Collection].WrappedIterator {}> but was:<...ltimap<K, V>.Wrapped[List].WrappedIterator {}>", 
          "isError": false, 
          "testMethod": "testNestedAccessPathWithTypedParameterWithImports", 
          "testClass": "spoon.test.imports.ImportTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 24, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 2, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.main.MainTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/191595944", 
        "date": "Jan 13, 2017 12:10:04 PM", 
        "id": 191595944
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/191511078", 
        "date": "Jan 13, 2017 3:15:56 AM", 
        "id": 191511078
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/551f0fb28c49f4b1eeab93f7748c04ef82cfde39", 
        "sha": "551f0fb28c49f4b1eeab93f7748c04ef82cfde39", 
        "branchName": "master", 
        "date": "Jan 13, 2017 11:58:00 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/7beb903ee2fbbea5b48ad316944ef831b69074f4", 
        "sha": "7beb903ee2fbbea5b48ad316944ef831b69074f4", 
        "branchName": "master", 
        "date": "Jan 13, 2017 3:06:56 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-191511078-191595944", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_31", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 6a600a6..82a30e6 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -619,7 +619,7 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PRIVATE)) {\n \t\t\t\t//it is visible in scope of the same class only\n-\t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getQualifiedName());\n+\t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getTopLevelType().getQualifiedName());\n \t\t\t}\n \t\t\t//package protected\n \t\t\tif (type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName())) {\n@@ -674,6 +674,9 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t}\n \t\t\tdeclType = visibleDeclType;\n \t\t}\n+\t\tif (declType == null) {\n+\t\t\tthrow new SpoonException(\"Cannot compute access path to type: \" + this.getQualifiedName() + \" in context of type: \" + contextType.getQualifiedName());\n+\t\t}\n \t\treturn declType;\n \t}\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 450, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 461, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 165605712, 
        "hostName": "local", 
        "totalMemory": 276299776, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:52:38 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/191511078/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            67
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 68
        }, 
        "testing": {
          "stepDurations": [
            243
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 243
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:42:43 PM", 
      "totalDuration": 589
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 985, 
        "numberRunning": 986, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/192604168", 
      "failingClasses": [
        {
          "numberPassing": 33, 
          "numberRunning": 34, 
          "testClass": "spoon.test.filters.FilterTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "testClassCastExceptionOnForEach", 
          "isError": true, 
          "testClass": "spoon.test.filters.FilterTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192969999", 
        "date": "Jan 18, 2017 10:33:42 AM", 
        "id": 192969999
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192604168", 
        "date": "Jan 17, 2017 9:27:11 AM", 
        "id": 192604168
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac", 
        "sha": "b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac", 
        "branchName": "master", 
        "date": "Jan 18, 2017 9:51:49 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8ea4bc43f39abe12a75e57ab7f50267dbed827fe", 
        "sha": "8ea4bc43f39abe12a75e57ab7f50267dbed827fe", 
        "branchName": "master", 
        "date": "Jan 17, 2017 9:18:37 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-192604168-192969999", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 450, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 461, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_32", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\nindex cd3923e..54b3e66 100644\n--- a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n@@ -279,7 +279,12 @@ public class CtQueryImpl implements CtQuery {\n \t\t}\r\n \r\n \t\tprivate boolean isFailOnCCE() {\r\n-\t\t\treturn getStep().isFailOnCCE();\r\n+\t\t\tAbstractStep step = getStep();\r\n+\t\t\tif (step == null) {\r\n+\t\t\t\t//it is final consumer. Never throw CCE on final forEach consumer\r\n+\t\t\t\treturn false;\r\n+\t\t\t}\r\n+\t\t\treturn step.isFailOnCCE();\r\n \t\t}\r\n \r\n \t\tprivate AbstractStep getStep() {\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144518448, 
        "hostName": "local", 
        "totalMemory": 282591232, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:47:46 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/192604168/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            73
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 74
        }, 
        "testing": {
          "stepDurations": [
            260
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 260
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:36:22 PM", 
      "totalDuration": 678
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 986, 
        "numberRunning": 987, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.support.SpoonClassNotFoundException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/192969999", 
      "failureDetails": [
        {
          "failureName": "spoon.support.SpoonClassNotFoundException", 
          "detail": "cannot load class: NotInClasspath", 
          "isError": true, 
          "testMethod": "testNoClasspathSuperExecutable", 
          "testClass": "spoon.test.methodreference.MethodReferenceTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "spoon.test.methodreference.MethodReferenceTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193004144", 
        "date": "Jan 18, 2017 12:18:44 PM", 
        "id": 193004144
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/192969999", 
        "date": "Jan 18, 2017 10:33:42 AM", 
        "id": 192969999
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5b21903b4f51c530d58c33e1a8db419287469747", 
        "sha": "5b21903b4f51c530d58c33e1a8db419287469747", 
        "branchName": "master", 
        "date": "Jan 18, 2017 12:10:23 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac", 
        "sha": "b0b3d09fe50fa25f8d204e44816ff0c62f0b30ac", 
        "branchName": "master", 
        "date": "Jan 18, 2017 9:51:49 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-192969999-193004144", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 21, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_33", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 82a30e6..e6ceb9e 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -465,7 +465,14 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \tpublic Collection<CtExecutableReference<?>> getDeclaredExecutables() {\n \t\tCtType<T> t = getDeclaration();\n \t\tif (t == null) {\n-\t\t\treturn RtHelper.getAllExecutables(getActualClass(), getFactory());\n+\t\t\ttry {\n+\t\t\t\treturn RtHelper.getAllExecutables(getActualClass(), getFactory());\n+\t\t\t} catch (final SpoonClassNotFoundException e) {\n+\t\t\t\tif (getFactory().getEnvironment().getNoClasspath()) {\n+\t\t\t\t\treturn Collections.emptyList();\n+\t\t\t\t}\n+\t\t\t\tthrow e;\n+\t\t\t}\n \t\t} else {\n \t\t\treturn t.getDeclaredExecutables();\n \t\t}\n@@ -508,12 +515,19 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\tif (t != null) {\n \t\t\treturn t.getSuperclass();\n \t\t} else {\n-\t\t\tClass<T> c = getActualClass();\n-\t\t\tClass<?> sc = c.getSuperclass();\n-\t\t\tif (sc == null) {\n-\t\t\t\treturn null;\n+\t\t\ttry {\n+\t\t\t\tClass<T> c = getActualClass();\n+\t\t\t\tClass<?> sc = c.getSuperclass();\n+\t\t\t\tif (sc == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\treturn getFactory().Type().createReference(sc);\n+\t\t\t} catch (final SpoonClassNotFoundException e) {\n+\t\t\t\tif (getFactory().getEnvironment().getNoClasspath()) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\tthrow e;\n \t\t\t}\n-\t\t\treturn getFactory().Type().createReference(sc);\n \t\t}\n \t}\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 450, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 461, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 198377320, 
        "hostName": "local", 
        "totalMemory": 252182528, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:42:08 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/192969999/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            61
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 61
        }, 
        "testing": {
          "stepDurations": [
            211
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 211
        }, 
        "cloning": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:31:32 PM", 
      "totalDuration": 629
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 986, 
        "numberRunning": 987, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/193004144", 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 11, 
          "testClass": "spoon.test.comment.CommentTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testInLineComment", 
          "testClass": "spoon.test.comment.CommentTest", 
          "detail": "expected:<64> but was:<63>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193023299", 
        "date": "Jan 18, 2017 1:37:43 PM", 
        "id": 193023299
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/193004144", 
        "date": "Jan 18, 2017 12:18:44 PM", 
        "id": 193004144
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/dd5ff12d4c3ad1859224d0dd69b5a798af592d09", 
        "sha": "dd5ff12d4c3ad1859224d0dd69b5a798af592d09", 
        "branchName": "master", 
        "date": "Jan 18, 2017 1:29:18 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5b21903b4f51c530d58c33e1a8db419287469747", 
        "sha": "5b21903b4f51c530d58c33e1a8db419287469747", 
        "branchName": "master", 
        "date": "Jan 18, 2017 12:10:23 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-193004144-193023299", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 450, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 461, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 39, 
        "numberDeleted": 14
      }
    }, 
    "bugId": "Bears_34", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 9ed9258..e1921c0 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -185,6 +185,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t * Enters an expression.\n \t */\n \tprotected void enterCtExpression(CtExpression<?> e) {\n+\t\tif (!(e instanceof CtStatement)) {\n+\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n+\t\t}\n \t\tprinter.mapLine(e, sourceCompilationUnit);\n \t\tif (shouldSetBracket(e)) {\n \t\t\tcontext.parenthesedExpression.push(e);\n@@ -221,6 +224,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tcontext.parenthesedExpression.pop();\n \t\t\tprinter.write(\")\");\n \t\t}\n+\t\tif (!(e instanceof CtStatement)) {\n+\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n+\t\t}\n \t}\n \n \t/**\n@@ -507,9 +513,6 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \tpublic <T> void visitCtConditional(CtConditional<T> conditional) {\n \t\tenterCtExpression(conditional);\n \t\tCtExpression<Boolean> condition = conditional.getCondition();\n-\t\tif (!(condition instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(condition, CommentOffset.BEFORE);\n-\t\t}\n \t\tboolean parent;\n \t\ttry {\n \t\t\tparent = conditional.getParent() instanceof CtAssignment || conditional.getParent() instanceof CtVariable;\n@@ -524,18 +527,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\tif (parent) {\n \t\t\tprinter.write(\")\");\n \t\t}\n-\t\tif (!(condition instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(condition, CommentOffset.AFTER);\n-\t\t}\n \t\tprinter.write(\" ? \");\n \t\tCtExpression<T> thenExpression = conditional.getThenExpression();\n-\t\tif (!(thenExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(thenExpression, CommentOffset.BEFORE);\n-\t\t}\n \t\tscan(thenExpression);\n-\t\tif (!(thenExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(thenExpression, CommentOffset.AFTER);\n-\t\t}\n \t\tprinter.write(\" : \");\n \n \t\tCtExpression<T> elseExpression = conditional.getElseExpression();\n@@ -543,13 +537,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\tif ((isAssign = elseExpression instanceof CtAssignment)) {\n \t\t\tprinter.write(\"(\");\n \t\t}\n-\t\tif (!(elseExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(elseExpression, CommentOffset.BEFORE);\n-\t\t}\n \t\tscan(elseExpression);\n-\t\tif (!(elseExpression instanceof CtStatement)) {\n-\t\t\telementPrinterHelper.writeComment(elseExpression, CommentOffset.AFTER);\n-\t\t}\n \t\tif (isAssign) {\n \t\t\tprinter.write(\")\");\n \t\t}\n@@ -1188,7 +1176,6 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@SuppressWarnings(\"rawtypes\")\n \tpublic <T> void visitCtNewArray(CtNewArray<T> newArray) {\n \t\tenterCtExpression(newArray);\n-\t\telementPrinterHelper.writeComment(newArray, CommentOffset.BEFORE);\n \t\tboolean isNotInAnnotation;\n \t\ttry {\n \t\t\tisNotInAnnotation = (newArray.getParent(CtAnnotationType.class) == null) && (newArray.getParent(CtAnnotation.class) == null);\n@@ -1210,13 +1197,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\tprinter.write(\"[\");\n \t\t\t\tif (newArray.getDimensionExpressions().size() > i) {\n \t\t\t\t\tCtExpression<Integer> e = newArray.getDimensionExpressions().get(i);\n-\t\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n-\t\t\t\t\t}\n \t\t\t\t\tscan(e);\n-\t\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tprinter.write(\"]\");\n \t\t\t\tref = ((CtArrayTypeReference) ref).getComponentType();\n@@ -1227,21 +1208,16 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tList<CtExpression<?>> l_elements = newArray.getElements();\n \t\t\tfor (int i = 0; i < l_elements.size(); i++) {\n \t\t\t\tCtExpression e = l_elements.get(i);\n-\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.BEFORE);\n-\t\t\t\t}\n \t\t\t\tscan(e);\n \t\t\t\tprinter.write(\" , \");\n \t\t\t\tif (i + 1 == l_elements.size()) {\n-\t\t\t\t\t/*\n-\t\t\t\t\t * we have to remove last char before we writeComment.\n-\t\t\t\t\t * We cannot simply skip adding of \" , \",\n-\t\t\t\t\t * because it influences formatting and EOL too\n-\t\t\t\t\t */\n \t\t\t\t\tprinter.removeLastChar();\n-\t\t\t\t}\n-\t\t\t\tif (!(e instanceof CtStatement)) {\n-\t\t\t\t\telementPrinterHelper.writeComment(e, CommentOffset.AFTER);\n+\t\t\t\t\t// if the last element c\n+\t\t\t\t\tList<CtComment> comments = elementPrinterHelper.getComments(e, CommentOffset.AFTER);\n+\t\t\t\t\t// if the last element contains an inline comment, print a new line before closing the array\n+\t\t\t\t\tif (!comments.isEmpty() && comments.get(comments.size() - 1).getCommentType() == CtComment.CommentType.INLINE) {\n+\t\t\t\t\t\tprinter.insertLine();\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \ndiff --git a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\nindex f7fa778..23f33cd 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ParentExiter.java\n@@ -75,6 +75,7 @@ import spoon.reflect.code.CtUnaryOperator;\n import spoon.reflect.code.BinaryOperatorKind;\n import spoon.reflect.code.CtThisAccess;\n import spoon.reflect.code.CtLocalVariable;\n+import spoon.reflect.cu.SourcePosition;\n import spoon.reflect.declaration.CtAnnotation;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtExecutable;\n@@ -397,6 +398,10 @@ public class ParentExiter extends CtInheritanceScanner {\n \t\t\t\top.setLeftHandOperand(operator.getRightHandOperand());\n \t\t\t\top.setRightHandOperand((CtExpression<?>) child);\n \t\t\t\toperator.setRightHandOperand(op);\n+\t\t\t\tint[] lineSeparatorPositions = this.jdtTreeBuilder.getContextBuilder().compilationunitdeclaration.compilationResult.lineSeparatorPositions;\n+\t\t\t\tSourcePosition leftPosition = op.getLeftHandOperand().getPosition();\n+\t\t\t\tSourcePosition rightPosition = op.getRightHandOperand().getPosition();\n+\t\t\t\top.setPosition(op.getFactory().createSourcePosition(leftPosition.getCompilationUnit(), leftPosition.getSourceStart(), rightPosition.getSourceEnd(), lineSeparatorPositions));\n \t\t\t\treturn;\n \t\t\t}\n \t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 179444400, 
        "hostName": "local", 
        "totalMemory": 253755392, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:27:03 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/193004144/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            64
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 64
        }, 
        "testing": {
          "stepDurations": [
            230
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 230
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:17:18 PM", 
      "totalDuration": 577
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 995, 
        "numberRunning": 996, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/196963859", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The result should not contain import static: ", 
          "isError": false, 
          "testMethod": "testAutoimportModeDontImportUselessStatic", 
          "testClass": "spoon.test.prettyprinter.PrinterTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.prettyprinter.PrinterTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/196966996", 
        "date": "Jan 31, 2017 3:50:13 PM", 
        "id": 196966996
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/196963859", 
        "date": "Jan 31, 2017 3:41:53 PM", 
        "id": 196963859
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/23ba99df0825643a841941d7d764ed01ce7d952c", 
        "sha": "23ba99df0825643a841941d7d764ed01ce7d952c", 
        "branchName": "master", 
        "date": "Jan 31, 2017 3:41:49 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6bef9fd815d506f5ab48efdc1c902a0df2a26824", 
        "sha": "6bef9fd815d506f5ab48efdc1c902a0df2a26824", 
        "branchName": "master", 
        "date": "Jan 31, 2017 3:32:28 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-196963859-196966996", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 152, 
        "numberDeleted": 166
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_35", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 14baa95..f3dc890 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -16,6 +16,7 @@\n  */\n package spoon.reflect.visitor;\n \n+import spoon.reflect.code.CtBlock;\n import spoon.reflect.code.CtCatchVariable;\n import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n@@ -26,9 +27,13 @@ import spoon.reflect.declaration.CtClass;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtEnum;\n import spoon.reflect.declaration.CtExecutable;\n+import spoon.reflect.declaration.CtField;\n import spoon.reflect.declaration.CtInterface;\n+import spoon.reflect.declaration.CtMethod;\n+import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtTypeMember;\n+import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtExecutableReference;\n@@ -44,7 +49,11 @@ import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.TreeMap;\n \n /**\n@@ -63,6 +72,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t//top declaring type of that import\n \tprotected CtTypeReference<?> targetType;\n \tprivate Map<String, Boolean> namesPresentInJavaLang = new HashMap<>();\n+\tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n \n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n@@ -377,7 +387,11 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t */\n \tprivate boolean declaringTypeIsLocalOrImported(CtTypeReference declaringType) {\n \t\tif (declaringType != null) {\n-\t\t\tif (isImportedInClassImports(declaringType)) {\n+\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\n+\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n@@ -479,4 +493,146 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t}\n \t\treturn presentInJavaLang;\n \t}\n+\n+\tprotected Set<String> lookForLocalVariables(CtElement parent) {\n+\t\tSet<String> result = new HashSet<>();\n+\n+\t\t// try to get the block container\n+\t\t// if the first container is the class, then we are not in a block and we can quit now.\n+\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n+\t\t\tif (parent instanceof CtClass) {\n+\t\t\t\treturn result;\n+\t\t\t}\n+\t\t\tparent = parent.getParent();\n+\t\t}\n+\n+\t\tif (parent != null) {\n+\t\t\tCtBlock block = (CtBlock) parent;\n+\t\t\tboolean innerClass = false;\n+\n+\t\t\t// now we have the first container block, we want to check if we're not in an inner class\n+\t\t\twhile (parent != null && !(parent instanceof CtClass)) {\n+\t\t\t\tparent = parent.getParent();\n+\t\t\t}\n+\n+\t\t\tif (parent != null) {\n+\t\t\t\t// uhoh it's not a package as a parent, we must in an inner block:\n+\t\t\t\t// let's find the last block BEFORE the class call: some collision could occur because of variables defined in that block\n+\t\t\t\tif (!(parent.getParent() instanceof CtPackage)) {\n+\t\t\t\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (parent != null) {\n+\t\t\t\t\t\tblock = (CtBlock) parent;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tAccessibleVariablesFinder avf = new AccessibleVariablesFinder(block);\n+\t\t\tList<CtVariable> variables = avf.find();\n+\n+\t\t\tfor (CtVariable variable : variables) {\n+\t\t\t\tresult.add(variable.getSimpleName());\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * Test if the reference can be imported, i.e. test if the importation could lead to a collision.\n+\t * In FQN mode, it only tests the first package name: if a collision occurs with this first one, it should be imported.\n+\t * @param ref\n+\t * @return true if the ref should be imported.\n+\t */\n+\tprotected boolean isTypeInCollision(CtReference ref, boolean fqnMode) {\n+\t\tif (targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tCtElement parent;\n+\t\t\tif (ref instanceof CtTypeReference) {\n+\t\t\t\tparent = ref.getParent();\n+\t\t\t} else {\n+\t\t\t\tparent = ref;\n+\t\t\t}\n+\n+\t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n+\n+\t\t\tif (parent instanceof CtField) {\n+\t\t\t\tthis.fieldAndMethodsNames.add(((CtField) parent).getSimpleName());\n+\t\t\t} else if (parent instanceof CtMethod) {\n+\t\t\t\tthis.fieldAndMethodsNames.add(((CtMethod) parent).getSimpleName());\n+\t\t\t} else {\n+\t\t\t\tlocalVariablesOfBlock = this.lookForLocalVariables(parent);\n+\t\t\t}\n+\n+\t\t\twhile (!(parent instanceof CtPackage)) {\n+\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n+\t\t\t\t\tCtReference parentType = (CtReference) parent;\n+\t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n+\n+\t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n+\t\t\t\t\tif (parentType != parent) {\n+\t\t\t\t\t\tqualifiedNameTokens.add(parentType.getSimpleName());\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tCtTypeReference typeReference;\n+\t\t\t\t\tif (parent instanceof CtFieldReference) {\n+\t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (typeReference != null) {\n+\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n+\n+\t\t\t\t\t\tif (typeReference.getPackage() != null) {\n+\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n+\n+\t\t\t\t\t\t\twhile (ctPackage != null) {\n+\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n+\n+\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n+\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n+\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\tctPackage = null;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n+\t\t\t\t\t\t// qualified name token are ordered in the reverse order\n+\t\t\t\t\t\t// if the first package name is a variable name somewhere, it could lead to a collision\n+\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n+\t\t\t\t\t\t\tqualifiedNameTokens.removeLast();\n+\n+\t\t\t\t\t\t\tif (fqnMode) {\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n+\t\t\t\t\t\t\t\tfor (int i = qualifiedNameTokens.size() - 1; i > 0; i--) {\n+\t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n+\t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n+\t\t\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t}\n+\t\t\t\tparent = parent.getParent();\n+\t\t\t}\n+\t\t} catch (ParentNotInitializedException e) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n }\ndiff --git a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\nindex 65c9939..912692f 100644\n--- a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n+++ b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n@@ -16,94 +16,19 @@\n  */\n package spoon.reflect.visitor;\n \n-import spoon.reflect.code.CtBlock;\n-import spoon.reflect.declaration.CtClass;\n-import spoon.reflect.declaration.CtElement;\n-import spoon.reflect.declaration.CtField;\n-import spoon.reflect.declaration.CtMethod;\n-import spoon.reflect.declaration.CtPackage;\n-import spoon.reflect.declaration.CtVariable;\n-import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtFieldReference;\n import spoon.reflect.reference.CtReference;\n import spoon.reflect.reference.CtTypeReference;\n \n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Set;\n-\n /**\n  * A scanner dedicated to import only the necessary packages, @see spoon.test.variable.AccessFullyQualifiedTest\n  *\n  */\n public class MinimalImportScanner extends ImportScannerImpl implements ImportScanner {\n \n-\tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n-\n-\tprivate CtClass getParentClass(CtReference ref) {\n-\t\tCtElement parent = ref.getParent();\n-\n-\t\twhile (parent != null && !(parent instanceof CtClass)) {\n-\t\t\tparent = parent.getParent();\n-\t\t}\n-\n-\t\tif (parent == null) {\n-\t\t\treturn null;\n-\t\t} else {\n-\t\t\treturn (CtClass) parent;\n-\t\t}\n-\t}\n-\n-\tprivate Set<String> lookForLocalVariables(CtElement parent) {\n-\t\tSet<String> result = new HashSet<>();\n-\n-\t\t// try to get the block container\n-\t\t// if the first container is the class, then we are not in a block and we can quit now.\n-\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n-\t\t\tif (parent instanceof CtClass) {\n-\t\t\t\treturn result;\n-\t\t\t}\n-\t\t\tparent = parent.getParent();\n-\t\t}\n-\n-\t\tif (parent != null) {\n-\t\t\tCtBlock block = (CtBlock) parent;\n-\t\t\tboolean innerClass = false;\n-\n-\t\t\t// now we have the first container block, we want to check if we're not in an inner class\n-\t\t\twhile (parent != null && !(parent instanceof CtClass)) {\n-\t\t\t\tparent = parent.getParent();\n-\t\t\t}\n-\n-\t\t\tif (parent != null) {\n-\t\t\t\t// uhoh it's not a package as a parent, we must in an inner block:\n-\t\t\t\t// let's find the last block BEFORE the class call: some collision could occur because of variables defined in that block\n-\t\t\t\tif (!(parent.getParent() instanceof CtPackage)) {\n-\t\t\t\t\twhile (parent != null && !(parent instanceof CtBlock)) {\n-\t\t\t\t\t\tparent = parent.getParent();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif (parent != null) {\n-\t\t\t\t\t\tblock = (CtBlock) parent;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tAccessibleVariablesFinder avf = new AccessibleVariablesFinder(block);\n-\t\t\tList<CtVariable> variables = avf.find();\n-\n-\t\t\tfor (CtVariable variable : variables) {\n-\t\t\t\tresult.add(variable.getSimpleName());\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn result;\n-\t}\n-\n \t/**\n-\t * Test if the reference should be imported by looking if there is a name conflict\n+\t * This method use @link{ImportScannerImpl#isTypeInCollision} to import a ref only if there is a collision\n \t * @param ref\n \t * @return true if the ref should be imported.\n \t */\n@@ -113,74 +38,7 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \t\t\treturn true;\n \t\t}\n \n-\t\ttry {\n-\t\t\tCtElement parent;\n-\t\t\tif (ref instanceof CtTypeReference) {\n-\t\t\t\tparent = ref.getParent();\n-\t\t\t} else {\n-\t\t\t\tparent = ref;\n-\t\t\t}\n-\n-\t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n-\n-\t\t\tif (parent instanceof CtField) {\n-\t\t\t\tthis.fieldAndMethodsNames.add(((CtField) parent).getSimpleName());\n-\t\t\t} else if (parent instanceof CtMethod) {\n-\t\t\t\tthis.fieldAndMethodsNames.add(((CtMethod) parent).getSimpleName());\n-\t\t\t} else {\n-\t\t\t\tlocalVariablesOfBlock = this.lookForLocalVariables(parent);\n-\t\t\t}\n-\n-\t\t\twhile (!(parent instanceof CtPackage)) {\n-\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n-\t\t\t\t\tCtReference parentType = (CtReference) parent;\n-\t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n-\n-\t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n-\t\t\t\t\tif (parentType != parent) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(parentType.getSimpleName());\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tCtTypeReference typeReference;\n-\t\t\t\t\tif (parent instanceof CtFieldReference) {\n-\t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tif (typeReference != null) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n-\n-\t\t\t\t\t\tif (typeReference.getPackage() != null) {\n-\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n-\n-\t\t\t\t\t\t\twhile (ctPackage != null) {\n-\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n-\n-\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n-\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n-\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n-\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\tctPackage = null;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n-\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n-\t\t\t\t\t\t\treturn true;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\n-\t\t\t\t}\n-\t\t\t\tparent = parent.getParent();\n-\t\t\t}\n-\t\t} catch (ParentNotInitializedException e) {\n-\t\t\treturn false;\n-\t\t}\n-\n-\t\treturn false;\n+\t\treturn isTypeInCollision(ref, true);\n \t}\n \n \t@Override\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 63f58e0..2133fe5 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -265,19 +265,27 @@ public class ElementPrinterHelper {\n \t\t\t}\n \t\t\tprinter.writeln().writeln().writeTabs();\n \t\t\tfor (CtReference ref : imports) {\n+\t\t\t\tString importStr = \"import\";\n+\t\t\t\tString importTypeStr = \"\";\n+\n \t\t\t\tif (ref instanceof CtTypeReference) {\n \t\t\t\t\tCtTypeReference typeRef = (CtTypeReference) ref;\n-\t\t\t\t\tprinter.write(\"import \" + typeRef.getQualifiedName() + \";\").writeln().writeTabs();\n+\t\t\t\t\timportTypeStr = typeRef.getQualifiedName();\n \t\t\t\t} else if (ref instanceof CtExecutableReference) {\n+\t\t\t\t\timportStr += \" static\";\n \t\t\t\t\tCtExecutableReference execRef = (CtExecutableReference) ref;\n \t\t\t\t\tif (execRef.getDeclaringType() != null) {\n-\t\t\t\t\t\tprinter.write(\"import static \" + this.removeInnerTypeSeparator(execRef.getDeclaringType().getQualifiedName()) + \".\" + execRef.getSimpleName() + \";\").writeln().writeTabs();\n+\t\t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(execRef.getDeclaringType().getQualifiedName()) + \".\" + execRef.getSimpleName();\n \t\t\t\t\t}\n \t\t\t\t} else if (ref instanceof CtFieldReference) {\n+\t\t\t\t\timportStr += \" static\";\n \t\t\t\t\tCtFieldReference fieldRef = (CtFieldReference) ref;\n-\t\t\t\t\tprinter.write(\"import static \" + this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName() + \";\").writeln().writeTabs();\n+\t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName();\n \t\t\t\t}\n \n+\t\t\t\tif (!importTypeStr.equals(\"\")) {\n+\t\t\t\t\tprinter.write(importStr + \" \" + importTypeStr + \";\").writeln().writeTabs();\n+\t\t\t\t}\n \t\t\t}\n \t\t\tprinter.writeln().writeTabs();\n \t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 458, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 468, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 97585392, 
        "hostName": "local", 
        "totalMemory": 272629760, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:20:05 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/196963859/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            65
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 65
        }, 
        "testing": {
          "stepDurations": [
            270
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 270
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:08:12 PM", 
      "totalDuration": 706
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1000, 
        "numberRunning": 1001, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/197673696", 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "spoon.test.imports.ImportScannerTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testComputeImportsInClassWithSameName", 
          "testClass": "spoon.test.imports.ImportScannerTest", 
          "detail": "expected:<0> but was:<1>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197674087", 
        "date": "Feb 2, 2017 4:27:43 PM", 
        "id": 197674087
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197673696", 
        "date": "Feb 2, 2017 4:26:39 PM", 
        "id": 197673696
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/a727953e00ea1f8fa64b11cb2d237a709fd15e38", 
        "sha": "a727953e00ea1f8fa64b11cb2d237a709fd15e38", 
        "branchName": "master", 
        "date": "Feb 2, 2017 4:18:40 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3c03c32553a2eb0e5fea8e953a87c0bf5d57eb20", 
        "sha": "3c03c32553a2eb0e5fea8e953a87c0bf5d57eb20", 
        "branchName": "master", 
        "date": "Feb 2, 2017 4:17:45 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-197673696-197674087", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 461, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 470, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 8
      }
    }, 
    "bugId": "Bears_36", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex f3dc890..f5591cf 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -255,6 +255,13 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t * Adds a type to the classImports.\n \t */\n \tprotected boolean addClassImport(CtTypeReference<?> ref) {\n+\t\tif (ref == null) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tif (targetType != null && targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\t\treturn false;\n+\t\t}\n \t\tif (classImports.containsKey(ref.getSimpleName())) {\n \t\t\treturn isImportedInClassImports(ref);\n \t\t}\n@@ -277,6 +284,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t\t// we want to be sure that we are not importing a class because a static field or method we already imported\n \t\t// moreover we make exception for same package classes to avoid problems in FQN mode\n+\n \t\tif (targetType != null) {\n \t\t\ttry {\n \t\t\t\tCtElement parent = ref.getParent();\n@@ -341,7 +349,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\n \t\t//note: we must add the type refs from the same package too, to assure that isImported(typeRef) returns true for them\n \t\t//these type refs are removed in #getClassImports()\n \t\tclassImports.put(ref.getSimpleName(), ref);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 142754360, 
        "hostName": "local", 
        "totalMemory": 288358400, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:33:38 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/197673696/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            95
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 96
        }, 
        "testing": {
          "stepDurations": [
            294
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 294
        }, 
        "cloning": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:21:03 AM", 
      "totalDuration": 748
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1001, 
        "numberRunning": 1002, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/197674087", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The method in the interface must to be default", 
          "isError": false, 
          "testMethod": "testDefaultMethodInConsumer", 
          "testClass": "spoon.test.interfaces.InterfaceTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.interfaces.InterfaceTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/198523383", 
        "date": "Feb 5, 2017 11:23:59 AM", 
        "id": 198523383
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/197674087", 
        "date": "Feb 2, 2017 4:27:43 PM", 
        "id": 197674087
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/870a297e6b21673c5c62890cf4b57807dfaf3480", 
        "sha": "870a297e6b21673c5c62890cf4b57807dfaf3480", 
        "branchName": "master", 
        "date": "Feb 5, 2017 11:15:35 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/a727953e00ea1f8fa64b11cb2d237a709fd15e38", 
        "sha": "a727953e00ea1f8fa64b11cb2d237a709fd15e38", 
        "branchName": "master", 
        "date": "Feb 2, 2017 4:18:40 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-197674087-198523383", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 29, 
        "numberDeleted": 12
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_37", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\nindex 6ce5723..fe82d93 100644\n--- a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n+++ b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n@@ -245,6 +245,7 @@ public class JavaReflectionTreeBuilder extends JavaReflectionVisitorImpl {\n \t\tctMethod.setSimpleName(method.getName());\n \t\tctMethod.setBody(factory.Core().createBlock());\n \t\tsetModifier(ctMethod, method.getModifiers());\n+\t\tctMethod.setDefaultMethod(method.isDefault());\n \n \t\tenter(new ExecutableRuntimeBuilderContext(ctMethod));\n \t\tsuper.visitMethod(method);\ndiff --git a/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java b/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\nindex 727969e..d33761f 100644\n--- a/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\n+++ b/src/main/java/spoon/support/visitor/java/reflect/RtMethod.java\n@@ -17,12 +17,15 @@\n package spoon.support.visitor.java.reflect;\n \n import java.lang.annotation.Annotation;\n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.lang.reflect.TypeVariable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n+import spoon.SpoonException;\n+\n public class RtMethod {\n \tprivate Class<?> clazz;\n \tprivate String name;\n@@ -34,9 +37,10 @@ public class RtMethod {\n \tprivate Annotation[] annotations;\n \tprivate Annotation[][] parameterAnnotations;\n \tprivate boolean isVarArgs;\n+\tprivate boolean isDefault;\n \n \tpublic RtMethod(Class<?> clazz, String name, Class<?> returnType, TypeVariable<Method>[] typeParameters, Class<?>[] parameterTypes, Class<?>[] exceptionTypes, int modifiers, Annotation[] annotations,\n-\t\t\tAnnotation[][] parameterAnnotations, boolean isVarArgs) {\n+\t\t\tAnnotation[][] parameterAnnotations, boolean isVarArgs, boolean isDefault) {\n \t\tthis.clazz = clazz;\n \t\tthis.name = name;\n \t\tthis.returnType = returnType;\n@@ -47,6 +51,7 @@ public class RtMethod {\n \t\tthis.annotations = annotations;\n \t\tthis.parameterAnnotations = parameterAnnotations;\n \t\tthis.isVarArgs = isVarArgs;\n+\t\tthis.isDefault = isDefault;\n \t}\n \n \tpublic Class<?> getDeclaringClass() {\n@@ -89,6 +94,10 @@ public class RtMethod {\n \t\treturn isVarArgs;\n \t}\n \n+\tpublic boolean isDefault() {\n+\t\treturn isDefault;\n+\t}\n+\n \t@Override\n \tpublic boolean equals(Object o) {\n \t\tif (this == o) {\n@@ -120,7 +129,34 @@ public class RtMethod {\n \tpublic static RtMethod create(Method method) {\n \t\treturn new RtMethod(method.getDeclaringClass(), method.getName(), method.getReturnType(),\n \t\t\t\tmethod.getTypeParameters(), method.getParameterTypes(), method.getExceptionTypes(), method.getModifiers(),\n-\t\t\t\tmethod.getDeclaredAnnotations(), method.getParameterAnnotations(), method.isVarArgs());\n+\t\t\t\tmethod.getDeclaredAnnotations(), method.getParameterAnnotations(), method.isVarArgs(),\n+\t\t\t\t//spoon is compatible with Java 7, so compilation fails here\n+\t\t\t\t//method.isDefault());\n+\t\t\t\t_java8_isDefault(method));\n+\t}\n+\n+\tprivate static Method _method_isDefault;\n+\tstatic {\n+\t\ttry {\n+\t\t\t_method_isDefault = Method.class.getMethod(\"isDefault\");\n+\t\t} catch (NoSuchMethodException | SecurityException e) {\n+\t\t\t//spoon is running with java 7 JDK\n+\t\t\t_method_isDefault = null;\n+\t\t}\n+\t}\n+\n+\tprivate static boolean _java8_isDefault(Method method) {\n+\t\tif (_method_isDefault == null) {\n+\t\t\t//spoon is running with java 7 JDK, all methods are not default, because java 7 does not have default methods\n+\t\t\treturn false;\n+\t\t}\n+\t\ttry {\n+\t\t\treturn (Boolean) _method_isDefault.invoke(method);\n+\t\t} catch (IllegalAccessException | IllegalArgumentException e) {\n+\t\t\tthrow new SpoonException(\"Calling of Java8 Method#isDefault() failed\", e);\n+\t\t} catch (InvocationTargetException e) {\n+\t\t\tthrow new SpoonException(\"Calling of Java8 Method#isDefault() failed\", e.getTargetException());\n+\t\t}\n \t}\n \n \tpublic static <T> RtMethod[] methodsOf(Class<T> clazz) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 461, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 470, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 97150032, 
        "hostName": "local", 
        "totalMemory": 279445504, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:32:42 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/197674087/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 103
        }, 
        "testing": {
          "stepDurations": [
            283
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 283
        }, 
        "cloning": {
          "stepDurations": [
            20
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 20
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:19:47 AM", 
      "totalDuration": 768
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1002, 
        "numberRunning": 1005, 
        "numberFailing": 0, 
        "numberErroring": 3, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/199972949", 
      "failingClasses": [
        {
          "numberPassing": 18, 
          "numberRunning": 20, 
          "testClass": "spoon.test.lambda.LambdaTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.main.MainTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testCompileLambdaGeneratedBySpoon", 
          "testClass": "spoon.test.lambda.LambdaTest", 
          "detail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)", 
          "isError": true
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testGetOverriddenMethodWithFunction", 
          "testClass": "spoon.test.lambda.LambdaTest", 
          "detail": "The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)", 
          "isError": true
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testTest", 
          "testClass": "spoon.test.main.MainTest", 
          "detail": "spoon.SpoonException: The lambda can be based on interface, which has only one method. But spoon.test.lambda.testclasses.LambdaRxJava$NbpOperator has at least two: <T extends java.lang.Object> java.util.function.Function identity() and java.lang.Object apply(java.lang.Object)", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199993301", 
        "date": "Feb 9, 2017 3:35:45 PM", 
        "id": 199993301
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199972949", 
        "date": "Feb 9, 2017 2:32:36 PM", 
        "id": 199972949
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6", 
        "sha": "b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6", 
        "branchName": "master", 
        "date": "Feb 9, 2017 3:27:05 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/fb9016f48e167c188c604492befa23560173be7e", 
        "sha": "fb9016f48e167c188c604492befa23560173be7e", 
        "branchName": "master", 
        "date": "Feb 9, 2017 2:23:49 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-199972949-199993301", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 461, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 471, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_38", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java b/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\nindex cc74f8c..b52bf81 100644\n--- a/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtLambdaImpl.java\n@@ -109,7 +109,7 @@ public class CtLambdaImpl<T> extends CtExpressionImpl<T> implements CtLambda<T>\n \t\t\tlambdaExecutableMethod = lambdaTypeMethods.iterator().next();\n \t\t} else {\n \t\t\tfor (CtMethod<?> method : lambdaTypeMethods) {\n-\t\t\t\tif (method.isDefaultMethod() || method.hasModifier(ModifierKind.PRIVATE)) {\n+\t\t\t\tif (method.isDefaultMethod() || method.hasModifier(ModifierKind.PRIVATE) || method.hasModifier(ModifierKind.STATIC)) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (lambdaExecutableMethod != null) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 188174168, 
        "hostName": "local", 
        "totalMemory": 247988224, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:18:36 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/199972949/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            85
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 85
        }, 
        "testing": {
          "stepDurations": [
            273
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 273
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:06:02 AM", 
      "totalDuration": 746
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1023, 
        "numberRunning": 1028, 
        "numberFailing": 4, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }, 
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/199993301", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Test failed on VariableReferencesModelTest#localVarsInFor", 
          "isError": false, 
          "testMethod": "testVariableReferenceFunction", 
          "testClass": "spoon.test.query_function.VariableReferencesTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<1> but was:<0>", 
          "isError": false, 
          "testMethod": "testReferencesInInitExpression", 
          "testClass": "spoon.test.reference.VariableAccessTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "CtLocalVariableReference#getDeclaration returned wrong declaration in VariableReferencesModelTest#localVarInNestedClass expected:<23> but was:<25>", 
          "isError": false, 
          "testMethod": "testLocalVariableReferenceDeclarationFunction", 
          "testClass": "spoon.test.query_function.VariableReferencesTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Test failed on VariableReferencesModelTest#localVarsInFor", 
          "isError": false, 
          "testMethod": "testLocalVariableReferenceFunction", 
          "testClass": "spoon.test.query_function.VariableReferencesTest"
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "detail": "Cannot found index of local variable declaration int field = 10 in statement list {\n    for (int field = 10; field == 10;) {\n        org.junit.Assert.assertTrue((field == 10));\n        break;\n    }\n    int field = 11;\n    org.junit.Assert.assertTrue((field == 11));\n}", 
          "isError": true, 
          "testMethod": "testVariableScopeFunction", 
          "testClass": "spoon.test.query_function.VariableReferencesTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 7, 
          "testClass": "spoon.test.query_function.VariableReferencesTest", 
          "numberFailing": 3, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "spoon.test.reference.VariableAccessTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/200108848", 
        "date": "Feb 9, 2017 9:06:23 PM", 
        "id": 200108848
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/199993301", 
        "date": "Feb 9, 2017 3:35:45 PM", 
        "id": 199993301
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/05592e51945eb22dd570955c33c83a01d757bac8", 
        "sha": "05592e51945eb22dd570955c33c83a01d757bac8", 
        "branchName": "master", 
        "date": "Feb 9, 2017 8:53:14 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6", 
        "sha": "b63ac185bb5c83b60f1c1bdbc10aa9b4004ae3a6", 
        "branchName": "master", 
        "date": "Feb 9, 2017 3:27:05 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-199993301-200108848", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 2
      }, 
      "lines": {
        "numberAdded": 106, 
        "numberDeleted": 224
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_39", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java b/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\nindex d11477e..2c64708 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/LocalVariableReferenceFunction.java\n@@ -17,7 +17,10 @@\n package spoon.reflect.visitor.filter;\r\n \r\n import spoon.reflect.code.CtLocalVariable;\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.declaration.CtType;\r\n import spoon.reflect.reference.CtLocalVariableReference;\r\n+import spoon.reflect.visitor.Filter;\r\n import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n import spoon.reflect.visitor.chain.CtConsumer;\r\n \r\n@@ -40,10 +43,35 @@ public class LocalVariableReferenceFunction implements CtConsumableFunction<CtLo\n \t}\r\n \r\n \t@Override\r\n-\tpublic void apply(CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n+\tpublic void apply(final CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n+\t\tfinal String simpleName = localVariable.getSimpleName();\r\n+\t\tclass Context {\r\n+\t\t\tboolean hasLocalType = false;\r\n+\t\t}\r\n+\t\tfinal Context context = new Context();\r\n \t\tlocalVariable\r\n \t\t\t.map(new LocalVariableScopeFunction())\r\n-\t\t\t.select(new DirectReferenceFilter<CtLocalVariableReference<?>>(localVariable.getReference()))\r\n+\t\t\t.select(new Filter<CtElement>() {\r\n+\t\t\t\t@Override\r\n+\t\t\t\tpublic boolean matches(CtElement element) {\r\n+\t\t\t\t\tif (element instanceof CtType) {\r\n+\t\t\t\t\t\tcontext.hasLocalType = true;\r\n+\t\t\t\t\t} else if (element instanceof CtLocalVariableReference<?>) {\r\n+\t\t\t\t\t\tCtLocalVariableReference<?> localVarRef = (CtLocalVariableReference<?>) element;\r\n+\t\t\t\t\t\tif (simpleName.equals(localVarRef.getSimpleName())) {\r\n+\t\t\t\t\t\t\t//we have found a variable reference in visibility scope of localVariable\r\n+\t\t\t\t\t\t\tif (context.hasLocalType) {\r\n+\t\t\t\t\t\t\t\t//there exists a local type in visibility scope of this variable declaration\r\n+\t\t\t\t\t\t\t\t//the variable declarations in scope of this local class may shadow input localVariable\r\n+\t\t\t\t\t\t\t\t//so finally check that there is no other localVariable, which shadows the input localVariable\r\n+\t\t\t\t\t\t\t\treturn localVariable == localVarRef.getDeclaration();\r\n+\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\treturn true;\r\n+\t\t\t\t\t\t}\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\treturn false;\r\n+\t\t\t\t}\r\n+\t\t\t})\r\n \t\t\t.forEach(outputConsumer);\r\n \t}\r\n }\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java b/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\nindex f72fab4..1c2cfc8 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/LocalVariableScopeFunction.java\n@@ -16,15 +16,9 @@\n  */\r\n package spoon.reflect.visitor.filter;\r\n \r\n-import java.util.List;\r\n-\r\n-import spoon.SpoonException;\r\n import spoon.reflect.code.CtLocalVariable;\r\n-import spoon.reflect.code.CtStatement;\r\n-import spoon.reflect.code.CtStatementList;\r\n import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n import spoon.reflect.visitor.chain.CtConsumer;\r\n-import spoon.reflect.visitor.chain.CtQuery;\r\n \r\n /**\r\n  * This Query expects a {@link CtLocalVariable} as input\r\n@@ -50,22 +44,6 @@ public class LocalVariableScopeFunction implements CtConsumableFunction<CtLocalV\n \r\n \t@Override\r\n \tpublic void apply(CtLocalVariable<?> localVariable, CtConsumer<Object> outputConsumer) {\r\n-\t\tCtStatementList statements = localVariable.getParent(CtStatementList.class);\r\n-\t\tif (statements == null) {\r\n-\t\t\t//cannot search for variable references of variable which has no parent statement list/block\r\n-\t\t\treturn;\r\n-\t\t}\r\n-\t\t//create query which will be evaluated on each statement after local variable declaration\r\n-\t\tCtQuery query = localVariable.getFactory().createQuery().filterChildren(null);\r\n-\t\tList<CtStatement> stats = statements.getStatements();\r\n-\t\t//search for variable declaration in statements of current block\r\n-\t\tint idxOfVar = stats.indexOf(localVariable);\r\n-\t\tif (idxOfVar < 0) {\r\n-\t\t\tthrow new SpoonException(\"Cannot found index of local variable declaration \" + localVariable + \" in statement list \" + statements);\r\n-\t\t}\r\n-\t\t//scan only all elements AFTER this variable declaration\r\n-\t\tfor (int i = idxOfVar + 1; i < stats.size(); i++) {\r\n-\t\t\tquery.setInput(stats.get(i)).forEach(outputConsumer);\r\n-\t\t}\r\n+\t\tlocalVariable.map(new SiblingsFunction().mode(SiblingsFunction.Mode.NEXT).includingSelf(true)).filterChildren(null).forEach(outputConsumer);\r\n \t}\r\n }\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\nnew file mode 100644\nindex 0000000..12d93e4\n--- /dev/null\n+++ b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n@@ -0,0 +1,112 @@\n+/**\r\n+ * Copyright (C) 2006-2017 INRIA and contributors\r\n+ * Spoon - http://spoon.gforge.inria.fr/\r\n+ *\r\n+ * This software is governed by the CeCILL-C License under French law and\r\n+ * abiding by the rules of distribution of free software. You can use, modify\r\n+ * and/or redistribute the software under the terms of the CeCILL-C license as\r\n+ * circulated by CEA, CNRS and INRIA at http://www.cecill.info.\r\n+ *\r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.\r\n+ *\r\n+ * The fact that you are presently reading this means that you have had\r\n+ * knowledge of the CeCILL-C license and that you accept its terms.\r\n+ */\r\n+package spoon.reflect.visitor.filter;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import spoon.reflect.code.CtBodyHolder;\r\n+import spoon.reflect.code.CtCatch;\r\n+import spoon.reflect.code.CtStatementList;\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.declaration.CtExecutable;\r\n+import spoon.reflect.declaration.CtField;\r\n+import spoon.reflect.declaration.CtPackage;\r\n+import spoon.reflect.declaration.CtParameter;\r\n+import spoon.reflect.declaration.CtType;\r\n+import spoon.reflect.reference.CtFieldReference;\r\n+import spoon.reflect.reference.CtVariableReference;\r\n+import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n+import spoon.reflect.visitor.chain.CtConsumer;\r\n+import spoon.reflect.visitor.chain.CtQuery;\r\n+\r\n+/**\r\n+ * This Query expects a {@link CtVariableReference}, which represents reference to an variable, as input\r\n+ * and returns all {@link CtElement} instances, which might be a declaration of that variable reference\r\n+ * <br>\r\n+ * In other words, it returns all elements,\r\n+ * which might be declaration of input variable reference.\r\n+ * <br>\r\n+ * It returns {@link CtParameter} instances from methods, lambdas and catch blocks.\r\n+ * It returns {@link CtField} instances from wrapping classes and their super classes too.\r\n+ * <br>\r\n+ * The elements are visited in defined order. First are elements from nearest parent blocks,\r\n+ * then fields of wrapping classes, then fields of super classes, etc.\r\n+ * <br>\r\n+ * It can be used to search for variable declarations of\r\n+ * variable references and for detection of variable name conflicts\r\n+ * <br>\r\n+ * Usage:<br>\r\n+ * <pre> {@code\r\n+ * CtVariableReference varRef = ...;\r\n+ * varRef.map(new PotentialVariableDeclarationFunction()).forEach(...process result...);\r\n+ * }\r\n+ * </pre>\r\n+ */\r\n+public class PotentialVariableDeclarationFunction implements CtConsumableFunction<CtElement> {\r\n+\r\n+\tprivate boolean includingFields = true;\r\n+\r\n+\tpublic PotentialVariableDeclarationFunction() {\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void apply(CtElement input, CtConsumer<Object> outputConsumer) {\r\n+\t\t//Search previous siblings for element which may represents the declaration of this local variable\r\n+\t\tCtQuery siblingsQuery = input.getFactory().createQuery().map(new SiblingsFunction().mode(SiblingsFunction.Mode.PREVIOUS));\r\n+\r\n+\t\tCtElement scopeElement = input;\r\n+\t\t//Search input and then all parents until first CtPackage for element which may represents the declaration of this local variable\r\n+\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage)) {\r\n+\t\t\tCtElement parent = scopeElement.getParent();\r\n+\t\t\tif (parent instanceof CtType<?>) {\r\n+\t\t\t\tif (includingFields) {\r\n+\t\t\t\t\t//TODO replace getAllFields() followed by getFieldDeclaration, by direct visiting of fields of types in super classes.\r\n+\t\t\t\t\tCollection<CtFieldReference<?>> allFields = ((CtType<?>) parent).getAllFields();\r\n+\t\t\t\t\tfor (CtFieldReference<?> fieldReference : allFields) {\r\n+\t\t\t\t\t\toutputConsumer.accept(fieldReference.getFieldDeclaration());\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t} else if (parent instanceof CtBodyHolder || parent instanceof CtStatementList) {\r\n+\t\t\t\t//visit all previous siblings of scopeElement element in parent BodyHolder or Statement list\r\n+\t\t\t\tsiblingsQuery.setInput(scopeElement).forEach(outputConsumer);\r\n+\t\t\t\t//visit parameters of CtCatch and CtExecutable (method, lambda)\r\n+\t\t\t\tif (parent instanceof CtCatch) {\r\n+\t\t\t\t\tCtCatch ctCatch = (CtCatch) parent;\r\n+\t\t\t\t\toutputConsumer.accept(ctCatch.getParameter());\r\n+\t\t\t\t} else if (parent instanceof CtExecutable) {\r\n+\t\t\t\t\tCtExecutable<?> exec = (CtExecutable<?>) parent;\r\n+\t\t\t\t\tfor (CtParameter<?> param : exec.getParameters()) {\r\n+\t\t\t\t\t\toutputConsumer.accept(param);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tscopeElement = parent;\r\n+\t\t}\r\n+\t}\r\n+\r\n+\tpublic boolean isIncludingFields() {\r\n+\t\treturn includingFields;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param includingFields if true then CtFields of wrapping class and all super classes are returned too\r\n+\t */\r\n+\tpublic PotentialVariableDeclarationFunction includingFields(boolean includingFields) {\r\n+\t\tthis.includingFields = includingFields;\r\n+\t\treturn this;\r\n+\t}\r\n+}\r\ndiff --git a/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java b/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java\nnew file mode 100644\nindex 0000000..5075246\n--- /dev/null\n+++ b/src/main/java/spoon/reflect/visitor/filter/SiblingsFunction.java\n@@ -0,0 +1,90 @@\n+/**\r\n+ * Copyright (C) 2006-2017 INRIA and contributors\r\n+ * Spoon - http://spoon.gforge.inria.fr/\r\n+ *\r\n+ * This software is governed by the CeCILL-C License under French law and\r\n+ * abiding by the rules of distribution of free software. You can use, modify\r\n+ * and/or redistribute the software under the terms of the CeCILL-C license as\r\n+ * circulated by CEA, CNRS and INRIA at http://www.cecill.info.\r\n+ *\r\n+ * This program is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the CeCILL-C License for more details.\r\n+ *\r\n+ * The fact that you are presently reading this means that you have had\r\n+ * knowledge of the CeCILL-C license and that you accept its terms.\r\n+ */\r\n+package spoon.reflect.visitor.filter;\r\n+\r\n+import spoon.reflect.declaration.CtElement;\r\n+import spoon.reflect.visitor.CtScanner;\r\n+import spoon.reflect.visitor.chain.CtConsumableFunction;\r\n+import spoon.reflect.visitor.chain.CtConsumer;\r\n+\r\n+/**\r\n+ * visits siblings of input element.\r\n+ * The sibling is the element whose sibling.getParent()==input.getParent()\r\n+ * <br>\r\n+ * The siblings are visited in order in which they would be visited by CtScanner.\r\n+ * The input element is by default not visited. But if {@link #includingSelf(boolean)} is called with value true,\r\n+ * then input element is visited too in the order in which CtScanner would visit it.\r\n+ *\r\n+ *  The visiting order is relevant, because this scanner is used for example resolve local variable declarations.\r\n+ */\r\n+public class SiblingsFunction implements CtConsumableFunction<CtElement> {\r\n+\r\n+\t/**\r\n+\t * Defines visiting mode\r\n+\t */\r\n+\tpublic enum Mode {\r\n+\t\tALL,\t//all siblings are visited\r\n+\t\tPREVIOUS, //only previous siblings of input element\r\n+\t\tNEXT\t//only next siblings of input element\r\n+\t}\r\n+\r\n+\tprivate Mode mode = Mode.ALL;\r\n+\tprivate boolean includingSelf = false;\r\n+\r\n+\tpublic SiblingsFunction() {\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param includingSelf if false then input element is not visited\r\n+\t */\r\n+\tpublic SiblingsFunction includingSelf(boolean includingSelf) {\r\n+\t\tthis.includingSelf = includingSelf;\r\n+\t\treturn this;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * @param mode defines which siblings will be visited. See {@link Mode} for possible values\r\n+\t */\r\n+\tpublic SiblingsFunction mode(Mode mode) {\r\n+\t\tthis.mode = mode;\r\n+\t\treturn this;\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void apply(final CtElement input, final CtConsumer<Object> outputConsumer) {\r\n+\t\tfinal CtElement parent = input.getParent();\r\n+\t\tparent.accept(new CtScanner() {\r\n+\t\t\tboolean hasVisitedInput = false;\r\n+\t\t\tboolean visitPrev = mode == Mode.ALL || mode == Mode.PREVIOUS;\r\n+\t\t\tboolean visitNext = mode == Mode.ALL || mode == Mode.NEXT;\r\n+\t\t\t@Override\r\n+\t\t\tpublic void scan(CtElement element) {\r\n+\t\t\t\tif (element != null && element.getParent() == parent) {\r\n+\t\t\t\t\t//visit only elements whose parent is same\r\n+\t\t\t\t\tboolean canVisit = hasVisitedInput ? visitNext : visitPrev;\r\n+\t\t\t\t\tif (input == element) {\r\n+\t\t\t\t\t\thasVisitedInput = true;\r\n+\t\t\t\t\t\tcanVisit = includingSelf;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t\tif (canVisit) {\r\n+\t\t\t\t\t\toutputConsumer.accept(element);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t});\r\n+\t}\r\n+}\r\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\nindex 6711d33..3bd5259 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtLocalVariableReferenceImpl.java\n@@ -17,15 +17,13 @@\n package spoon.support.reflect.reference;\n \n import spoon.reflect.code.CtLocalVariable;\n-import spoon.reflect.declaration.CtElement;\n-import spoon.reflect.declaration.CtPackage;\n+import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.factory.Factory;\n import spoon.reflect.reference.CtLocalVariableReference;\n import spoon.reflect.visitor.CtVisitor;\n-import spoon.reflect.visitor.filter.AbstractFilter;\n-\n-import java.util.List;\n+import spoon.reflect.visitor.Filter;\n+import spoon.reflect.visitor.filter.PotentialVariableDeclarationFunction;\n \n /**\n  * An implementation for {@link CtLocalVariableReference}.\n@@ -50,6 +48,7 @@ public class CtLocalVariableReferenceImpl<T>\n \t\tvisitor.visitCtLocalVariableReference(this);\n \t}\n \n+\t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic CtLocalVariable<T> getDeclaration() {\n \t\t// without a factory, we are not able to filter for local variables\n@@ -57,30 +56,35 @@ public class CtLocalVariableReferenceImpl<T>\n \t\tif (factory == null) {\n \t\t\treturn null;\n \t\t}\n-\t\tfinal SimpleNameFilter filter = new SimpleNameFilter();\n \n-\t\t// successively iterate through all parents of this reference and\n-\t\t// return first result (which must be the closest declaration\n-\t\t// respecting visible scope)\n+\t\tfinal String simpleName = getSimpleName();\n+\n+\t\t//handle the CtLocalVariableReference which were created by CtLocalVariable#getReference() and which are not yet part of model, so we cannot found them using standard rules\n+\t\tif (parent instanceof CtLocalVariable) {\n+\t\t\tCtLocalVariable<T> var = (CtLocalVariable<T>) parent;\n+\t\t\tif (simpleName.equals(var.getSimpleName())) {\n+\t\t\t\treturn var;\n+\t\t\t}\n+\t\t}\n \t\ttry {\n-\t\t\tCtElement parent = getParent();\n-\t\t\t// stop at `package` level to avoid lookups to foreign Java files\n-\t\t\twhile (parent != null && !(parent instanceof CtPackage)) {\n-\t\t\t\tfinal List<CtLocalVariable<T>> localVariables =\n-\t\t\t\t\t\tparent.getElements(filter);\n-\t\t\t\t// since `parent` may be a class declaring multiple local\n-\t\t\t\t// variables with same name in different methods, we have to\n-\t\t\t\t// check if any of the findings is visible in current scope by\n-\t\t\t\t// validating that the parent of a finding is parent of this\n-\t\t\t\t// reference as well\n-\t\t\t\tfor (final CtLocalVariable<T> lv : localVariables) {\n-\t\t\t\t\tif (getParent().equals(lv) || hasParent(lv.getParent())) {\n-\t\t\t\t\t\treturn lv;\n-\t\t\t\t\t}\n+\t\t\t// successively iterate through all parents of this reference and\n+\t\t\t// return first result (which must be the closest declaration\n+\t\t\t// respecting visible scope)\n+\t\t\tCtVariable<?> var = map(new PotentialVariableDeclarationFunction()).select(new Filter<CtVariable<?>>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic boolean matches(CtVariable<?> var) {\n+\t\t\t\t\treturn simpleName.equals(var.getSimpleName());\n \t\t\t\t}\n-\t\t\t\tparent = parent.getParent();\n+\t\t\t}).first();\n+\t\t\tif (var instanceof CtLocalVariable) {\n+\t\t\t\treturn (CtLocalVariable<T>) var;\n \t\t\t}\n-\t\t} catch (final ParentNotInitializedException e) {\n+\t\t\tif (var != null) {\n+\t\t\t\t//we have found another variable declaration with same simple name, which hides declaration of this local variable reference\n+\t\t\t\t//handle it as not found\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t} catch (ParentNotInitializedException e) {\n \t\t\t// handle this case as 'not found'\n \t\t}\n \t\treturn null;\n@@ -90,22 +94,4 @@ public class CtLocalVariableReferenceImpl<T>\n \tpublic CtLocalVariableReference<T> clone() {\n \t\treturn (CtLocalVariableReference<T>) super.clone();\n \t}\n-\n-\t/**\n-\t * A {@link spoon.reflect.visitor.Filter} that filters all\n-\t * {@link CtLocalVariable}s with simple name equals to\n-\t * {@link #getSimpleName()}.\n-\t */\n-\tprivate final class SimpleNameFilter\n-\t\t\textends AbstractFilter<CtLocalVariable<T>> {\n-\n-\t\tSimpleNameFilter() {\n-\t\t\tsuper();\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean matches(final CtLocalVariable<T> element) {\n-\t\t\treturn element.getSimpleName().equals(getSimpleName());\n-\t\t}\n-\t}\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 463, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 473, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 128588560, 
        "hostName": "local", 
        "totalMemory": 274726912, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:18:45 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/199993301/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            85
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 85
        }, 
        "testing": {
          "stepDurations": [
            285
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 285
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:05:48 AM", 
      "totalDuration": 769
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1017, 
        "numberRunning": 1022, 
        "numberFailing": 1, 
        "numberErroring": 4, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/201940544", 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 25, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 1, 
          "numberErroring": 3, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.main.MainTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testSpoonWithImports", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5", 
          "isError": true
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testTest", 
          "testClass": "spoon.test.main.MainTest", 
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5", 
          "isError": true
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testImportOfAnInnerClassInASuperClassPackageAutoImport", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5", 
          "isError": true
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testImportOfAnInnerClassInASuperClassPackageFullQualified", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "spoon.SpoonException: Cannot compute access path to type: spoon.test.imports.testclasses.internal.SuperClass$ProtectedInterface$NestedOfProtectedInterface in context of type: spoon.test.imports.testclasses.ClientClass$InnerClass5", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testCanAccess", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "ClientClass should have access to spoon.test.imports.testclasses.internal.PublicInterface2$NestedInterface but it has not", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/203101555", 
        "date": "Feb 19, 2017 8:42:14 AM", 
        "id": 203101555
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/201940544", 
        "date": "Feb 15, 2017 6:14:42 PM", 
        "id": 201940544
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/92cedf9af2909264092eff8d75069d74e9368ea6", 
        "sha": "92cedf9af2909264092eff8d75069d74e9368ea6", 
        "branchName": "master", 
        "date": "Feb 19, 2017 8:33:22 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e5665b160f66a421bcf48c7625401a3d292bcb21", 
        "sha": "e5665b160f66a421bcf48c7625401a3d292bcb21", 
        "branchName": "master", 
        "date": "Feb 15, 2017 6:01:30 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-201940544-203101555", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 463, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 469, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 21, 
        "numberDeleted": 28
      }
    }, 
    "bugId": "Bears_40", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\nindex 95dfeb2..4d39fac 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeReferenceImpl.java\n@@ -264,6 +264,22 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t}\n \t}\n \n+\t/**\n+\t * Detects if this type is an code responsible for implementing of that type.<br>\n+\t * In means it detects whether this type can access protected members of that type\n+\t * @return true if this type or any declaring type recursively is subtype of type or directly is the type.\n+\t */\n+\tprivate boolean isImplementationOf(CtTypeReference<?> type) {\n+\t\tCtTypeReference<?> impl = this;\n+\t\twhile (impl != null) {\n+\t\t\tif (impl.isSubtypeOf(type)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t\timpl = impl.getDeclaringType();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \t@Override\n \tpublic <C extends CtActualTypeContainer> C setActualTypeArguments(List<? extends CtTypeReference<?>> actualTypeArguments) {\n \t\tif (actualTypeArguments == null || actualTypeArguments.isEmpty()) {\n@@ -621,21 +637,36 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t\t\treturn true;\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PROTECTED)) {\n-\t\t\t\tif (isSubtypeOf(type)) {\n-\t\t\t\t\t//is visible in subtypes\n+\t\t\t\t//the accessed type is protected in scope of declaring type.\n+\t\t\t\tCtTypeReference<?> declaringType = type.getDeclaringType();\n+\t\t\t\tif (declaringType == null) {\n+\t\t\t\t\t//top level type cannot be protected. So this is a model inconsistency.\n+\t\t\t\t\tthrow new SpoonException(\"The protected class \" + type.getQualifiedName() + \" has no declaring class.\");\n+\t\t\t\t}\n+\t\t\t\tif (isImplementationOf(declaringType)) {\n+\t\t\t\t\t//type is visible in code which implements declaringType\n \t\t\t\t\treturn true;\n \t\t\t\t} //else it is visible in same package, like package protected\n+\t\t\t\treturn isInSamePackage(type);\n \t\t\t}\n \t\t\tif (modifiers.contains(ModifierKind.PRIVATE)) {\n \t\t\t\t//it is visible in scope of the same class only\n \t\t\t\treturn type.getTopLevelType().getQualifiedName().equals(this.getTopLevelType().getQualifiedName());\n \t\t\t}\n-\t\t\t//package protected\n-\t\t\tif (type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName())) {\n-\t\t\t\t//visible only in scope of the same package\n+\t\t\t/*\n+\t\t\t * no modifier, we have to check if it is nested type and if yes, if parent is interface or class.\n+\t\t\t * In case of no parent then implicit access is package protected\n+\t\t\t * In case of parent is interface, then implicit access is PUBLIC\n+\t\t\t * In case of parent is class, then implicit access is package protected\n+\t\t\t */\n+\t\t\tCtTypeReference<?> declaringTypeRef = type.getDeclaringType();\n+\t\t\tif (declaringTypeRef != null && declaringTypeRef.isInterface()) {\n+\t\t\t\t//the declaring type is interface, then implicit access is PUBLIC\n \t\t\t\treturn true;\n \t\t\t}\n-\t\t\treturn false;\n+\t\t\t//package protected\n+\t\t\t//visible only in scope of the same package\n+\t\t\treturn isInSamePackage(type);\n \t\t} catch (SpoonClassNotFoundException e) {\n \t\t\thandleParentNotFound(e);\n \t\t\t//if the modifiers cannot be resolved then we expect that it is visible\n@@ -643,6 +674,10 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \t\t}\n \t}\n \n+\tprivate boolean isInSamePackage(CtTypeReference<?> type) {\n+\t\treturn type.getTopLevelType().getPackage().getSimpleName().equals(this.getTopLevelType().getPackage().getSimpleName());\n+\t}\n+\n \t@Override\n \tpublic CtTypeReference<?> getTopLevelType() {\n \t\tCtTypeReference<?> type = this;\n@@ -659,7 +694,7 @@ public class CtTypeReferenceImpl<T> extends CtReferenceImpl implements CtTypeRef\n \tpublic CtTypeReference<?> getAccessType() {\n \t\tCtTypeReference<?> declType = this.getDeclaringType();\n \t\tif (declType == null) {\n-\t\t\tthrow new SpoonException(\"The nestedType is expected, but it is: \" + getQualifiedName());\n+\t\t\tthrow new SpoonException(\"The declaring type is expected, but \" + getQualifiedName() + \" is top level type\");\n \t\t}\n \t\tCtType<?> contextType = getParent(CtType.class);\n \t\tif (contextType == null) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 101301248, 
        "hostName": "local", 
        "totalMemory": 296222720, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 8:05:21 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/201940544/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            69
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 70
        }, 
        "testing": {
          "stepDurations": [
            259
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 259
        }, 
        "cloning": {
          "stepDurations": [
            20
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 20
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:53:35 AM", 
      "totalDuration": 700
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1021, 
        "numberRunning": 1024, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/204567691", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[android.content.]DialogInterface$OnCl...> but was:<[]DialogInterface$OnCl...>", 
          "isError": false, 
          "testMethod": "test", 
          "testClass": "spoon.test.type.TypeTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<new [com.example.]Type[list.size()]> but was:<new []Type[list.size()]>", 
          "isError": false, 
          "testMethod": "testInitializeWithNewArray", 
          "testClass": "spoon.test.arrays.ArraysTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[org.apache.lucene.store.]Lock$With> but was:<[]Lock$With>", 
          "isError": false, 
          "testMethod": "testCtNewClassInNoClasspath", 
          "testClass": "spoon.test.constructorcallnewclass.NewClassTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 7, 
          "testClass": "spoon.test.constructorcallnewclass.NewClassTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 11, 
          "numberRunning": 12, 
          "testClass": "spoon.test.type.TypeTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "spoon.test.arrays.ArraysTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/207361743", 
        "date": "Mar 3, 2017 2:53:53 PM", 
        "id": 207361743
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/204567691", 
        "date": "Feb 23, 2017 1:46:32 PM", 
        "id": 204567691
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6433c2c6641e4e3eb172d04cb39ac5373b38ed74", 
        "sha": "6433c2c6641e4e3eb172d04cb39ac5373b38ed74", 
        "branchName": "master", 
        "date": "Mar 3, 2017 2:44:31 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e7acf58718e88be92e7a50531510a152df03504d", 
        "sha": "e7acf58718e88be92e7a50531510a152df03504d", 
        "branchName": "master", 
        "date": "Feb 23, 2017 1:26:35 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-204567691-207361743", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 7
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_41", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 41a22b3..58f0d86 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -84,6 +84,7 @@ import spoon.reflect.code.CtLambda;\n import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtParameter;\n import spoon.reflect.declaration.ModifierKind;\n+import spoon.reflect.factory.PackageFactory;\n import spoon.reflect.reference.CtArrayTypeReference;\n import spoon.reflect.reference.CtCatchVariableReference;\n import spoon.reflect.reference.CtExecutableReference;\n@@ -532,10 +533,11 @@ public class ReferenceBuilder {\n \t\tif (res == null) {\n \t\t\treturn this.jdtTreeBuilder.getFactory().Type().createReference(CharOperation.toString(ref.getParameterizedTypeName()));\n \t\t}\n-\t\tCtPackageReference packageReference = index >= 0\n-\t\t\t\t? this.jdtTreeBuilder.getFactory().Package().getOrCreate(concatSubArray(namesParameterized, index)).getReference()\n-\t\t\t\t: this.jdtTreeBuilder.getFactory().Package().topLevel();\n-\t\tinner.setPackage(packageReference);\n+\t\tif (inner.getPackage() == null) {\n+\t\t\tPackageFactory packageFactory = this.jdtTreeBuilder.getFactory().Package();\n+\t\t\tCtPackageReference packageReference = index >= 0 ? packageFactory.getOrCreate(concatSubArray(namesParameterized, index)).getReference() : packageFactory.topLevel();\n+\t\t\tinner.setPackage(packageReference);\n+\t\t}\n \t\treturn res;\n \t}\n \n@@ -572,6 +574,8 @@ public class ReferenceBuilder {\n \t\t} else if (Character.isUpperCase(name.charAt(0))) {\n \t\t\tmain = this.jdtTreeBuilder.getFactory().Core().createTypeReference();\n \t\t\tmain.setSimpleName(name);\n+\t\t\tfinal CtReference declaring = this.getDeclaringReferenceFromImports(name.toCharArray());\n+\t\t\tsetPackageOrDeclaringType(main, declaring);\n \t\t} else if (name.startsWith(\"?\")) {\n \t\t\treturn (CtTypeReference) this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n \t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 463, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 469, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 164877992, 
        "hostName": "local", 
        "totalMemory": 247463936, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:52:52 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/204567691/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            80
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 81
        }, 
        "testing": {
          "stepDurations": [
            282
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 282
        }, 
        "cloning": {
          "stepDurations": [
            20
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 20
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:40:15 AM", 
      "totalDuration": 751
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1026, 
        "numberRunning": 1027, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.reflect.declaration.ParentNotInitializedException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/210079209", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.reflect.declaration.ParentNotInitializedException", 
          "testMethod": "testPrintCtFieldAccessWorkEvenWhenParentNotInitialized", 
          "testClass": "spoon.test.prettyprinter.QualifiedThisRefTest", 
          "detail": "parent not initialized for class spoon.support.reflect.code.CtInvocationImpl (unknown file)", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/210080599", 
        "date": "Mar 11, 2017 5:48:52 PM", 
        "id": 210080599
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/210079209", 
        "date": "Mar 11, 2017 5:40:40 PM", 
        "id": 210079209
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/6d7af94b1e5cd9295c379ecfa886cacd97af7a9a", 
        "sha": "6d7af94b1e5cd9295c379ecfa886cacd97af7a9a", 
        "branchName": "master", 
        "date": "Mar 11, 2017 5:40:44 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/24ccd7213761c97d2de8586a48cc49c500ffd740", 
        "sha": "24ccd7213761c97d2de8586a48cc49c500ffd740", 
        "branchName": "master", 
        "date": "Mar 11, 2017 5:32:15 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-210079209-210080599", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 469, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 469, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_42", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\nindex 12d93e4..842b070 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/PotentialVariableDeclarationFunction.java\n@@ -70,7 +70,7 @@ public class PotentialVariableDeclarationFunction implements CtConsumableFunctio\n \r\n \t\tCtElement scopeElement = input;\r\n \t\t//Search input and then all parents until first CtPackage for element which may represents the declaration of this local variable\r\n-\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage)) {\r\n+\t\twhile (scopeElement != null && !(scopeElement instanceof CtPackage) && scopeElement.isParentInitialized()) {\r\n \t\t\tCtElement parent = scopeElement.getParent();\r\n \t\t\tif (parent instanceof CtType<?>) {\r\n \t\t\t\tif (includingFields) {\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 175543448, 
        "hostName": "local", 
        "totalMemory": 251658240, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:38:20 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/210079209/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            74
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 74
        }, 
        "testing": {
          "stepDurations": [
            202
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 202
        }, 
        "cloning": {
          "stepDurations": [
            21
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 21
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:29:54 AM", 
      "totalDuration": 498
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1026, 
        "numberRunning": 1028, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/211086222", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<3> but was:<2>", 
          "isError": false, 
          "testMethod": "testOverridingMethodFromSubClassOfAbstractClass", 
          "testClass": "spoon.test.filters.FilterTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<1> but was:<0>", 
          "isError": false, 
          "testMethod": "testOverridingMethodFromSubClassOfInterface", 
          "testClass": "spoon.test.filters.FilterTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 37, 
          "numberRunning": 39, 
          "testClass": "spoon.test.filters.FilterTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211090498", 
        "date": "Mar 14, 2017 9:12:55 PM", 
        "id": 211090498
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211086222", 
        "date": "Mar 14, 2017 9:01:01 PM", 
        "id": 211086222
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/286e6e993ab642e2e4331ba4573eadab5ca12b1c", 
        "sha": "286e6e993ab642e2e4331ba4573eadab5ca12b1c", 
        "branchName": "master", 
        "date": "Mar 14, 2017 9:04:50 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f87ba4fe585aa93f9ec950b08179b5a1411e1e28", 
        "sha": "f87ba4fe585aa93f9ec950b08179b5a1411e1e28", 
        "branchName": "master", 
        "date": "Mar 14, 2017 8:53:04 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-211086222-211090498", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_43", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\nindex 68438c4..bad7238 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n@@ -236,11 +236,7 @@ public class CtExecutableReferenceImpl<T> extends CtReferenceImpl implements CtE\n \t\tif (!isSame) {\n \t\t\treturn false;\n \t\t}\n-\t\tif (getDeclaringType().isAnonymous()) {\n-\t\t\tif (!getDeclaringType().getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t} else if (!getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n+\t\tif (!getDeclaringType().isSubtypeOf(executable.getDeclaringType())) {\n \t\t\treturn false;\n \t\t}\n \t\treturn true;\n", 
    "projectMetrics": {
      "numberSourceFiles": 469, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 470, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144297976, 
        "hostName": "local", 
        "totalMemory": 285212672, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:36:50 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/211086222/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            67
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 67
        }, 
        "testing": {
          "stepDurations": [
            181
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 181
        }, 
        "cloning": {
          "stepDurations": [
            21
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 21
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:28:11 AM", 
      "totalDuration": 511
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1028, 
        "numberRunning": 1029, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/211090498", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "spoon.test.ctBlock.TestCtBlock", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testRemoveStatement", 
          "isError": false, 
          "testClass": "spoon.test.ctBlock.TestCtBlock"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211342085", 
        "date": "Mar 15, 2017 2:22:34 PM", 
        "id": 211342085
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211090498", 
        "date": "Mar 14, 2017 9:12:55 PM", 
        "id": 211090498
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/561853c421c1e8fc6b3cdd3b3837bf8c2940020a", 
        "sha": "561853c421c1e8fc6b3cdd3b3837bf8c2940020a", 
        "branchName": "master", 
        "date": "Mar 15, 2017 2:13:01 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/286e6e993ab642e2e4331ba4573eadab5ca12b1c", 
        "sha": "286e6e993ab642e2e4331ba4573eadab5ca12b1c", 
        "branchName": "master", 
        "date": "Mar 14, 2017 9:04:50 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-211090498-211342085", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 469, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 472, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 17, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_44", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/code/CtBlockImpl.java b/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\nindex 1e289a5..64700e7 100644\n--- a/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtBlockImpl.java\n@@ -190,7 +190,23 @@ public class CtBlockImpl<R> extends CtStatementImpl implements CtBlock<R> {\n \t@Override\n \tpublic void removeStatement(CtStatement statement) {\n \t\tif (this.statements != CtElementImpl.<CtStatement>emptyList()) {\n-\t\t\tthis.statements.remove(statement);\n+\n+\t\t\tboolean hasBeenRemoved = false;\n+\t\t\t// we cannot use a remove(statement) as it uses the equals\n+\t\t\t// and a block can have twice exactly the same statement.\n+\t\t\tfor (int i = 0; i < this.statements.size(); i++) {\n+\t\t\t\tif (this.statements.get(i) == statement) {\n+\t\t\t\t\tthis.statements.remove(i);\n+\t\t\t\t\thasBeenRemoved = true;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// in case we use it with a statement manually built\n+\t\t\tif (!hasBeenRemoved) {\n+\t\t\t\tthis.statements.remove(statement);\n+\t\t\t}\n+\n \t\t\tif (isImplicit() && statements.size() == 0) {\n \t\t\t\tsetImplicit(false);\n \t\t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 154958136, 
        "hostName": "local", 
        "totalMemory": 248512512, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:27:51 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/211090498/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            73
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 73
        }, 
        "testing": {
          "stepDurations": [
            193
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 193
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:19:52 AM", 
      "totalDuration": 474
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1029, 
        "numberRunning": 1031, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/211342085", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<public static final java.lang.String PREFIX = \"BasePrefix\";> but was:<public static final java.lang.String PREFIX = (spoon.test.field.testclasses.BaseClass.PREFIX) + \".b\";>", 
          "isError": false, 
          "testMethod": "testGetDefaultExpression", 
          "testClass": "spoon.test.field.FieldTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "isError": false, 
          "testClass": "spoon.test.reference.CloneReferenceTest", 
          "testMethod": "testGetDeclarationOfFieldAfterClone"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "spoon.test.reference.CloneReferenceTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "spoon.test.field.FieldTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211425556", 
        "date": "Mar 15, 2017 5:52:56 PM", 
        "id": 211425556
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/211342085", 
        "date": "Mar 15, 2017 2:22:34 PM", 
        "id": 211342085
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f818e07e0713e20a4cb40dae32a8c7579d8bf140", 
        "sha": "f818e07e0713e20a4cb40dae32a8c7579d8bf140", 
        "branchName": "master", 
        "date": "Mar 15, 2017 5:44:35 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/561853c421c1e8fc6b3cdd3b3837bf8c2940020a", 
        "sha": "561853c421c1e8fc6b3cdd3b3837bf8c2940020a", 
        "branchName": "master", 
        "date": "Mar 15, 2017 2:13:01 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-211342085-211425556", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 4, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 32, 
        "numberDeleted": 6
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_45", 
    "diff": "diff --git a/src/main/java/spoon/refactoring/Refactoring.java b/src/main/java/spoon/refactoring/Refactoring.java\nindex 398b076..fce0c5f 100644\n--- a/src/main/java/spoon/refactoring/Refactoring.java\n+++ b/src/main/java/spoon/refactoring/Refactoring.java\n@@ -36,10 +36,14 @@ public final class Refactoring {\n \t * \t\tNew name of the element.\n \t */\n \tpublic static void changeTypeName(final CtType<?> type, String name) {\n+\n+\t\tfinal String typeQFN = type.getQualifiedName();\n+\n \t\tfinal List<CtTypeReference<?>> references = Query.getElements(type.getFactory(), new TypeFilter<CtTypeReference<?>>(CtTypeReference.class) {\n \t\t\t@Override\n \t\t\tpublic boolean matches(CtTypeReference<?> reference) {\n-\t\t\t\treturn type.getQualifiedName().equals(reference.getQualifiedName());\n+\t\t\t\tString refFQN = reference.getQualifiedName();\n+\t\t\t\treturn typeQFN.equals(refFQN);\n \t\t\t}\n \t\t});\n \ndiff --git a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\nindex 96ba423..7039feb 100644\n--- a/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n+++ b/src/main/java/spoon/support/compiler/SnippetCompilationHelper.java\n@@ -91,9 +91,8 @@ public class SnippetCompilationHelper {\n \r\n \t\tif (ret instanceof CtClass) {\r\n \t\t\tCtClass klass = (CtClass) ret;\r\n-\t\t\tklass.setSimpleName(klass.getSimpleName().replaceAll(\"^[0-9]*\", \"\"));\r\n-\t\t\tklass.setParent(ret.getFactory().Package().getRootPackage());\r\n \t\t\tret.getFactory().Package().getRootPackage().addType(klass);\r\n+\t\t\tklass.setSimpleName(klass.getSimpleName().replaceAll(\"^[0-9]*\", \"\"));\r\n \t\t}\r\n \t\treturn ret;\r\n \t}\r\ndiff --git a/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java b/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\nindex db4eb5f..aefe25d 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtNamedElementImpl.java\n@@ -43,6 +43,7 @@ public abstract class CtNamedElementImpl extends CtElementImpl implements CtName\n \t\tif (factory instanceof FactoryImpl) {\n \t\t\tsimpleName = ((FactoryImpl) factory).dedup(simpleName);\n \t\t}\n+\n \t\tthis.simpleName = simpleName;\n \t\treturn (T) this;\n \t}\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\nindex e112408..fc7c633 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtFieldReferenceImpl.java\n@@ -17,13 +17,11 @@\n package spoon.support.reflect.reference;\n \n import spoon.Launcher;\n-import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtEnum;\n import spoon.reflect.declaration.CtField;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtVariable;\n import spoon.reflect.declaration.ModifierKind;\n-import spoon.reflect.declaration.ParentNotInitializedException;\n import spoon.reflect.reference.CtFieldReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.reflect.visitor.CtVisitor;\n@@ -130,35 +128,9 @@ public class CtFieldReferenceImpl<T> extends CtVariableReferenceImpl<T> implemen\n \t@Override\n \t@SuppressWarnings(\"unchecked\")\n \tpublic CtField<T> getDeclaration() {\n-\t\tfinal CtField<T> ctField = lookupDynamically();\n-\t\tif (ctField != null) {\n-\t\t\treturn ctField;\n-\t\t}\n \t\treturn fromDeclaringType();\n \t}\n \n-\tprivate CtField<T> lookupDynamically() {\n-\t\tCtElement element = this;\n-\t\tCtField optional = null;\n-\t\tString name = getSimpleName();\n-\t\ttry {\n-\t\t\tdo {\n-\t\t\t\tCtType type = element.getParent(CtType.class);\n-\t\t\t\tif (type == null) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\tfinal CtField potential = type.getField(name);\n-\t\t\t\tif (potential != null) {\n-\t\t\t\t\toptional = potential;\n-\t\t\t\t}\n-\t\t\t\telement = type;\n-\t\t\t} while (optional == null);\n-\t\t} catch (ParentNotInitializedException e) {\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn optional;\n-\t}\n-\n \tprivate CtField<T> fromDeclaringType() {\n \t\tif (declaringType == null) {\n \t\t\treturn null;\n", 
    "projectMetrics": {
      "numberSourceFiles": 469, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 474, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 118243048, 
        "hostName": "local", 
        "totalMemory": 305135616, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:24:53 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/211342085/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            72
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 72
        }, 
        "testing": {
          "stepDurations": [
            154
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 154
        }, 
        "cloning": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:16:38 AM", 
      "totalDuration": 486
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1039, 
        "numberRunning": 1040, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/213996751", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "spoon.test.ctElement.MetadataTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "spoon.test.ctElement.MetadataTest", 
          "testMethod": "testMetadata", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/215500998", 
        "date": "Mar 27, 2017 2:04:47 PM", 
        "id": 215500998
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/213996751", 
        "date": "Mar 22, 2017 9:44:04 PM", 
        "id": 213996751
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/5403f1552074216126dd0350d0426fc7ccf2dd2c", 
        "sha": "5403f1552074216126dd0350d0426fc7ccf2dd2c", 
        "branchName": "master", 
        "date": "Mar 27, 2017 1:56:43 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f190d8ebcdcfdba60a5490a5a934599fd93b159d", 
        "sha": "f190d8ebcdcfdba60a5490a5a934599fd93b159d", 
        "branchName": "master", 
        "date": "Mar 22, 2017 9:35:37 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-213996751-215500998", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 474, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 478, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_46", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\nindex 465902d..c775076 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n@@ -386,6 +386,9 @@ public abstract class CtElementImpl implements CtElement, Serializable {\n \n \t@Override\n \tpublic Set<String> getMetadataKeys() {\n+\t\tif (metadata == null) {\n+\t\t\treturn Collections.EMPTY_SET;\n+\t\t}\n \t\treturn metadata.keySet();\n \t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 129243320, 
        "hostName": "local", 
        "totalMemory": 286261248, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 7:19:09 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/213996751/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            66
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 67
        }, 
        "testing": {
          "stepDurations": [
            171
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 171
        }, 
        "cloning": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 7:11:04 AM", 
      "totalDuration": 478
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1047, 
        "numberRunning": 1048, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/218213030", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<...gImport#doSomething([externallib].SomeType)> but was:<...gImport#doSomething([fr.inria].SomeType)>", 
          "isError": false, 
          "testMethod": "testAnotherMissingImport", 
          "testClass": "spoon.test.imports.ImportTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 27, 
          "numberRunning": 28, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/221992429", 
        "date": "Apr 14, 2017 9:23:15 AM", 
        "id": 221992429
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/218213030", 
        "date": "Apr 3, 2017 10:15:39 PM", 
        "id": 218213030
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d25247f87b6bdb3aa917a90e70f1d1117424f153", 
        "sha": "d25247f87b6bdb3aa917a90e70f1d1117424f153", 
        "branchName": "master", 
        "date": "Apr 14, 2017 9:14:26 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/11d500fb62e40afef7e00af14a5cfadf4eb73011", 
        "sha": "11d500fb62e40afef7e00af14a5cfadf4eb73011", 
        "branchName": "master", 
        "date": "Apr 3, 2017 10:03:43 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-218213030-221992429", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_47", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 58f0d86..a04d953 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -641,6 +641,9 @@ public class ReferenceBuilder {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n+\t\t\tif (binding.actualType() instanceof MissingTypeBinding) {\n+\t\t\t\tref = getTypeReference(binding.actualType());\n+\t\t\t}\n \n \t\t\tif (((ParameterizedTypeBinding) binding).arguments != null) {\n \t\t\t\tfor (TypeBinding b : ((ParameterizedTypeBinding) binding).arguments) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 474, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 480, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 143795520, 
        "hostName": "local", 
        "totalMemory": 284164096, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:59:49 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/218213030/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            102
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 104
        }, 
        "testing": {
          "stepDurations": [
            271
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 271
        }, 
        "cloning": {
          "stepDurations": [
            23
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 23
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:48:23 PM", 
      "totalDuration": 678
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1057, 
        "numberRunning": 1058, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/225344336", 
      "failingClasses": [
        {
          "numberPassing": 31, 
          "numberRunning": 32, 
          "testClass": "spoon.test.generics.GenericsTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testClassContextOnInnerClass", 
          "testClass": "spoon.test.generics.GenericsTest", 
          "detail": "Cannot resolve 1) type parameter <T>  of declarer public class Banana<T> {\n    abstract class Vitamins extends java.util.AbstractList<T> {    }\n}", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/226528821", 
        "date": "Apr 27, 2017 9:17:25 PM", 
        "id": 226528821
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/225344336", 
        "date": "Apr 24, 2017 9:37:50 PM", 
        "id": 225344336
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4c0ac3299569c30661ef249b9a30813fc1081b62", 
        "sha": "4c0ac3299569c30661ef249b9a30813fc1081b62", 
        "branchName": "master", 
        "date": "Apr 27, 2017 9:08:19 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/27fc8208c4da4145c687c7f4db057de7dbed50f6", 
        "sha": "27fc8208c4da4145c687c7f4db057de7dbed50f6", 
        "branchName": "master", 
        "date": "Apr 24, 2017 9:28:30 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-225344336-226528821", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 478, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 484, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 12
      }
    }, 
    "bugId": "Bears_48", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex ba9f1cc..8147a59 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -373,7 +373,7 @@ public class ClassTypingContext implements GenericTypeAdapter {\n \t\t\t\t\tthrow new SpoonException(\"Cannot adapt type parameters of non type scope\");\r\n \t\t\t\t}\r\n \t\t\t\tCtType<?> typeDeclarer = (CtType<?>) declarer;\r\n-\t\t\t\tList<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(typeDeclarer.getQualifiedName());\r\n+\t\t\t\tList<CtTypeReference<?>> actualTypeArguments = getActualTypeArguments(typeDeclarer.getQualifiedName());\r\n \t\t\t\tif (actualTypeArguments == null) {\r\n \t\t\t\t\t/*\r\n \t\t\t\t\t * the actualTypeArguments of this declarer cannot be resolved.\r\n@@ -399,6 +399,17 @@ public class ClassTypingContext implements GenericTypeAdapter {\n \t\treturn result;\r\n \t}\r\n \r\n+\tprivate List<CtTypeReference<?>> getActualTypeArguments(String qualifiedName) {\r\n+\t\tList<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(qualifiedName);\r\n+\t\tif (actualTypeArguments != null) {\r\n+\t\t\treturn actualTypeArguments;\r\n+\t\t}\r\n+\t\tif (enclosingClassTypingContext != null) {\r\n+\t\t\treturn enclosingClassTypingContext.getActualTypeArguments(qualifiedName);\r\n+\t\t}\r\n+\t\treturn null;\r\n+\t}\r\n+\r\n \tprivate static CtTypeReference<?> getValue(List<CtTypeReference<?>> arguments, CtTypeParameter typeParam, CtFormalTypeDeclarer declarer) {\r\n \t\tif (declarer.getFormalCtTypeParameters().size() != arguments.size()) {\r\n \t\t\tthrow new SpoonException(\"Unexpected count of actual type arguments\");\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 151565960, 
        "hostName": "local", 
        "totalMemory": 377487360, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:54:40 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/225344336/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            100
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 101
        }, 
        "testing": {
          "stepDurations": [
            299
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 299
        }, 
        "cloning": {
          "stepDurations": [
            21
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 21
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 11:40:54 PM", 
      "totalDuration": 820
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1059, 
        "numberRunning": 1060, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.ArrayIndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/227073271", 
      "failureDetails": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException", 
          "detail": "0", 
          "isError": true, 
          "testMethod": "annotationAddValue", 
          "testClass": "spoon.test.annotation.AnnotationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 35, 
          "numberRunning": 36, 
          "testClass": "spoon.test.annotation.AnnotationTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228362442", 
        "date": "May 3, 2017 4:37:12 PM", 
        "id": 228362442
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/227073271", 
        "date": "Apr 29, 2017 8:55:20 AM", 
        "id": 227073271
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4dedea2d16b5d20c99d724461318f783c8631d3d", 
        "sha": "4dedea2d16b5d20c99d724461318f783c8631d3d", 
        "branchName": "master", 
        "date": "May 3, 2017 4:28:09 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f993132633e7ecdd4145052b9eac0267659f9c6e", 
        "sha": "f993132633e7ecdd4145052b9eac0267659f9c6e", 
        "branchName": "master", 
        "date": "Apr 29, 2017 8:46:32 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-227073271-228362442", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_49", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java b/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\nindex 9db6ff1..5c89ea0 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtAnnotationImpl.java\n@@ -110,7 +110,8 @@ public class CtAnnotationImpl<A extends Annotation> extends CtExpressionImpl<A>\n \t\t\t// Value should be converted to a CtNewArray.\n \t\t\tres = getFactory().Core().createNewArray();\n \t\t\tObject[] values = (Object[]) value;\n-\t\t\tres.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(values[0].getClass())));\n+\n+\t\t\tres.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(value.getClass().getComponentType())));\n \t\t\tfor (Object o : values) {\n \t\t\t\t((CtNewArray) res).addElement(convertValueToExpression(o));\n \t\t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 479, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 486, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 102126664, 
        "hostName": "local", 
        "totalMemory": 201850880, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:31:43 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/227073271/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            62
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 62
        }, 
        "testing": {
          "stepDurations": [
            141
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 141
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:25:03 PM", 
      "totalDuration": 393
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1059, 
        "numberRunning": 1060, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/228371032", 
      "failingClasses": [
        {
          "numberPassing": 13, 
          "numberRunning": 14, 
          "testClass": "spoon.test.api.APITest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testBasicAPIUsage", 
          "testClass": "spoon.test.api.APITest", 
          "detail": "java.lang.RuntimeException: inconsistent compilation unit: '/root/workspace/INRIA/spoon/228371032/src/test/resources/spoon/test/api/CommentedClass.java': declared types are []", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228407512", 
        "date": "May 3, 2017 6:24:13 PM", 
        "id": 228407512
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228371032", 
        "date": "May 3, 2017 4:59:05 PM", 
        "id": 228371032
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d3f34babbcfeea49de9d6175d581df3f8b491845", 
        "sha": "d3f34babbcfeea49de9d6175d581df3f8b491845", 
        "branchName": "master", 
        "date": "May 3, 2017 6:15:09 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8850c5ba129601b4f38fb5a3017fe9dcbc918aa3", 
        "sha": "8850c5ba129601b4f38fb5a3017fe9dcbc918aa3", 
        "branchName": "master", 
        "date": "May 3, 2017 4:50:14 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-228371032-228407512", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 479, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 486, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 11, 
        "numberDeleted": 9
      }
    }, 
    "bugId": "Bears_50", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\nindex 71a37d7..58ba2da 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n@@ -415,16 +415,18 @@ public class JDTBasedSpoonCompiler implements spoon.SpoonModelBuilder {\n \t\tJDTTreeBuilder builder = new JDTTreeBuilder(factory);\r\n \t\tunitLoop:\r\n \t\tfor (CompilationUnitDeclaration unit : units) {\r\n-\t\t\tfinal String unitPath = new String(unit.getFileName());\r\n-\t\t\tfor (final CompilationUnitFilter cuf : compilationUnitFilters) {\r\n-\t\t\t\tif (cuf.exclude(unitPath)) {\r\n-\t\t\t\t\t// do not traverse this unit\r\n-\t\t\t\t\tcontinue unitLoop;\r\n+\t\t\tif (!unit.isEmpty()) {\r\n+\t\t\t\tfinal String unitPath = new String(unit.getFileName());\r\n+\t\t\t\tfor (final CompilationUnitFilter cuf : compilationUnitFilters) {\r\n+\t\t\t\t\tif (cuf.exclude(unitPath)) {\r\n+\t\t\t\t\t\t// do not traverse this unit\r\n+\t\t\t\t\t\tcontinue unitLoop;\r\n+\t\t\t\t\t}\r\n+\t\t\t\t}\r\n+\t\t\t\tunit.traverse(builder, unit.scope);\r\n+\t\t\t\tif (getFactory().getEnvironment().isCommentsEnabled()) {\r\n+\t\t\t\t\tnew JDTCommentBuilder(unit, factory).build();\r\n \t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\tunit.traverse(builder, unit.scope);\r\n-\t\t\tif (getFactory().getEnvironment().isCommentsEnabled()) {\r\n-\t\t\t\tnew JDTCommentBuilder(unit, factory).build();\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146372032, 
        "hostName": "local", 
        "totalMemory": 256901120, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:21:37 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/228371032/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            92
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 92
        }, 
        "testing": {
          "stepDurations": [
            141
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 141
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:14:30 PM", 
      "totalDuration": 422
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1060, 
        "numberRunning": 1061, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/228407512", 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "detail": "Cannot resolve type erasure of the type parameter reference, which is not able to found it's declaration.", 
          "isError": true, 
          "testMethod": "testGetGenericMethodFromReferene", 
          "testClass": "spoon.test.methodreference.MethodReferenceTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 11, 
          "testClass": "spoon.test.methodreference.MethodReferenceTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228634633", 
        "date": "May 4, 2017 9:54:45 AM", 
        "id": 228634633
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228407512", 
        "date": "May 3, 2017 6:24:13 PM", 
        "id": 228407512
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/caafc7ec841dd072fc0478d328ab5bd94eb6fdbe", 
        "sha": "caafc7ec841dd072fc0478d328ab5bd94eb6fdbe", 
        "branchName": "master", 
        "date": "May 4, 2017 9:44:59 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d3f34babbcfeea49de9d6175d581df3f8b491845", 
        "sha": "d3f34babbcfeea49de9d6175d581df3f8b491845", 
        "branchName": "master", 
        "date": "May 3, 2017 6:15:09 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-228407512-228634633", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 17
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_51", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex 692202a..3267dd6 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -19,9 +19,11 @@ package spoon.support.reflect.reference;\n import spoon.SpoonException;\n import spoon.reflect.declaration.CtElement;\n import spoon.reflect.declaration.CtFormalTypeDeclarer;\n+import spoon.reflect.declaration.CtMethod;\n import spoon.reflect.declaration.CtType;\n import spoon.reflect.declaration.CtTypeParameter;\n import spoon.reflect.reference.CtActualTypeContainer;\n+import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtIntersectionTypeReference;\n import spoon.reflect.reference.CtTypeParameterReference;\n import spoon.reflect.reference.CtTypeReference;\n@@ -173,15 +175,28 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \t\t\treturn null;\n \t\t}\n \n+\t\tCtElement e = this;\n+\t\tCtElement parent = getParent();\n+\t\tif (parent instanceof CtExecutableReference) {\n+\t\t\tCtElement parent2 = parent.getParent();\n+\t\t\tif (parent2 instanceof CtMethod) {\n+\t\t\t\te = parent2;\n+\t\t\t} else {\n+\t\t\t\te = ((CtExecutableReference<?>) parent).getDeclaringType().getTypeDeclaration();\n+\t\t\t}\n+\t\t} else {\n+\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n+\t\t}\n+\n \t\t// case #1: we're a type of a method parameter, a local variable, ...\n \t\t// the strategy is to look in the parents\n \t\t// collecting all formal type declarers of the hierarchy\n-\t\tCtElement e = this;\n-\t\twhile ((e = e.getParent(CtFormalTypeDeclarer.class)) != null) {\n+\t\twhile (e != null) {\n \t\t\tCtTypeParameter result = findTypeParamDeclaration((CtFormalTypeDeclarer) e, this.getSimpleName());\n \t\t\tif (result != null) {\n \t\t\t\treturn result;\n \t\t\t}\n+\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n \t\t}\n \t\treturn null;\n \t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 479, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 487, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 164235480, 
        "hostName": "local", 
        "totalMemory": 249561088, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:13:52 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/228407512/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            83
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 84
        }, 
        "testing": {
          "stepDurations": [
            209
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 209
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:04:09 PM", 
      "totalDuration": 576
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1061, 
        "numberRunning": 1062, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/228634633", 
      "failingClasses": [
        {
          "numberPassing": 28, 
          "numberRunning": 29, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testSuperInheritanceHierarchyFunctionNoClasspath", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "expected:<2> but was:<1>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228649848", 
        "date": "May 4, 2017 10:57:12 AM", 
        "id": 228649848
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/228634633", 
        "date": "May 4, 2017 9:54:45 AM", 
        "id": 228634633
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/8ca2213e50dbe82b0cbffc07a4d4aef573dcd06e", 
        "sha": "8ca2213e50dbe82b0cbffc07a4d4aef573dcd06e", 
        "branchName": "master", 
        "date": "May 4, 2017 10:48:08 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/caafc7ec841dd072fc0478d328ab5bd94eb6fdbe", 
        "sha": "caafc7ec841dd072fc0478d328ab5bd94eb6fdbe", 
        "branchName": "master", 
        "date": "May 4, 2017 9:44:59 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-228634633-228649848", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 479, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 487, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 57, 
        "numberDeleted": 73
      }
    }, 
    "bugId": "Bears_52", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java b/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\nindex 2aa981b..15e59d4 100644\n--- a/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\n+++ b/src/main/java/spoon/reflect/visitor/filter/SuperInheritanceHierarchyFunction.java\n@@ -56,6 +56,47 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \tprivate CtScannerListener listener;\r\n \tprivate boolean returnTypeReferences = false;\r\n \r\n+\t/**\r\n+\t * Super inheritance hierarchy scanning listener.\r\n+\t * Use it instead of {@link CtScannerListener}\r\n+\t * if you need to know whether visited type reference is class or interface\r\n+\t */\r\n+\tprivate static class Listener implements CtScannerListener {\r\n+\r\n+\t\t/**\r\n+\t\t * Called before the scanner enters an type\r\n+\t\t *\r\n+\t\t * @param typeRef the type reference to be scanned.\r\n+\t\t * @param isClass true if type reference refers to class, false if it is an interface\r\n+\t\t * @return a {@link ScanningMode} that drives how the scanner processes this element and its children.\r\n+\t\t * For instance, returning {@link ScanningMode#SKIP_ALL} causes that element and all children to be skipped and {@link #exit(CtElement)} are be NOT called for that element.\r\n+\t\t */\r\n+\t\tpublic ScanningMode enter(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\treturn enter((CtElement) typeRef);\r\n+\t\t}\r\n+\r\n+\t\t/**\r\n+\t\t * This method is called after the element and all its children have been visited.\r\n+\t\t * This method is NOT called if an exception is thrown in {@link #enter(CtElement)} or during the scanning of the element or any of its children element.\r\n+\t\t * This method is NOT called for an element for which {@link #enter(CtElement)} returned {@link ScanningMode#SKIP_ALL}.\r\n+\t\t *\r\n+\t\t * @param typeRef the type reference that has just been scanned.\r\n+\t\t * @param isClass true if type reference refers to class, false if it is an interface\r\n+\t\t */\r\n+\t\tpublic void exit(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\texit((CtElement) typeRef);\r\n+\t\t}\r\n+\r\n+\t\t@Override\r\n+\t\tpublic ScanningMode enter(CtElement element) {\r\n+\t\t\treturn ScanningMode.NORMAL;\r\n+\t\t}\r\n+\r\n+\t\t@Override\r\n+\t\tpublic void exit(CtElement element) {\r\n+\t\t}\r\n+\t}\r\n+\r\n \t/**\r\n \t * The mapping function created using this constructor\r\n \t * will visit each super class and super interface\r\n@@ -87,7 +128,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t * which is used to assure that each interface is visited only once.\r\n \t * It can be extended to implement more powerful listener\r\n \t */\r\n-\tpublic static class DistinctTypeListener implements CtScannerListener {\r\n+\tpublic static class DistinctTypeListener extends Listener {\r\n \t\tSet<String> visitedSet;\r\n \r\n \t\tpublic DistinctTypeListener(Set<String> visitedSet) {\r\n@@ -165,12 +206,30 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t@Override\r\n \tpublic void apply(CtTypeInformation input, CtConsumer<Object> outputConsumer) {\r\n \t\tCtTypeReference<?> typeRef;\r\n+\t\tCtType<?> type;\r\n+\t\t//detect whether input is a class or something else (e.g. interface)\r\n+\t\tboolean isClass;\r\n \t\tif (input instanceof CtType) {\r\n-\t\t\ttypeRef = ((CtType<?>) input).getReference();\r\n+\t\t\ttype = (CtType<?>) input;\r\n+\t\t\ttypeRef = type.getReference();\r\n \t\t} else {\r\n \t\t\ttypeRef = (CtTypeReference<?>) input;\r\n+\t\t\ttry {\r\n+\t\t\t\ttype = typeRef.getTypeDeclaration();\r\n+\t\t\t} catch (SpoonClassNotFoundException e) {\r\n+\t\t\t\tif (typeRef.getFactory().getEnvironment().getNoClasspath() == false) {\r\n+\t\t\t\t\tthrow e;\r\n+\t\t\t\t}\r\n+\t\t\t\ttype = null;\r\n+\t\t\t}\r\n \t\t}\r\n-\t\tScanningMode mode = enter(typeRef);\r\n+\t\t//if the type is unknown, than we expect it is interface, otherwise we would visit java.lang.Object too, even for interfaces\r\n+\t\tisClass = type == null ? false : (type instanceof CtClass);\r\n+\t\tif (isClass == false && includingInterfaces == false) {\r\n+\t\t\t//the input is interface, but this scanner should visit only interfaces. Finish\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\t\tScanningMode mode = enter(typeRef, isClass);\r\n \t\tif (mode == SKIP_ALL) {\r\n \t\t\t//listener decided to not visit that input. Finish\r\n \t\t\treturn;\r\n@@ -182,14 +241,20 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\t}\r\n \t\t}\r\n \t\tif (mode == NORMAL) {\r\n-\t\t\tvisitSuperClasses(typeRef, outputConsumer, includingInterfaces);\r\n+\t\t\tif (isClass == false) {\r\n+\t\t\t\tvisitSuperInterfaces(typeRef, outputConsumer);\r\n+\t\t\t} else {\r\n+\t\t\t\t//call visitSuperClasses only for input of type class. The contract of visitSuperClasses requires that\r\n+\t\t\t\tvisitSuperClasses(typeRef, outputConsumer, includingInterfaces);\r\n+\t\t\t}\r\n \t\t}\r\n-\t\texit(typeRef);\r\n+\t\texit(typeRef, isClass);\r\n \t}\r\n \r\n \t/**\r\n \t * calls `outputConsumer.accept(superClass)` for all super classes of superType.\r\n \t *\r\n+\t * @param superTypeRef the reference to a class. This method is called only for classes. Never for interface\r\n \t * @param includingInterfaces if true then all superInterfaces of each type are sent to `outputConsumer` too.\r\n \t */\r\n \tprotected void visitSuperClasses(CtTypeReference<?> superTypeRef, CtConsumer<Object> outputConsumer, boolean includingInterfaces) {\r\n@@ -205,23 +270,11 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t}\r\n \t\tCtTypeReference<?> superClassRef = superTypeRef.getSuperclass();\r\n \t\tif (superClassRef == null) {\r\n-\t\t\tCtType<?> superType;\r\n-\t\t\ttry {\r\n-\t\t\t\tsuperType = superTypeRef.getTypeDeclaration();\r\n-\t\t\t} catch (SpoonClassNotFoundException e) {\r\n-\t\t\t\tif (failOnClassNotFound) {\r\n-\t\t\t\t\tthrow e;\r\n-\t\t\t\t}\r\n-\t\t\t\treturn;\r\n-\t\t\t}\r\n-\t\t\tif (superType instanceof CtClass) {\r\n-\t\t\t\t// only CtCLasses extend object, so visit Object too\r\n-\t\t\t\tsuperClassRef = superTypeRef.getFactory().Type().OBJECT;\r\n-\t\t\t} else {\r\n-\t\t\t\treturn;\r\n-\t\t\t}\r\n+\t\t\t//only CtClasses extend object,\r\n+\t\t\t//this method is called only for classes (not for interfaces) so we know we can visit java.lang.Object now too\r\n+\t\t\tsuperClassRef = superTypeRef.getFactory().Type().OBJECT;\r\n \t\t}\r\n-\t\tScanningMode mode = enter(superClassRef);\r\n+\t\tScanningMode mode = enter(superClassRef, false);\r\n \t\tif (mode == SKIP_ALL) {\r\n \t\t\treturn;\r\n \t\t}\r\n@@ -229,7 +282,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\tif (mode == NORMAL && query.isTerminated() == false) {\r\n \t\t\tvisitSuperClasses(superClassRef, outputConsumer, includingInterfaces);\r\n \t\t}\r\n-\t\texit(superClassRef);\r\n+\t\texit(superClassRef, false);\r\n \t}\r\n \r\n \t/**\r\n@@ -248,7 +301,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\treturn;\r\n \t\t}\r\n \t\tfor (CtTypeReference<?> ifaceRef : superInterfaces) {\r\n-\t\t\tScanningMode mode = enter(ifaceRef);\r\n+\t\t\tScanningMode mode = enter(ifaceRef, true);\r\n \t\t\tif (mode == SKIP_ALL) {\r\n \t\t\t\tcontinue;\r\n \t\t\t}\r\n@@ -256,7 +309,7 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\t\tif (mode == NORMAL && query.isTerminated() == false) {\r\n \t\t\t\tvisitSuperInterfaces(ifaceRef, outputConsumer);\r\n \t\t\t}\r\n-\t\t\texit(ifaceRef);\r\n+\t\t\texit(ifaceRef, true);\r\n \t\t\tif (query.isTerminated()) {\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n@@ -268,13 +321,24 @@ public class SuperInheritanceHierarchyFunction implements CtConsumableFunction<C\n \t\tthis.query = query;\r\n \t}\r\n \r\n-\tprivate ScanningMode enter(CtTypeReference<?> type) {\r\n-\t\treturn listener == null ? NORMAL : listener.enter(type);\r\n+\tprivate ScanningMode enter(CtTypeReference<?> type, boolean isClass) {\r\n+\t\tif (listener == null) {\r\n+\t\t\treturn NORMAL;\r\n+\t\t}\r\n+\t\tif (listener instanceof Listener) {\r\n+\t\t\tListener typeListener = (Listener) listener;\r\n+\t\t\treturn typeListener.enter(type, isClass);\r\n+\t\t}\r\n+\t\treturn listener.enter(type);\r\n \t}\r\n \r\n-\tprivate void exit(CtTypeReference<?> type) {\r\n+\tprivate void exit(CtTypeReference<?> type, boolean isClass) {\r\n \t\tif (listener != null) {\r\n-\t\t\tlistener.exit(type);\r\n+\t\t\tif (listener instanceof Listener) {\r\n+\t\t\t\t((Listener) listener).exit(type, isClass);\r\n+\t\t\t} else {\r\n+\t\t\t\tlistener.exit(type);\r\n+\t\t\t}\r\n \t\t}\r\n \t}\r\n \r\ndiff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex e876c5f..f382483 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -24,7 +24,6 @@ import java.util.Map;\n import java.util.Set;\r\n \r\n import spoon.SpoonException;\r\n-import spoon.reflect.declaration.CtClass;\r\n import spoon.reflect.declaration.CtElement;\r\n import spoon.reflect.declaration.CtFormalTypeDeclarer;\r\n import spoon.reflect.declaration.CtType;\r\n@@ -318,14 +317,13 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\tsuper(visitedSet);\r\n \t\t}\r\n \t\t@Override\r\n-\t\tpublic ScanningMode enter(CtElement element) {\r\n-\t\t\tScanningMode mode = super.enter(element);\r\n+\t\tpublic ScanningMode enter(CtTypeReference<?> typeRef, boolean isClass) {\r\n+\t\t\tScanningMode mode = super.enter(typeRef);\r\n \t\t\tif (mode == ScanningMode.SKIP_ALL) {\r\n \t\t\t\t//this interface was already visited. Do not visit it again\r\n \t\t\t\treturn mode;\r\n \t\t\t}\r\n-\t\t\tCtType<?> type = ((CtTypeReference<?>) element).getTypeDeclaration();\r\n-\t\t\tif (type instanceof CtClass) {\r\n+\t\t\tif (isClass) {\r\n \t\t\t\tif (foundArguments != null) {\r\n \t\t\t\t\t//we have found result then we can finish before entering super class. All interfaces of found type should be still visited\r\n \t\t\t\t\t//skip before super class (and it's interfaces) of found type is visited\r\n@@ -336,7 +334,7 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t * Remember that, so we can continue at this place if needed.\r\n \t\t\t\t * If we enter class, then this listener assures that that class and all it's not yet visited interfaces are visited\r\n \t\t\t\t */\r\n-\t\t\t\tlastResolvedSuperclass = type;\r\n+\t\t\t\tlastResolvedSuperclass = typeRef;\r\n \t\t\t}\r\n \t\t\t//this type was not visited yet. Visit it normally\r\n \t\t\treturn ScanningMode.NORMAL;\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 147948512, 
        "hostName": "local", 
        "totalMemory": 251658240, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:13:47 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/228634633/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            86
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 86
        }, 
        "testing": {
          "stepDurations": [
            209
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 209
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:04:06 PM", 
      "totalDuration": 575
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1065, 
        "numberRunning": 1067, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/232723487", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[spoon.test.same.]B> but was:<[]B>", 
          "isError": false, 
          "testMethod": "testSingleExcludeWithoutFilter", 
          "testClass": "spoon.test.filters.CUFilterTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is \"com.cristal.ircica.applicationcolis.userinterface.fragments.CompletableFragment\"\n     but: was \"CompletableFragment\"", 
          "isError": false, 
          "testMethod": "testSpoonShouldInferImplicitPackageInNoClasspath", 
          "testClass": "spoon.test.ctClass.CtClassTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 5, 
          "testClass": "spoon.test.ctClass.CtClassTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "spoon.test.filters.CUFilterTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/232809734", 
        "date": "May 16, 2017 2:50:58 PM", 
        "id": 232809734
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/232723487", 
        "date": "May 16, 2017 10:00:19 AM", 
        "id": 232723487
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/71554f9048ff5fb4bc30acafecae71a13a5ba356", 
        "sha": "71554f9048ff5fb4bc30acafecae71a13a5ba356", 
        "branchName": "master", 
        "date": "May 16, 2017 2:42:58 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/de8682d6032f9bcc2828679a82c41d1c4af7c9e9", 
        "sha": "de8682d6032f9bcc2828679a82c41d1c4af7c9e9", 
        "branchName": "master", 
        "date": "May 16, 2017 9:52:23 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-232723487-232809734", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_53", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex a04d953..b245a2c 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -913,7 +913,8 @@ public class ReferenceBuilder {\n \t\t} else if (declaring instanceof CtTypeReference) {\n \t\t\tref.setDeclaringType((CtTypeReference) declaring);\n \t\t} else if (declaring == null) {\n-\t\t\tref.setPackage(jdtTreeBuilder.getFactory().Package().topLevel());\n+\t\t\t// in that case we consider the package should be the same as the current one. Fix #1293\n+\t\t\tref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference());\n \t\t} else {\n \t\t\tthrow new AssertionError(\"unexpected declaring type: \" + declaring.getClass() + \" of \" + declaring);\n \t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 479, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 493, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 146749392, 
        "hostName": "local", 
        "totalMemory": 235929600, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:52:46 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/232723487/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            62
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 62
        }, 
        "testing": {
          "stepDurations": [
            139
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 139
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:46:15 PM", 
      "totalDuration": 386
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1078, 
        "numberRunning": 1079, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.compiler.ModelBuildingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/234113323", 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.ctClass.CtClassTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.compiler.ModelBuildingException", 
          "testMethod": "testDefaultConstructorAreOk", 
          "testClass": "spoon.test.ctClass.CtClassTest", 
          "detail": "The constructor BooleanArrays() is not visible at /root/workspace/INRIA/spoon/234113323/BooleanArraysBaseTest.java:14", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234113988", 
        "date": "May 19, 2017 8:23:16 PM", 
        "id": 234113988
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234113323", 
        "date": "May 19, 2017 8:20:50 PM", 
        "id": 234113323
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/014167880a6e1c523bb27614a02a298ff12eade7", 
        "sha": "014167880a6e1c523bb27614a02a298ff12eade7", 
        "branchName": "master", 
        "date": "May 19, 2017 8:14:44 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/9b69b9c3611a632324d3ae00e658b0280dcc734b", 
        "sha": "9b69b9c3611a632324d3ae00e658b0280dcc734b", 
        "branchName": "master", 
        "date": "May 19, 2017 8:12:28 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-234113323-234113988", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 482, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 510, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 16
      }
    }, 
    "bugId": "Bears_54", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 564d67f..41edede 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -73,6 +73,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \tprotected CtTypeReference<?> targetType;\n \tprivate Map<String, Boolean> namesPresentInJavaLang = new HashMap<>();\n \tprivate Set<String> fieldAndMethodsNames = new HashSet<String>();\n+\tprivate Set<CtTypeReference> exploredReferences = new HashSet<>(); // list of explored references\n \n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n@@ -248,10 +249,20 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t}\n \t}\n \n+\tprivate boolean isThereAnotherClassWithSameNameInAnotherPackage(CtTypeReference<?> ref) {\n+\t\tfor (CtTypeReference typeref : this.exploredReferences) {\n+\t\t\tif (typeref.getSimpleName().equals(ref.getSimpleName()) && !typeref.getQualifiedName().equals(ref.getQualifiedName())) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \t/**\n \t * Adds a type to the classImports.\n \t */\n \tprotected boolean addClassImport(CtTypeReference<?> ref) {\n+\t\tthis.exploredReferences.add(ref);\n \t\tif (ref == null) {\n \t\t\treturn false;\n \t\t}\n@@ -279,6 +290,10 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\treturn false;\n \t\t}\n \n+\t\tif (this.isThereAnotherClassWithSameNameInAnotherPackage(ref)) {\n+\t\t\treturn false;\n+\t\t}\n+\n \t\t// we want to be sure that we are not importing a class because a static field or method we already imported\n \t\t// moreover we make exception for same package classes to avoid problems in FQN mode\n \n@@ -346,8 +361,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\t//note: we must add the type refs from the same package too, to assure that isImported(typeRef) returns true for them\n-\t\t//these type refs are removed in #getClassImports()\n+\n \t\tclassImports.put(ref.getSimpleName(), ref);\n \t\treturn true;\n \t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 159666320, 
        "hostName": "local", 
        "totalMemory": 251658240, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:32:39 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/234113323/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            74
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 74
        }, 
        "testing": {
          "stepDurations": [
            203
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 203
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:23:25 PM", 
      "totalDuration": 547
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1074, 
        "numberRunning": 1082, 
        "numberFailing": 8, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 8
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/234612953", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The java file should contain import for Launcher", 
          "isError": false, 
          "testMethod": "testNoFQNWhenUsedInTryCatch", 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Can't compile spooned-javalang", 
          "isError": false, 
          "testMethod": "testJavaLangIsConsideredAsImported", 
          "testClass": "spoon.test.imports.ImportTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Spoon ignores the arguments of CtInvocations expected:<3> but was:<1>", 
          "isError": false, 
          "testMethod": "testSpoonWithImports", 
          "testClass": "spoon.test.imports.ImportTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<4> but was:<2>", 
          "isError": false, 
          "testMethod": "testComputeImportsInClass", 
          "testClass": "spoon.test.imports.ImportScannerTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The java file should contain import for Launcher", 
          "isError": false, 
          "testMethod": "testNoFQNWhenUsedInLoop", 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<3> but was:<2>", 
          "isError": false, 
          "testMethod": "testNotImportExecutableType", 
          "testClass": "spoon.test.imports.ImportTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The java file should contain import for Launcher", 
          "isError": false, 
          "testMethod": "testNoFQNWhenShadowedByLocalVariable", 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The java file should contain import for Launcher", 
          "isError": false, 
          "testMethod": "testNoFQNWhenShadowedByField", 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 9, 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest", 
          "numberFailing": 4, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 27, 
          "numberRunning": 30, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 3, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "spoon.test.imports.ImportScannerTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/235302726", 
        "date": "May 23, 2017 6:51:13 PM", 
        "id": 235302726
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/234612953", 
        "date": "May 21, 2017 10:46:37 PM", 
        "id": 234612953
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/08151bda54b23451d85534763a4ec706708c2e53", 
        "sha": "08151bda54b23451d85534763a4ec706708c2e53", 
        "branchName": "master", 
        "date": "May 23, 2017 6:43:20 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4a41286b73ef0230f3df61a921db0306195ca31e", 
        "sha": "4a41286b73ef0230f3df61a921db0306195ca31e", 
        "branchName": "master", 
        "date": "May 21, 2017 10:38:30 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-234612953-235302726", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 64, 
        "numberDeleted": 42
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_55", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 41edede..9f46670 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -22,6 +22,7 @@ import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n import spoon.reflect.code.CtFieldWrite;\n import spoon.reflect.code.CtInvocation;\n+import spoon.reflect.code.CtLiteral;\n import spoon.reflect.declaration.CtAnnotationType;\n import spoon.reflect.declaration.CtClass;\n import spoon.reflect.declaration.CtElement;\n@@ -54,6 +55,7 @@ import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.StringTokenizer;\n import java.util.TreeMap;\n \n /**\n@@ -100,10 +102,9 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtFieldReference(CtFieldReference<T> reference) {\n \t\tenter(reference);\n+\t\tscan(reference.getDeclaringType());\n \t\tif (reference.isStatic()) {\n-\t\t\tif (!addFieldImport(reference)) {\n-\t\t\t\tscan(reference.getDeclaringType());\n-\t\t\t}\n+\t\t\taddFieldImport(reference);\n \t\t} else {\n \t\t\tscan(reference.getDeclaringType());\n \t\t}\n@@ -137,10 +138,15 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtTypeReference(CtTypeReference<T> reference) {\n \t\tif (!(reference instanceof CtArrayTypeReference)) {\n+\t\t\tCtTypeReference typeReference;\n \t\t\tif (reference.getDeclaringType() == null) {\n-\t\t\t\taddClassImport(reference);\n+\t\t\t\ttypeReference = reference;\n \t\t\t} else {\n-\t\t\t\taddClassImport(reference.getAccessType());\n+\t\t\t\ttypeReference = reference.getAccessType();\n+\t\t\t}\n+\n+\t\t\tif (!this.isTypeInCollision(typeReference, false)) {\n+\t\t\t\tthis.addClassImport(typeReference);\n \t\t\t}\n \t\t}\n \t\tsuper.visitCtTypeReference(reference);\n@@ -277,14 +283,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\tif (ref.getPackage() == null || ref.getPackage().isUnnamedPackage()) {\n \t\t\treturn false;\n \t\t}\n-\t\tif (ref.getPackage().getSimpleName().equals(\"java.lang\")) {\n-\t\t\tif (classNamePresentInJavaLang(ref)) {\n-\t\t\t\t// Don't import class with names clashing with some classes present in java.lang,\n-\t\t\t\t// because it leads to undecidability and compilation errors. I. e. always leave\n-\t\t\t\t// com.mycompany.String fully-qualified.\n-\t\t\t\treturn false;\n-\t\t\t}\n-\t\t}\n+\n \t\tif (targetType != null && targetType.canAccess(ref) == false) {\n \t\t\t//ref type is not visible in targetType we must not add import for it, java compiler would fail on that.\n \t\t\treturn false;\n@@ -560,7 +559,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t/**\n \t * Test if the reference can be imported, i.e. test if the importation could lead to a collision.\n-\t * In FQN mode, it only tests the first package name: if a collision occurs with this first one, it should be imported.\n \t * @param ref\n \t * @return true if the ref should be imported.\n \t */\n@@ -577,6 +575,12 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\tparent = ref;\n \t\t\t}\n \n+\t\t\t// in that case we are trying to import a type because of a literal we are scanning\n+\t\t\t// i.e. a string, an int, etc.\n+\t\t\tif (parent instanceof CtLiteral) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\n \t\t\tSet<String> localVariablesOfBlock = new HashSet<>();\n \n \t\t\tif (parent instanceof CtField) {\n@@ -588,8 +592,13 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t}\n \n \t\t\twhile (!(parent instanceof CtPackage)) {\n-\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference)) {\n-\t\t\t\t\tCtReference parentType = (CtReference) parent;\n+\t\t\t\tif ((parent instanceof CtFieldReference) || (parent instanceof CtExecutableReference) || (parent instanceof CtInvocation)) {\n+\t\t\t\t\tCtReference parentType;\n+\t\t\t\t\tif (parent instanceof CtInvocation) {\n+\t\t\t\t\t\tparentType = ((CtInvocation) parent).getExecutable();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tparentType = (CtReference) parent;\n+\t\t\t\t\t}\n \t\t\t\t\tLinkedList<String> qualifiedNameTokens = new LinkedList<>();\n \n \t\t\t\t\t// we don't want to test the current ref name, as we risk to create field import and make autoreference\n@@ -600,39 +609,54 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\t\t\tCtTypeReference typeReference;\n \t\t\t\t\tif (parent instanceof CtFieldReference) {\n \t\t\t\t\t\ttypeReference = ((CtFieldReference) parent).getDeclaringType();\n-\t\t\t\t\t} else {\n+\t\t\t\t\t} else if (parent instanceof CtExecutableReference) {\n \t\t\t\t\t\ttypeReference = ((CtExecutableReference) parent).getDeclaringType();\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\ttypeReference = ((CtInvocation) parent).getExecutable().getDeclaringType();\n \t\t\t\t\t}\n \n \t\t\t\t\tif (typeReference != null) {\n-\t\t\t\t\t\tqualifiedNameTokens.add(typeReference.getSimpleName());\n+\t\t\t\t\t\tqualifiedNameTokens.addFirst(typeReference.getSimpleName());\n \n \t\t\t\t\t\tif (typeReference.getPackage() != null) {\n-\t\t\t\t\t\t\tCtPackage ctPackage = typeReference.getPackage().getDeclaration();\n-\n-\t\t\t\t\t\t\twhile (ctPackage != null) {\n-\t\t\t\t\t\t\t\tqualifiedNameTokens.add(ctPackage.getSimpleName());\n-\n-\t\t\t\t\t\t\t\tCtElement packParent = ctPackage.getParent();\n-\t\t\t\t\t\t\t\tif (packParent.getParent() != null && !((CtPackage) packParent).getSimpleName().equals(CtPackage.TOP_LEVEL_PACKAGE_NAME)) {\n-\t\t\t\t\t\t\t\t\tctPackage = (CtPackage) packParent;\n-\t\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\t\tctPackage = null;\n-\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tStringTokenizer token = new StringTokenizer(typeReference.getPackage().getSimpleName(), CtPackage.PACKAGE_SEPARATOR);\n+\t\t\t\t\t\t\tint index = 0;\n+\t\t\t\t\t\t\twhile (token.hasMoreElements()) {\n+\t\t\t\t\t\t\t\tqualifiedNameTokens.add(index, token.nextToken());\n+\t\t\t\t\t\t\t\tindex++;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tif (!qualifiedNameTokens.isEmpty()) {\n \t\t\t\t\t\t// qualified name token are ordered in the reverse order\n \t\t\t\t\t\t// if the first package name is a variable name somewhere, it could lead to a collision\n-\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getLast()) || localVariablesOfBlock.contains(qualifiedNameTokens.getLast())) {\n-\t\t\t\t\t\t\tqualifiedNameTokens.removeLast();\n+\t\t\t\t\t\tif (fieldAndMethodsNames.contains(qualifiedNameTokens.getFirst()) || localVariablesOfBlock.contains(qualifiedNameTokens.getFirst())) {\n+\t\t\t\t\t\t\tqualifiedNameTokens.removeFirst();\n \n \t\t\t\t\t\t\tif (fqnMode) {\n-\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t// in case we are testing a type: we should not import it if its entire name is in collision\n+\t\t\t\t\t\t\t\t// for example: spoon.Launcher if a field spoon and another one Launcher exists\n+\t\t\t\t\t\t\t\tif (ref instanceof CtTypeReference) {\n+\t\t\t\t\t\t\t\t\tif (qualifiedNameTokens.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n+\t\t\t\t\t\t\t\t\tfor (int i =  0; i < qualifiedNameTokens.size(); i++) {\n+\t\t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n+\t\t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n+\t\t\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\treturn false;\n+\n+\t\t\t\t\t\t\t\t// However if it is a static method/field, we always accept to import them in this case\n+\t\t\t\t\t\t\t\t// It is the last possibility for managing import for us\n+\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\t// but if the other package names are not a variable name, it's ok to import\n-\t\t\t\t\t\t\t\tfor (int i = qualifiedNameTokens.size() - 1; i > 0; i--) {\n+\t\t\t\t\t\t\t\tfor (int i =  0; i < qualifiedNameTokens.size(); i++) {\n \t\t\t\t\t\t\t\t\tString testedToken = qualifiedNameTokens.get(i);\n \t\t\t\t\t\t\t\t\tif (!fieldAndMethodsNames.contains(testedToken) && !localVariablesOfBlock.contains(testedToken)) {\n \t\t\t\t\t\t\t\t\t\treturn false;\ndiff --git a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\nindex 912692f..8f93166 100644\n--- a/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n+++ b/src/main/java/spoon/reflect/visitor/MinimalImportScanner.java\n@@ -29,7 +29,8 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t/**\n \t * This method use @link{ImportScannerImpl#isTypeInCollision} to import a ref only if there is a collision\n-\t * @param ref\n+\t * @param ref: the type we are testing, it can be a CtTypeReference, a CtFieldReference or a CtExecutableReference\n+\t *\n \t * @return true if the ref should be imported.\n \t */\n \tprivate boolean shouldTypeBeImported(CtReference ref) {\n@@ -54,6 +55,12 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t@Override\n \tprotected boolean addFieldImport(CtFieldReference ref) {\n+\t\tif (ref.getDeclaringType() != null) {\n+\t\t\tif (isImportedInClassImports(ref.getDeclaringType())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n \t\tboolean shouldTypeBeImported = this.shouldTypeBeImported(ref);\n \n \t\tif (shouldTypeBeImported) {\n@@ -70,6 +77,11 @@ public class MinimalImportScanner extends ImportScannerImpl implements ImportSca\n \n \t@Override\n \tprotected boolean addMethodImport(CtExecutableReference ref) {\n+\t\tif (ref.getDeclaringType() != null) {\n+\t\t\tif (isImportedInClassImports(ref.getDeclaringType())) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n \t\tboolean shouldTypeBeImported = this.shouldTypeBeImported(ref);\n \n \t\tif (shouldTypeBeImported) {\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 2133fe5..8ede107 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -283,7 +283,7 @@ public class ElementPrinterHelper {\n \t\t\t\t\timportTypeStr = this.removeInnerTypeSeparator(fieldRef.getDeclaringType().getQualifiedName()) + \".\" + fieldRef.getSimpleName();\n \t\t\t\t}\n \n-\t\t\t\tif (!importTypeStr.equals(\"\")) {\n+\t\t\t\tif (!importTypeStr.equals(\"\") && !importTypeStr.startsWith(\"java.lang\")) {\n \t\t\t\t\tprinter.write(importStr + \" \" + importTypeStr + \";\").writeln().writeTabs();\n \t\t\t\t}\n \t\t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 483, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 511, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 89932184, 
        "hostName": "local", 
        "totalMemory": 262668288, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:22:44 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/234612953/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            65
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 66
        }, 
        "testing": {
          "stepDurations": [
            169
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 169
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:14:08 PM", 
      "totalDuration": 510
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1083, 
        "numberRunning": 1084, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/237078306", 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 5, 
          "testClass": "spoon.test.imports.ImportScannerTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "testTargetTypeNull", 
          "isError": true, 
          "testClass": "spoon.test.imports.ImportScannerTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237089137", 
        "date": "May 29, 2017 11:03:21 AM", 
        "id": 237089137
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237078306", 
        "date": "May 29, 2017 10:21:36 AM", 
        "id": 237078306
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b3f568da7a38aad38505e923d9b9f4025f38b0ca", 
        "sha": "b3f568da7a38aad38505e923d9b9f4025f38b0ca", 
        "branchName": "master", 
        "date": "May 29, 2017 10:54:20 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/54e1909ab7217cd8417d4d15cc7c0d127750b474", 
        "sha": "54e1909ab7217cd8417d4d15cc7c0d127750b474", 
        "branchName": "master", 
        "date": "May 29, 2017 10:13:14 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-237078306-237089137", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 484, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 512, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_56", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 9f46670..614a6f9 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -563,7 +563,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t * @return true if the ref should be imported.\n \t */\n \tprotected boolean isTypeInCollision(CtReference ref, boolean fqnMode) {\n-\t\tif (targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n+\t\tif (targetType != null && targetType.getSimpleName().equals(ref.getSimpleName()) && !targetType.equals(ref)) {\n \t\t\treturn true;\n \t\t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 144269200, 
        "hostName": "local", 
        "totalMemory": 258998272, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:14:54 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/237078306/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            93
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 94
        }, 
        "testing": {
          "stepDurations": [
            219
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 219
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:05:41 PM", 
      "totalDuration": 547
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1087, 
        "numberRunning": 1088, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/237133219", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "isError": false, 
          "testClass": "spoon.test.imports.ImportTest", 
          "testMethod": "testmportInCu"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 32, 
          "numberRunning": 33, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237187910", 
        "date": "May 29, 2017 4:29:03 PM", 
        "id": 237187910
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237133219", 
        "date": "May 29, 2017 1:34:16 PM", 
        "id": 237133219
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0b9650639379d1d9f38060d5b013015d01c5b231", 
        "sha": "0b9650639379d1d9f38060d5b013015d01c5b231", 
        "branchName": "master", 
        "date": "May 29, 2017 4:19:55 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/ce6baba196990f5ae3dcbf48bbdbd5d20cf95441", 
        "sha": "ce6baba196990f5ae3dcbf48bbdbd5d20cf95441", 
        "branchName": "master", 
        "date": "May 29, 2017 1:26:05 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-237133219-237187910", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 35, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_57", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 2781fcd..2749c97 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -1796,12 +1796,14 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@Override\n \tpublic void calculate(CompilationUnit sourceCompilationUnit, List<CtType<?>> types) {\n \t\tthis.sourceCompilationUnit = sourceCompilationUnit;\n-\t\t// reset the import scanner between each compilationunit\n+\n+\t\t// reset the importsContext to avoid errors with multiple CU\n \t\tif (env.isAutoImports()) {\n \t\t\tthis.importsContext = new ImportScannerImpl();\n \t\t} else {\n \t\t\tthis.importsContext = new MinimalImportScanner();\n \t\t}\n+\n \t\tSet<CtReference> imports = new HashSet<>();\n \t\tfor (CtType<?> t : types) {\n \t\t\timports.addAll(computeImports(t));\ndiff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 614a6f9..68e4f28 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -20,7 +20,6 @@ import spoon.reflect.code.CtBlock;\n import spoon.reflect.code.CtCatchVariable;\n import spoon.reflect.code.CtFieldAccess;\n import spoon.reflect.code.CtFieldRead;\n-import spoon.reflect.code.CtFieldWrite;\n import spoon.reflect.code.CtInvocation;\n import spoon.reflect.code.CtLiteral;\n import spoon.reflect.declaration.CtAnnotationType;\n@@ -80,7 +79,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t@Override\n \tpublic <T> void visitCtFieldRead(CtFieldRead<T> fieldRead) {\n \t\tenter(fieldRead);\n-\t\tscan(fieldRead.getVariable());\n \t\tscan(fieldRead.getAnnotations());\n \t\tscan(fieldRead.getTypeCasts());\n \t\tscan(fieldRead.getVariable());\n@@ -88,17 +86,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\texit(fieldRead);\n \t}\n \n-\t@Override\n-\tpublic <T> void visitCtFieldWrite(CtFieldWrite<T> fieldWrite) {\n-\t\tenter(fieldWrite);\n-\t\tscan(fieldWrite.getVariable());\n-\t\tscan(fieldWrite.getAnnotations());\n-\t\tscan(fieldWrite.getTypeCasts());\n-\t\tscan(fieldWrite.getVariable());\n-\t\tscan(fieldWrite.getTarget());\n-\t\texit(fieldWrite);\n-\t}\n-\n \t@Override\n \tpublic <T> void visitCtFieldReference(CtFieldReference<T> reference) {\n \t\tenter(reference);\n@@ -124,17 +111,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\texit(reference);\n \t}\n \n-\t@Override\n-\tpublic <T> void visitCtInvocation(CtInvocation<T> invocation) {\n-\t\tenter(invocation);\n-\t\tscan(invocation.getAnnotations());\n-\t\tscan(invocation.getTypeCasts());\n-\t\tscan(invocation.getTarget());\n-\t\tscan(invocation.getExecutable());\n-\t\tscan(invocation.getArguments());\n-\t\texit(invocation);\n-\t}\n-\n \t@Override\n \tpublic <T> void visitCtTypeReference(CtTypeReference<T> reference) {\n \t\tif (!(reference instanceof CtArrayTypeReference)) {\n@@ -207,9 +183,6 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t@Override\n \tpublic Collection<CtReference> computeAllImports(CtType<?> simpleType) {\n-\t\tclassImports.clear();\n-\t\tfieldImports.clear();\n-\t\tmethodImports.clear();\n \t\t//look for top declaring type of that simpleType\n \t\ttargetType = simpleType.getReference().getTopLevelType();\n \t\taddClassImport(simpleType.getReference());\n@@ -224,11 +197,7 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \n \t@Override\n \tpublic Collection<CtTypeReference<?>> computeImports(CtElement element) {\n-\t\tclassImports.clear();\n-\t\tfieldImports.clear();\n-\t\tmethodImports.clear();\n \t\t//look for top declaring type of that simpleType\n-\n \t\tif (element instanceof CtType) {\n \t\t\tCtType simpleType = (CtType) element;\n \t\t\ttargetType = simpleType.getReference().getTopLevelType();\n@@ -404,11 +373,11 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t */\n \tprivate boolean declaringTypeIsLocalOrImported(CtTypeReference declaringType) {\n \t\tif (declaringType != null) {\n-\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n+\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n-\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n+\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n \t\t\t\treturn true;\n \t\t\t}\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 484, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 516, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 173484160, 
        "hostName": "local", 
        "totalMemory": 262144000, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:02:25 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/237133219/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            89
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 90
        }, 
        "testing": {
          "stepDurations": [
            187
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 187
        }, 
        "cloning": {
          "stepDurations": [
            21
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 21
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:53:00 PM", 
      "totalDuration": 557
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1088, 
        "numberRunning": 1090, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/237507053", 
      "failingClasses": [
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "spoon.test.prettyprinter.LinesTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testIdenticalPrettyPrinter", 
          "testClass": "spoon.test.prettyprinter.LinesTest", 
          "detail": "class A {\n    ArrayList<String> list = new ArrayList<>();} not handled expected:<5> but was:<7>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "printClassCreatedWithSpoon", 
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest", 
          "detail": "expected:<[]package foo;\n\n\nclass...> but was:<[\n\n]package foo;\n\n\nclass...>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237511642", 
        "date": "May 30, 2017 3:22:20 PM", 
        "id": 237511642
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237507053", 
        "date": "May 30, 2017 3:08:35 PM", 
        "id": 237507053
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/67934eece720ef593284dfa39edf57a3aa9458e0", 
        "sha": "67934eece720ef593284dfa39edf57a3aa9458e0", 
        "branchName": "master", 
        "date": "May 30, 2017 3:14:01 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/4d49c23ba542e0eacb679d911a523cd9bf4a3712", 
        "sha": "4d49c23ba542e0eacb679d911a523cd9bf4a3712", 
        "branchName": "master", 
        "date": "May 30, 2017 3:00:14 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-237507053-237511642", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 485, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 516, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 4, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 24, 
        "numberDeleted": 23
      }
    }, 
    "bugId": "Bears_58", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 4439811..6986322 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -282,7 +282,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tcontext.elementStack.push(e);\n \t\t\tif (env.isPreserveLineNumbers()) {\n \t\t\t\tif (!(e instanceof CtNamedElement)) {\n-\t\t\t\t\tprinter.adjustPosition(e, sourceCompilationUnit);\n+\t\t\t\t\tprinter.adjustStartPosition(e);\n \t\t\t\t}\n \t\t\t}\n \t\t\te.accept(this);\n@@ -436,9 +436,10 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t}\n \t\t}\n \t\tprinter.decTab();\n+\t\tprinter.adjustEndPosition(block);\n \t\tif (env.isPreserveLineNumbers()) {\n \t\t\tif (!block.isImplicit()) {\n-\t\t\t\tprinter.write(\"}\");\n+\t\t\t\tprinter.writeTabs().write(\"}\");\n \t\t\t}\n \t\t} else {\n \t\t\tprinter.writeln().writeTabs();\n@@ -528,7 +529,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t// lst.addAll(elementPrinterHelper.getComments(ctClass, CommentOffset.INSIDE));\n \t\tprinter.write(\" {\").incTab();\n \t\telementPrinterHelper.writeElementList(ctClass.getTypeMembers());\n-\t\tprinter.decTab().writeTabs().write(\"}\");\n+\t\tprinter.adjustEndPosition(ctClass).decTab().writeTabs().write(\"}\");\n \t\tcontext.popCurrentThis();\n \t}\n \n@@ -1092,7 +1093,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \n \t\t\telementPrinterHelper.writeActualTypeArguments(invocation);\n \t\t\tif (env.isPreserveLineNumbers()) {\n-\t\t\t\tprinter.adjustPosition(invocation, sourceCompilationUnit);\n+\t\t\t\tprinter.adjustStartPosition(invocation);\n \t\t\t}\n \t\t\tprinter.write(invocation.getExecutable().getSimpleName());\n \t\t}\n@@ -1163,7 +1164,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tenterCtStatement(localVariable);\n \t\t}\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(localVariable, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(localVariable);\n \t\t}\n \t\tif (!context.noTypeDecl()) {\n \t\t\telementPrinterHelper.writeModifiers(localVariable);\n@@ -1185,7 +1186,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t@Override\n \tpublic <T> void visitCtCatchVariable(CtCatchVariable<T> catchVariable) {\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(catchVariable, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(catchVariable);\n \t\t}\n \t\telementPrinterHelper.writeModifiers(catchVariable);\n \t\tscan(catchVariable.getType());\n@@ -1813,7 +1814,12 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\telementPrinterHelper.writeHeader(types, imports);\n \t\tfor (CtType<?> t : types) {\n \t\t\tscan(t);\n-\t\t\tprinter.writeln().writeln().writeTabs();\n+\t\t\tif (!env.isPreserveLineNumbers()) {\n+\t\t\t\t// saving lines and chars\n+\t\t\t\tprinter.writeln().writeln().writeTabs();\n+\t\t\t} else {\n+\t\t\t\tprinter.adjustEndPosition(t);\n+\t\t\t}\n \t\t}\n \t}\n \ndiff --git a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\nindex 0882ead..0f50d2a 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/ElementPrinterHelper.java\n@@ -88,7 +88,7 @@ public class ElementPrinterHelper {\n \tpublic void visitCtNamedElement(CtNamedElement namedElement, CompilationUnit sourceCompilationUnit) {\n \t\twriteAnnotations(namedElement);\n \t\tif (env.isPreserveLineNumbers()) {\n-\t\t\tprinter.adjustPosition(namedElement, sourceCompilationUnit);\n+\t\t\tprinter.adjustStartPosition(namedElement);\n \t\t}\n \t}\n \n@@ -261,7 +261,6 @@ public class ElementPrinterHelper {\n \t\tif (!types.isEmpty()) {\n \t\t\tfor (CtType<?> ctType : types) {\n \t\t\t\twriteComment(ctType, CommentOffset.TOP_FILE);\n-\t\t\t\tprinter.writeln().writeln().writeTabs();\n \t\t\t}\n \t\t\t// writing the header package\n \t\t\tif (!types.get(0).getPackage().isUnnamedPackage()) {\ndiff --git a/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java b/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\nindex 9b19bc3..e4c01ed 100644\n--- a/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\n+++ b/src/main/java/spoon/reflect/visitor/printer/PrinterHelper.java\n@@ -16,7 +16,6 @@\n  */\n package spoon.reflect.visitor.printer;\n \n-import org.apache.log4j.Level;\n import spoon.compiler.Environment;\n import spoon.reflect.code.BinaryOperatorKind;\n import spoon.reflect.code.UnaryOperatorKind;\n@@ -160,24 +159,30 @@ public class PrinterHelper {\n \t\treturn (c == ' ') || (c == '\\t') || (c == '\\n') || (c == '\\r');\n \t}\n \n-\tpublic void adjustPosition(CtElement e, CompilationUnit unitExpected) {\n-\t\tif (e.getPosition() != null && !e.isImplicit() && e.getPosition().getCompilationUnit() != null && e.getPosition().getCompilationUnit() == unitExpected) {\n+\tpublic PrinterHelper adjustStartPosition(CtElement e) {\n+\t\tif (e.getPosition() != null && !e.isImplicit()) {\n+\t\t\t// we should add some lines\n \t\t\twhile (line < e.getPosition().getLine()) {\n \t\t\t\twriteln();\n \t\t\t}\n \t\t\t// trying to remove some lines\n \t\t\twhile (line > e.getPosition().getLine()) {\n \t\t\t\tif (!removeLine()) {\n-\t\t\t\t\tif (line > e.getPosition().getEndLine()) {\n-\t\t\t\t\t\tfinal String message = \"cannot adjust position of \" + e.getClass().getSimpleName() + \" '\" //\n-\t\t\t\t\t\t\t\t+ e.getShortRepresentation() + \"' \" + \" to match lines: \" + line + \" > [\" //\n-\t\t\t\t\t\t\t\t+ e.getPosition().getLine() + \", \" + e.getPosition().getEndLine() + \"]\"; //\n-\t\t\t\t\t\tenv.report(null, Level.WARN, e, message);\n-\t\t\t\t\t}\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\t\treturn this;\n+\t}\n+\n+\tpublic PrinterHelper adjustEndPosition(CtElement e) {\n+\t\tif (env.isPreserveLineNumbers() && e.getPosition() != null) {\n+\t\t\t// let's add lines if required\n+\t\t\twhile (line < e.getPosition().getEndLine()) {\n+\t\t\t\twriteln();\n+\t\t\t}\n+\t\t}\n+\t\treturn this;\n \t}\n \n \tpublic void undefineLine() {\ndiff --git a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\nindex ff14d04..d9e128b 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTBasedSpoonCompiler.java\n@@ -504,6 +504,7 @@ public class JDTBasedSpoonCompiler implements spoon.SpoonModelBuilder {\n \r\n \t\t\t\tIOUtils.copy(is, new FileOutputStream(file));\r\n \r\n+\r\n \t\t\t\tif (!printedFiles.contains(file)) {\r\n \t\t\t\t\tprintedFiles.add(file);\r\n \t\t\t\t}\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 169442888, 
        "hostName": "local", 
        "totalMemory": 299892736, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 3:50:43 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/237507053/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            76
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 76
        }, 
        "testing": {
          "stepDurations": [
            205
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 205
        }, 
        "cloning": {
          "stepDurations": [
            25
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 25
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:41:32 PM", 
      "totalDuration": 544
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1089, 
        "numberRunning": 1094, 
        "numberFailing": 4, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 2
          }, 
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }, 
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/237627560", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<<T[> void method1(T])> but was:<<T[ extends java.lang.String> void method1(T extends java.lang.String])>", 
          "isError": false, 
          "testMethod": "testOneReferenceWithGenericMethodOutOfTheClass", 
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest"
        }, 
        {
          "failureName": "spoon.SpoonException", 
          "detail": "Cannot resolve type erasure of the type parameter reference, which is not able to found it's declaration.", 
          "isError": true, 
          "testMethod": "testGetGenericMethodFromReference", 
          "testClass": "spoon.test.methodreference.MethodReferenceTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<T> but was:<T extends java.lang.String>", 
          "isError": false, 
          "testMethod": "testGetGenericExecutableReference", 
          "testClass": "spoon.test.methodreference.MethodReferenceTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<4> but was:<3>", 
          "isError": false, 
          "testMethod": "testWildcard", 
          "testClass": "spoon.test.generics.GenericsTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<<T[> void method1(T])> but was:<<T[ extends java.lang.String> void method1(T extends java.lang.String])>", 
          "isError": false, 
          "testMethod": "testMultiReferenceBetweenMethodsWithGenericInSameClass", 
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 12, 
          "testClass": "spoon.test.methodreference.MethodReferenceTest", 
          "numberFailing": 1, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 34, 
          "numberRunning": 35, 
          "testClass": "spoon.test.generics.GenericsTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 10, 
          "numberRunning": 12, 
          "testClass": "spoon.test.reference.ExecutableReferenceGenericTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237821366", 
        "date": "May 31, 2017 9:52:54 AM", 
        "id": 237821366
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/237627560", 
        "date": "May 30, 2017 8:29:09 PM", 
        "id": 237627560
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/95828480ea5fee6df898509c84c6a95b14681ce3", 
        "sha": "95828480ea5fee6df898509c84c6a95b14681ce3", 
        "branchName": "master", 
        "date": "May 31, 2017 9:43:56 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/b6e524c0a197dd2cfe3b4752737e85729d17a59c", 
        "sha": "b6e524c0a197dd2cfe3b4752737e85729d17a59c", 
        "branchName": "master", 
        "date": "May 30, 2017 8:20:24 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-237627560-237821366", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 4, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 71, 
        "numberDeleted": 58
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_59", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 6986322..46b0b40 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -535,7 +535,24 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \n \t@Override\n \tpublic void visitCtTypeParameter(CtTypeParameter typeParameter) {\n-\t\tvisitCtTypeParameterReference(typeParameter.getReference());\n+\t\tCtTypeParameterReference ref = typeParameter.getReference();\n+\t\tif (ref.isImplicit()) {\n+\t\t\treturn;\n+\t\t}\n+\t\telementPrinterHelper.writeAnnotations(ref);\n+\t\tif (printQualified(ref)) {\n+\t\t\tprinter.write(ref.getQualifiedName());\n+\t\t} else {\n+\t\t\tprinter.write(ref.getSimpleName());\n+\t\t}\n+\t\tif (ref.getBoundingType() != null) {\n+\t\t\tif (ref.isUpper()) {\n+\t\t\t\tprinter.write(\" extends \");\n+\t\t\t} else {\n+\t\t\t\tprinter.write(\" super \");\n+\t\t\t}\n+\t\t\tscan(ref.getBoundingType());\n+\t\t}\n \t}\n \n \t@Override\n@@ -1585,21 +1602,29 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t} else {\n \t\t\tprinter.write(ref.getSimpleName());\n \t\t}\n-\t\tif (ref.getBoundingType() != null) {\n-\t\t\tif (ref.isUpper()) {\n+\t}\n+\n+\t@Override\n+\tpublic void visitCtWildcardReference(CtWildcardReference wildcardReference) {\n+\t\tif (wildcardReference.isImplicit()) {\n+\t\t\treturn;\n+\t\t}\n+\t\telementPrinterHelper.writeAnnotations(wildcardReference);\n+\t\tif (printQualified(wildcardReference)) {\n+\t\t\tprinter.write(wildcardReference.getQualifiedName());\n+\t\t} else {\n+\t\t\tprinter.write(wildcardReference.getSimpleName());\n+\t\t}\n+\t\tif (wildcardReference.getBoundingType() != null) {\n+\t\t\tif (wildcardReference.isUpper()) {\n \t\t\t\tprinter.write(\" extends \");\n \t\t\t} else {\n \t\t\t\tprinter.write(\" super \");\n \t\t\t}\n-\t\t\tscan(ref.getBoundingType());\n+\t\t\tscan(wildcardReference.getBoundingType());\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic void visitCtWildcardReference(CtWildcardReference wildcardReference) {\n-\t\tvisitCtTypeParameterReference(wildcardReference);\n-\t}\n-\n \tprivate boolean printQualified(CtTypeReference<?> ref) {\n \t\tif (importsContext.isImported(ref) || (this.env.isAutoImports() && ref.getPackage() != null && ref.getPackage().getSimpleName().equals(\"java.lang\"))) {\n \t\t\t// If my.pkg.Something is imported, but\ndiff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 67c67e4..9b0bdea 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -16,20 +16,6 @@\n  */\n package spoon.support.compiler.jdt;\n \n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;\n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;\n-import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.TreeMap;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n import org.eclipse.jdt.core.compiler.CharOperation;\n import org.eclipse.jdt.internal.compiler.ast.ASTNode;\n import org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;\n@@ -79,7 +65,6 @@ import org.eclipse.jdt.internal.compiler.lookup.TypeBinding;\n import org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;\n import org.eclipse.jdt.internal.compiler.lookup.VariableBinding;\n import org.eclipse.jdt.internal.compiler.lookup.WildcardBinding;\n-\n import spoon.reflect.code.CtLambda;\n import spoon.reflect.declaration.CtPackage;\n import spoon.reflect.declaration.CtParameter;\n@@ -97,8 +82,27 @@ import spoon.reflect.reference.CtTypeParameterReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.reflect.reference.CtVariableReference;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.TreeMap;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchPackage;\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchType;\n+import static spoon.support.compiler.jdt.JDTTreeBuilderQuery.searchTypeBinding;\n+\n public class ReferenceBuilder {\n \n+\t// Allow to detect circular references and to avoid endless recursivity\n+\t// when resolving parameterizedTypes (e.g. Enum<E extends Enum<E>>)\n+\tprivate Set<TypeBinding> exploringParameterizedBindings = new HashSet<>();\n \tprivate Map<String, CtTypeReference<?>> basestypes = new TreeMap<>();\n \n \tprivate boolean bounds = false;\n@@ -650,7 +654,12 @@ public class ReferenceBuilder {\n \t\t\t\t\tif (bindingCache.containsKey(b)) {\n \t\t\t\t\t\tref.addActualTypeArgument(getCtCircularTypeReference(b));\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tref.addActualTypeArgument(getTypeReference(b));\n+\t\t\t\t\t\tif (!this.exploringParameterizedBindings.contains(b)) {\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.add(b);\n+\t\t\t\t\t\t\tref.addActualTypeArgument(getTypeReference(b));\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.remove(b);\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n@@ -676,12 +685,35 @@ public class ReferenceBuilder {\n \t\t\tref.setSimpleName(new String(binding.sourceName()));\n \t\t} else if (binding instanceof TypeVariableBinding) {\n \t\t\tboolean oldBounds = bounds;\n-\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();\n+\n \t\t\tif (binding instanceof CaptureBinding) {\n \t\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n \t\t\t\tbounds = true;\n \t\t\t} else {\n+\t\t\t\tTypeVariableBinding typeParamBinding = (TypeVariableBinding) binding;\n+\t\t\t\tReferenceBinding superClass = typeParamBinding.superclass;\n+\t\t\t\tReferenceBinding[] superInterfaces = typeParamBinding.superInterfaces();\n+\n+\t\t\t\tCtTypeReference refSuperClass = null;\n+\n+\t\t\t\t// if the type parameter has a super class other than java.lang.Object, we get it\n+\t\t\t\t// superClass.superclass() is null if it's java.lang.Object\n+\t\t\t\tif (superClass != null && !(superClass.superclass() == null)) {\n+\t\t\t\t\trefSuperClass = this.getTypeReference(superClass);\n+\n+\t\t\t\t// if the type parameter has a super interface, then we'll get it too, as a superclass\n+\t\t\t\t// type parameter can only extends an interface or a class, so we don't make the distinction\n+\t\t\t\t// in Spoon. Moreover we can only have one extends in a type parameter.\n+\t\t\t\t} else if (superInterfaces != null && superInterfaces.length == 1) {\n+\t\t\t\t\trefSuperClass = this.getTypeReference(superInterfaces[0]);\n+\t\t\t\t}\n+\n+\t\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createTypeParameterReference();\n \t\t\t\tref.setSimpleName(new String(binding.sourceName()));\n+\n+\t\t\t\tif (refSuperClass != null) {\n+\t\t\t\t\t((CtTypeParameterReference) ref).addBound(refSuperClass);\n+\t\t\t\t}\n \t\t\t}\n \t\t\tTypeVariableBinding b = (TypeVariableBinding) binding;\n \t\t\tif (bounds) {\n@@ -721,15 +753,19 @@ public class ReferenceBuilder {\n \t\t\t\tref = ref == null ? ref : ref.clone();\n \t\t\t}\n \t\t} else if (binding instanceof WildcardBinding) {\n+\t\t\tWildcardBinding wildcardBinding = (WildcardBinding) binding;\n \t\t\tref = this.jdtTreeBuilder.getFactory().Core().createWildcardReference();\n-\t\t\tif (((WildcardBinding) binding).boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {\n+\n+\t\t\tif (wildcardBinding.boundKind == Wildcard.SUPER && ref instanceof CtTypeParameterReference) {\n \t\t\t\t((CtTypeParameterReference) ref).setUpper(false);\n \t\t\t}\n \n-\t\t\tif (((WildcardBinding) binding).bound != null && ref instanceof CtTypeParameterReference) {\n-\t\t\t\tif (bindingCache.containsKey(((WildcardBinding) binding).bound)) {\n-\t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(((WildcardBinding) binding).bound));\n+\t\t\tif (wildcardBinding.bound != null && ref instanceof CtTypeParameterReference) {\n+\t\t\t\tif (bindingCache.containsKey(wildcardBinding.bound)) {\n+\t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getCtCircularTypeReference(wildcardBinding.bound));\n \t\t\t\t} else {\n+\n+\n \t\t\t\t\t((CtTypeParameterReference) ref).setBoundingType(getTypeReference(((WildcardBinding) binding).bound));\n \t\t\t\t}\n \t\t\t}\n@@ -801,6 +837,7 @@ public class ReferenceBuilder {\n \t\t\tthrow new RuntimeException(\"Unknown TypeBinding: \" + binding.getClass() + \" \" + binding);\n \t\t}\n \t\tbindingCache.remove(binding);\n+\t\tthis.exploringParameterizedBindings.clear();\n \t\treturn (CtTypeReference<T>) ref;\n \t}\n \ndiff --git a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\nindex a194b82..94d6a33 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n@@ -315,7 +315,9 @@ public class CtExecutableReferenceImpl<T> extends CtReferenceImpl implements CtE\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tfor (int i = 0; i < parameters.size(); i++) {\n-\t\t\t\tif (m.getParameterTypes()[i] != parameters.get(i).getActualClass()) {\n+\t\t\t\tClass<?> methodParameterType = m.getParameterTypes()[i];\n+\t\t\t\tClass<?> currentParameterType = parameters.get(i).getActualClass();\n+\t\t\t\tif (methodParameterType != currentParameterType) {\n \t\t\t\t\tcontinue method_loop;\n \t\t\t\t}\n \t\t\t}\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex 3267dd6..0fe88f8 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -178,7 +178,8 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \t\tCtElement e = this;\n \t\tCtElement parent = getParent();\n \t\tif (parent instanceof CtExecutableReference) {\n-\t\t\tCtElement parent2 = parent.getParent();\n+\n+\t\t\tCtElement parent2 = ((CtExecutableReference) parent).getDeclaration();\n \t\t\tif (parent2 instanceof CtMethod) {\n \t\t\t\te = parent2;\n \t\t\t} else {\n", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 516, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 191414952, 
        "hostName": "local", 
        "totalMemory": 252182528, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 3:50:12 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/237627560/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            72
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 73
        }, 
        "testing": {
          "stepDurations": [
            210
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 210
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:40:44 PM", 
      "totalDuration": 562
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1093, 
        "numberRunning": 1095, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/238234811", 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "spoon.test.prettyprinter.LinesTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "spoon.test.trycatch.TryCatchTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "isError": false, 
          "testClass": "spoon.test.prettyprinter.LinesTest", 
          "testMethod": "testPrettyPrinterWithLines"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testMultiTryCatchWithCustomExceptions", 
          "testClass": "spoon.test.trycatch.TryCatchTest", 
          "detail": "expected:<[]catch (spoon.test.tr...> but was:<[ ]catch (spoon.test.tr...>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/238235509", 
        "date": "Jun 1, 2017 9:35:46 AM", 
        "id": 238235509
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/238234811", 
        "date": "Jun 1, 2017 9:33:55 AM", 
        "id": 238234811
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d3a9c911046c1ca36fd193d5f333ed8f8e3e76d7", 
        "sha": "d3a9c911046c1ca36fd193d5f333ed8f8e3e76d7", 
        "branchName": "master", 
        "date": "Jun 1, 2017 9:27:28 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/419d8133ce970465eb018f074d251a7a26562de9", 
        "sha": "419d8133ce970465eb018f074d251a7a26562de9", 
        "branchName": "master", 
        "date": "Jun 1, 2017 9:25:20 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-238234811-238235509", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 516, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_60", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\nindex c775076..9b90830 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtElementImpl.java\n@@ -31,8 +31,8 @@ import spoon.reflect.visitor.DefaultJavaPrettyPrinter;\n import spoon.reflect.visitor.Filter;\n import spoon.reflect.visitor.ModelConsistencyChecker;\n import spoon.reflect.visitor.Query;\n-import spoon.reflect.visitor.chain.CtFunction;\n import spoon.reflect.visitor.chain.CtConsumableFunction;\n+import spoon.reflect.visitor.chain.CtFunction;\n import spoon.reflect.visitor.chain.CtQuery;\n import spoon.reflect.visitor.filter.AnnotationFilter;\n import spoon.support.util.EmptyClearableList;\n@@ -228,7 +228,9 @@ public abstract class CtElementImpl implements CtElement, Serializable {\n \t\t\tLOGGER.error(ERROR_MESSAGE_TO_STRING, ignore);\n \t\t\terrorMessage = ERROR_MESSAGE_TO_STRING;\n \t\t}\n-\t\treturn printer.toString() + errorMessage;\n+\t\t// in line-preservation mode, newlines are added at the beginning to matches the lines\n+\t\t// removing them from the toString() representation\n+\t\treturn printer.toString().replaceFirst(\"^\\\\s+\", \"\") + errorMessage;\n \t}\n \n \t@SuppressWarnings(\"unchecked\")\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 361580648, 
        "hostName": "spirals-bears", 
        "totalMemory": 450887680, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:49:52 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/238234811/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            1, 
            69
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 70
        }, 
        "testing": {
          "stepDurations": [
            265
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 265
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:38:29 AM", 
      "totalDuration": 676
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1096, 
        "numberRunning": 1097, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/239865488", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<spoon.reflect.code.C[tComment$C]ommentType> but was:<spoon.reflect.code.C[]ommentType>", 
          "isError": false, 
          "testMethod": "testCreateTypeRef", 
          "testClass": "spoon.test.factory.TypeFactoryTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "spoon.test.factory.TypeFactoryTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/239871875", 
        "date": "Jun 6, 2017 10:31:33 AM", 
        "id": 239871875
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/239865488", 
        "date": "Jun 6, 2017 10:07:02 AM", 
        "id": 239865488
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/acda3dd7f0377564c9c6e4f31ab485490c9e2c62", 
        "sha": "acda3dd7f0377564c9c6e4f31ab485490c9e2c62", 
        "branchName": "master", 
        "date": "Jun 6, 2017 10:23:19 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e95e933309dfd90ce178f88cb192b514439f960c", 
        "sha": "e95e933309dfd90ce178f88cb192b514439f960c", 
        "branchName": "master", 
        "date": "Jun 6, 2017 9:58:27 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-239865488-239871875", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 518, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 4
      }
    }, 
    "bugId": "Bears_61", 
    "diff": "diff --git a/src/main/java/spoon/reflect/factory/CodeFactory.java b/src/main/java/spoon/reflect/factory/CodeFactory.java\nindex d7287e2..48f5a83 100644\n--- a/src/main/java/spoon/reflect/factory/CodeFactory.java\n+++ b/src/main/java/spoon/reflect/factory/CodeFactory.java\n@@ -573,6 +573,10 @@ public class CodeFactory extends SubFactory {\n \t\tif (originalClass.isPrimitive()) {\n \t\t\treturn typeReference;\n \t\t}\n+\t\tif (originalClass.getDeclaringClass() != null) {\n+\t\t\t// the inner class reference does not have package\n+\t\t\treturn typeReference.setDeclaringType(createCtTypeReference(originalClass.getDeclaringClass()));\n+\t\t}\n \t\treturn typeReference.setPackage(createCtPackageReference(originalClass.getPackage()));\n \t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 304523232, 
        "hostName": "spirals-bears", 
        "totalMemory": 480772096, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:38:19 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/239865488/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            70
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 70
        }, 
        "testing": {
          "stepDurations": [
            258
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 258
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:27:18 AM", 
      "totalDuration": 654
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1097, 
        "numberRunning": 1099, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/239871875", 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 12, 
          "testClass": "spoon.test.template.TemplateTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testSimpleTemplate", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<0> but was:<1>", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testSubstitutionInsertAllNtoN", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<0> but was:<1>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/239928671", 
        "date": "Jun 6, 2017 1:47:42 PM", 
        "id": 239928671
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/239871875", 
        "date": "Jun 6, 2017 10:31:33 AM", 
        "id": 239871875
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e95cd3fb968265d3757f40e290c9f7c4cad55afb", 
        "sha": "e95cd3fb968265d3757f40e290c9f7c4cad55afb", 
        "branchName": "master", 
        "date": "Jun 6, 2017 1:39:33 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/acda3dd7f0377564c9c6e4f31ab485490c9e2c62", 
        "sha": "acda3dd7f0377564c9c6e4f31ab485490c9e2c62", 
        "branchName": "master", 
        "date": "Jun 6, 2017 10:23:19 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-239871875-239928671", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 521, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 28
      }
    }, 
    "bugId": "Bears_62", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex f5ce921..36e5c58 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -17,6 +17,7 @@\n package spoon.support.visitor;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -691,6 +692,19 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t\t//the type cannot be adapted.\n \t\t\t\t\treturn false;\n \t\t\t\t}\n+\n+\t\t\t\t// we can be in a case where thisType is CtType and thatType is CtType<?>\n+\t\t\t\t// the types are not equals but it's overridden\n+\t\t\t\t// in that specific case we simply remove the list of actualTypeArguments from thatType\n+\t\t\t\tif (thisType.getActualTypeArguments().isEmpty() && thatType.getActualTypeArguments().size() == 1) {\n+\t\t\t\t\tCtTypeReference actualTA = thatType.getActualTypeArguments().get(0);\n+\t\t\t\t\tif (actualTA instanceof CtWildcardReference) {\n+\t\t\t\t\t\tif (((CtWildcardReference) actualTA).getBoundingType() == null) {\n+\t\t\t\t\t\t\tthatType.setActualTypeArguments(Collections.EMPTY_LIST);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n \t\t\t\tif (thisType.equals(thatType) == false) {\n \t\t\t\t\treturn false;\n \t\t\t\t}\ndiff --git a/src/main/java/spoon/template/Substitution.java b/src/main/java/spoon/template/Substitution.java\nindex 966fbd4..825c7df 100644\n--- a/src/main/java/spoon/template/Substitution.java\n+++ b/src/main/java/spoon/template/Substitution.java\n@@ -41,6 +41,7 @@ import spoon.support.template.SubstitutionVisitor;\n \n import java.lang.reflect.Field;\n import java.util.List;\n+import java.util.Set;\n \n /**\n  * This class defines the substitution API for templates (see {@link Template}).\n@@ -171,6 +172,7 @@ public abstract class Substitution {\n \t */\n \tstatic void insertAllMethods(CtType<?> targetType, Template<?> template, CtClass<?> sourceClass) {\n \n+\t\tSet<CtMethod<?>> methodsOfTemplate = sourceClass.getFactory().Type().get(Template.class).getMethods();\n \t\t// insert all the methods\n \t\tfor (CtMethod<?> m : sourceClass.getMethods()) {\n \t\t\tif (m.getAnnotation(Local.class) != null) {\n@@ -179,6 +181,18 @@ public abstract class Substitution {\n \t\t\tif (m.getAnnotation(Parameter.class) != null) {\n \t\t\t\tcontinue;\n \t\t\t}\n+\n+\t\t\tboolean isOverridingTemplateItf = false;\n+\t\t\tfor (CtMethod m2 : methodsOfTemplate) {\n+\t\t\t\tif (m.isOverriding(m2)) {\n+\t\t\t\t\tisOverridingTemplateItf = true;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif (isOverridingTemplateItf) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n \t\t\tinsertMethod(targetType, template, m);\n \t\t}\n \t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 256503352, 
        "hostName": "spirals-bears", 
        "totalMemory": 464519168, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:36:06 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/239871875/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            66
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 66
        }, 
        "testing": {
          "stepDurations": [
            261
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 261
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:25:11 AM", 
      "totalDuration": 647
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1097, 
        "numberRunning": 1101, 
        "numberFailing": 4, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/240253890", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Can't compile testclasses", 
          "isError": false, 
          "testMethod": "testConstructorCallGenerics", 
          "testClass": "spoon.test.generics.GenericsTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<1> but was:<0>", 
          "isError": false, 
          "testMethod": "testDiamondComplexGenericsRxJava", 
          "testClass": "spoon.test.generics.GenericsTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Can't compile testclasses", 
          "isError": false, 
          "testMethod": "testNewClassGenerics", 
          "testClass": "spoon.test.generics.GenericsTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Can't compile testclasses", 
          "isError": false, 
          "testMethod": "testInvocationGenerics", 
          "testClass": "spoon.test.generics.GenericsTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 33, 
          "numberRunning": 37, 
          "testClass": "spoon.test.generics.GenericsTest", 
          "numberFailing": 4, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/240366857", 
        "date": "Jun 7, 2017 3:22:56 PM", 
        "id": 240366857
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/240253890", 
        "date": "Jun 7, 2017 9:27:11 AM", 
        "id": 240253890
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/c3e72a990e1d507f010cdcdf6da4662f0848eedf", 
        "sha": "c3e72a990e1d507f010cdcdf6da4662f0848eedf", 
        "branchName": "master", 
        "date": "Jun 7, 2017 3:14:23 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/17f3a3fe7ce6ce1ea7a4f0226391b322996e7dd5", 
        "sha": "17f3a3fe7ce6ce1ea7a4f0226391b322996e7dd5", 
        "branchName": "master", 
        "date": "Jun 7, 2017 9:18:59 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-240253890-240366857", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 12, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_63", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex b842daa..3e81dbc 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -86,10 +86,8 @@ import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n import java.util.TreeMap;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n@@ -102,7 +100,7 @@ public class ReferenceBuilder {\n \n \t// Allow to detect circular references and to avoid endless recursivity\n \t// when resolving parameterizedTypes (e.g. Enum<E extends Enum<E>>)\n-\tprivate Set<TypeBinding> exploringParameterizedBindings = new HashSet<>();\n+\tprivate Map<TypeBinding, CtTypeReference> exploringParameterizedBindings = new HashMap<>();\n \tprivate Map<String, CtTypeReference<?>> basestypes = new TreeMap<>();\n \n \tprivate boolean bounds = false;\n@@ -654,11 +652,16 @@ public class ReferenceBuilder {\n \t\t\t\t\tif (bindingCache.containsKey(b)) {\n \t\t\t\t\t\tref.addActualTypeArgument(getCtCircularTypeReference(b));\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tif (!this.exploringParameterizedBindings.contains(b)) {\n-\t\t\t\t\t\t\tthis.exploringParameterizedBindings.add(b);\n-\t\t\t\t\t\t\tref.addActualTypeArgument(getTypeReference(b));\n+\t\t\t\t\t\tif (!this.exploringParameterizedBindings.containsKey(b)) {\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.put(b, null);\n+\t\t\t\t\t\t\tCtTypeReference typeRefB = getTypeReference(b);\n+\t\t\t\t\t\t\tthis.exploringParameterizedBindings.put(b, typeRefB);\n+\t\t\t\t\t\t\tref.addActualTypeArgument(typeRefB);\n \t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tthis.exploringParameterizedBindings.remove(b);\n+\t\t\t\t\t\t\tCtTypeReference typeRefB = this.exploringParameterizedBindings.get(b);\n+\t\t\t\t\t\t\tif (typeRefB != null) {\n+\t\t\t\t\t\t\t\tref.addActualTypeArgument(typeRefB.clone());\n+\t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 531, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 312288488, 
        "hostName": "spirals-bears", 
        "totalMemory": 503316480, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:33:22 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/240253890/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            68
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 68
        }, 
        "testing": {
          "stepDurations": [
            259
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 259
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:22:26 AM", 
      "totalDuration": 649
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1101, 
        "numberRunning": 1102, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/240675027", 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest", 
          "testMethod": "testClassTypingContextContinueScanning", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/240677764", 
        "date": "Jun 8, 2017 9:14:10 AM", 
        "id": 240677764
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/240675027", 
        "date": "Jun 8, 2017 9:03:40 AM", 
        "id": 240675027
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/40326ca33374cd8ae60603fa48b95e7224792e10", 
        "sha": "40326ca33374cd8ae60603fa48b95e7224792e10", 
        "branchName": "master", 
        "date": "Jun 8, 2017 9:04:51 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3ae28a102133049d0e85b9da19954f0b96b5bf97", 
        "sha": "3ae28a102133049d0e85b9da19954f0b96b5bf97", 
        "branchName": "master", 
        "date": "Jun 8, 2017 8:55:13 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-240675027-240677764", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 486, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 531, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 28, 
        "numberDeleted": 22
      }
    }, 
    "bugId": "Bears_64", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex 36e5c58..4cec550 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -42,6 +42,7 @@ import spoon.reflect.reference.CtWildcardReference;\n import spoon.reflect.visitor.chain.CtConsumer;\n import spoon.reflect.visitor.chain.ScanningMode;\n import spoon.reflect.visitor.filter.SuperInheritanceHierarchyFunction;\n+import spoon.support.SpoonClassNotFoundException;\n \n /**\n  * Helper class created from type X or reference to X.\n@@ -188,6 +189,11 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\treturn null;\n \t\t}\n \t\tfinal HierarchyListener listener = new HierarchyListener(getVisitedSet());\n+\t\t/*\n+\t\t * remove last resolved class from the list of visited,\n+\t\t * because it would avoid visiting it's super hierarchy\n+\t\t */\n+\t\tgetVisitedSet().remove(lastResolvedSuperclass.getQualifiedName());\n \t\t/*\n \t\t * visit super inheritance class hierarchy of lastResolve type of level of `type` to found it's actual type arguments.\n \t\t */\n@@ -204,7 +210,29 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t * which are going to be substituted as arguments to formal type parameters of super type\n \t\t\t\t */\n \t\t\t\tString superTypeQualifiedName = typeRef.getQualifiedName();\n-\t\t\t\tList<CtTypeReference<?>> superTypeActualTypeArgumentsResolvedFromSubType = resolveTypeParameters(typeRef.getActualTypeArguments());\n+\t\t\t\tList<CtTypeReference<?>> actualTypeArguments = typeRef.getActualTypeArguments();\n+\t\t\t\tif (actualTypeArguments.isEmpty()) {\n+\t\t\t\t\t//may be they are not set - check whether type declares some generic parameters\n+\t\t\t\t\tList<CtTypeParameter> typeParams;\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tCtType<?> type = typeRef.getTypeDeclaration();\n+\t\t\t\t\t\ttypeParams = type.getFormalCtTypeParameters();\n+\t\t\t\t\t} catch (final SpoonClassNotFoundException e) {\n+\t\t\t\t\t\tif (typeRef.getFactory().getEnvironment().getNoClasspath()) {\n+\t\t\t\t\t\t\ttypeParams = Collections.emptyList();\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tthrow e;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (typeParams.size() > 0) {\n+\t\t\t\t\t\t//yes, there are generic type parameters. Reference should use actualTypeArguments computed from their bounds\n+\t\t\t\t\t\tactualTypeArguments = new ArrayList<>(typeParams.size());\n+\t\t\t\t\t\tfor (CtTypeParameter typeParam : typeParams) {\n+\t\t\t\t\t\t\tactualTypeArguments.add(typeParam.getTypeErasure());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tList<CtTypeReference<?>> superTypeActualTypeArgumentsResolvedFromSubType = resolveTypeParameters(actualTypeArguments);\n \t\t\t\t//Remember actual type arguments of `type`\n \t\t\t\ttypeToArguments.put(superTypeQualifiedName, superTypeActualTypeArgumentsResolvedFromSubType);\n \t\t\t\tif (typeQualifiedName.equals(superTypeQualifiedName)) {\n@@ -216,6 +244,12 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t}\n \t\t\t}\n \t\t});\n+\t\tif (listener.foundArguments == null) {\n+\t\t\t/*\n+\t\t\t * superclass was not found. We have scanned whole hierarchy\n+\t\t\t */\n+\t\t\tlastResolvedSuperclass = null;\n+\t\t}\n \t\treturn listener.foundArguments;\n \t}\n \n@@ -427,12 +461,11 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t}\n \t\t@Override\n \t\tpublic ScanningMode enter(CtTypeReference<?> typeRef, boolean isClass) {\n-\t\t\tScanningMode mode = super.enter(typeRef);\n-\t\t\tif (mode == ScanningMode.SKIP_ALL) {\n-\t\t\t\t//this interface was already visited. Do not visit it again\n-\t\t\t\treturn mode;\n-\t\t\t}\n \t\t\tif (isClass) {\n+\t\t\t\t/*\n+\t\t\t\t * test foundArguments and skip all before call of super.enter,\n+\t\t\t\t * which would add that not visited type into visitedSet\n+\t\t\t\t */\n \t\t\t\tif (foundArguments != null) {\n \t\t\t\t\t//we have found result then we can finish before entering super class. All interfaces of found type should be still visited\n \t\t\t\t\t//skip before super class (and it's interfaces) of found type is visited\n@@ -445,6 +478,11 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\t\t\t */\n \t\t\t\tlastResolvedSuperclass = typeRef;\n \t\t\t}\n+\t\t\tScanningMode mode = super.enter(typeRef);\n+\t\t\tif (mode == ScanningMode.SKIP_ALL) {\n+\t\t\t\t//this interface was already visited. Do not visit it again\n+\t\t\t\treturn mode;\n+\t\t\t}\n \t\t\t//this type was not visited yet. Visit it normally\n \t\t\treturn ScanningMode.NORMAL;\n \t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 350738800, 
        "hostName": "spirals-bears", 
        "totalMemory": 519045120, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:29:23 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/240675027/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            66
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 67
        }, 
        "testing": {
          "stepDurations": [
            260
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 260
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:18:22 AM", 
      "totalDuration": 655
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1103, 
        "numberRunning": 1104, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/241091669", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "The annotation must have a value expected:<1> but was:<0>", 
          "isError": false, 
          "testMethod": "testAnnotationValueReflection", 
          "testClass": "spoon.test.annotation.AnnotationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 39, 
          "numberRunning": 40, 
          "testClass": "spoon.test.annotation.AnnotationTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/241205460", 
        "date": "Jun 9, 2017 4:11:35 PM", 
        "id": 241205460
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/241091669", 
        "date": "Jun 9, 2017 9:56:27 AM", 
        "id": 241091669
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/bf03cb208312146c33547bbdcf868f2fe0d54670", 
        "sha": "bf03cb208312146c33547bbdcf868f2fe0d54670", 
        "branchName": "master", 
        "date": "Jun 9, 2017 4:03:18 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/841edfc2a1163065084741c56abe4f556f9678b1", 
        "sha": "841edfc2a1163065084741c56abe4f556f9678b1", 
        "branchName": "master", 
        "date": "Jun 9, 2017 9:47:36 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-241091669-241205460", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 12, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_65", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\nindex 91093fe..e380bbb 100644\n--- a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n+++ b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n@@ -217,10 +217,20 @@ public class JavaReflectionTreeBuilder extends JavaReflectionVisitorImpl {\n \t}\n \n \t@Override\n-\tpublic void visitAnnotation(Annotation annotation) {\n+\tpublic void visitAnnotation(final Annotation annotation) {\n \t\tfinal CtAnnotation<Annotation> ctAnnotation = factory.Core().createAnnotation();\n \n-\t\tenter(new AnnotationRuntimeBuilderContext(ctAnnotation));\n+\t\tenter(new AnnotationRuntimeBuilderContext(ctAnnotation) {\n+\t\t\t@Override\n+\t\t\tpublic void addMethod(CtMethod ctMethod) {\n+\t\t\t\ttry {\n+\t\t\t\t\tObject value = annotation.getClass().getMethod(ctMethod.getSimpleName()).invoke(annotation);\n+\t\t\t\t\tctAnnotation.addValue(ctMethod.getSimpleName(), value);\n+\t\t\t\t} catch (Exception ignore) {\n+\t\t\t\t\tctAnnotation.addValue(ctMethod.getSimpleName(), \"\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t});\n \t\tsuper.visitAnnotation(annotation);\n \t\texit();\n \ndiff --git a/src/main/java/spoon/support/visitor/java/JavaReflectionVisitorImpl.java b/src/main/java/spoon/support/visitor/java/JavaReflectionVisitorImpl.java\nindex 0711615..d4a7837 100644\n--- a/src/main/java/spoon/support/visitor/java/JavaReflectionVisitorImpl.java\n+++ b/src/main/java/spoon/support/visitor/java/JavaReflectionVisitorImpl.java\n@@ -154,6 +154,9 @@ class JavaReflectionVisitorImpl implements JavaReflectionVisitor {\n \tpublic void visitAnnotation(Annotation annotation) {\n \t\tif (annotation.annotationType() != null) {\n \t\t\tvisitClassReference(annotation.annotationType());\n+\t\t\tfor (RtMethod method : getDeclaredMethods(annotation.annotationType())) {\n+\t\t\t\tvisitMethod(method);\n+\t\t\t}\n \t\t}\n \t}\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 488, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 532, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 322824504, 
        "hostName": "spirals-bears", 
        "totalMemory": 506986496, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:26:57 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/241091669/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            70
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 71
        }, 
        "testing": {
          "stepDurations": [
            261
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 261
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:15:49 AM", 
      "totalDuration": 661
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1119, 
        "numberRunning": 1120, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/244508852", 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 22, 
          "testClass": "spoon.test.lambda.LambdaTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "isError": false, 
          "testClass": "spoon.test.lambda.LambdaTest", 
          "testMethod": "testGetDeclarationOnTypeParameterFromLambda"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/244943489", 
        "date": "Jun 20, 2017 3:46:14 PM", 
        "id": 244943489
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/244508852", 
        "date": "Jun 19, 2017 3:00:31 PM", 
        "id": 244508852
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/953d7b8cdbc187c580b1096fe009459aade9923a", 
        "sha": "953d7b8cdbc187c580b1096fe009459aade9923a", 
        "branchName": "master", 
        "date": "Jun 20, 2017 3:36:49 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/293d8e872a7f0fb1bdaf8d151ab27a2f48548acc", 
        "sha": "293d8e872a7f0fb1bdaf8d151ab27a2f48548acc", 
        "branchName": "master", 
        "date": "Jun 19, 2017 2:51:37 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-244508852-244943489", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 8
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_66", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex 9b57cb7..943b762 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -177,13 +177,18 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \n \t\tCtElement e = this;\n \t\tCtElement parent = getParent();\n+\t\tif (parent instanceof CtTypeReference) {\n+\t\t\tif (parent.isParentInitialized() == false) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tparent = parent.getParent();\n+\t\t}\n \t\tif (parent instanceof CtExecutableReference) {\n-\n-\t\t\tCtElement parent2 = ((CtExecutableReference) parent).getDeclaration();\n+\t\t\tCtElement parent2 = ((CtExecutableReference) parent).getExecutableDeclaration();\n \t\t\tif (parent2 instanceof CtMethod) {\n \t\t\t\te = parent2;\n \t\t\t} else {\n-\t\t\t\te = ((CtExecutableReference<?>) parent).getDeclaringType().getTypeDeclaration();\n+\t\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n \t\t\t}\n \t\t} else {\n \t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n", 
    "projectMetrics": {
      "numberSourceFiles": 490, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 551, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 292011736, 
        "hostName": "spirals-bears", 
        "totalMemory": 399507456, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:24:50 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/244508852/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            71
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 72
        }, 
        "testing": {
          "stepDurations": [
            286
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 286
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:13:09 AM", 
      "totalDuration": 695
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1123, 
        "numberRunning": 1125, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/245681314", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest", 
          "testMethod": "testGetAllMethodsWontReturnOverriddenMethod", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<62> but was:<61>", 
          "isError": false, 
          "testMethod": "testGetSuperclass", 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 3, 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/245682273", 
        "date": "Jun 22, 2017 10:17:07 AM", 
        "id": 245682273
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/245681314", 
        "date": "Jun 22, 2017 10:13:16 AM", 
        "id": 245681314
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/521f2307d4a639dcf7541f65a961609ce39d743f", 
        "sha": "521f2307d4a639dcf7541f65a961609ce39d743f", 
        "branchName": "master", 
        "date": "Jun 22, 2017 10:08:24 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e6e2087f18f52f24c783652670b26fbac19150e0", 
        "sha": "e6e2087f18f52f24c783652670b26fbac19150e0", 
        "branchName": "master", 
        "date": "Jun 22, 2017 10:04:43 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-245681314-245682273", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 8, 
        "numberDeleted": 16
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_67", 
    "diff": "diff --git a/src/main/java/spoon/reflect/factory/ExecutableFactory.java b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\nindex 662c89f..0499eca 100644\n--- a/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n+++ b/src/main/java/spoon/reflect/factory/ExecutableFactory.java\n@@ -118,7 +118,7 @@ public class ExecutableFactory extends SubFactory {\n \t\t\treturn createReference(((CtMethod<T>) e).getDeclaringType().getReference(), isStatic, ((CtMethod<T>) e).getType().clone(), executableName, refs);\n \t\t} else if (e instanceof CtLambda) {\n \t\t\tCtMethod<T> lambdaMethod = ((CtLambda) e).getOverriddenMethod();\n-\t\t\treturn createReference(e.getParent(CtType.class).getReference(), lambdaMethod == null ? null : lambdaMethod.getType(), executableName, refs);\n+\t\t\treturn createReference(e.getParent(CtType.class).getReference(), lambdaMethod == null ? null : lambdaMethod.getType().clone(), executableName, refs);\n \t\t} else if (e instanceof CtAnonymousExecutable) {\n \t\t\treturn createReference(((CtAnonymousExecutable) e).getDeclaringType().getReference(), e.getType().clone(), executableName);\n \t\t}\ndiff --git a/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java b/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\nindex 01af41f..b93915f 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\n@@ -52,6 +52,7 @@ import spoon.support.UnsettableProperty;\n import spoon.support.compiler.SnippetCompilationHelper;\n import spoon.support.util.QualifiedNameBasedSortedSet;\n import spoon.support.util.SignatureBasedSortedSet;\n+import spoon.support.visitor.ClassTypingContext;\n \n import java.lang.annotation.Annotation;\n import java.util.ArrayList;\n@@ -895,14 +896,18 @@ public abstract class CtTypeImpl<T> extends CtNamedElementImpl implements CtType\n \n \t@Override\n \tpublic Set<CtMethod<?>> getAllMethods() {\n-\t\tfinal Set<String> distinctSignatures = new HashSet<>();\n-\t\tfinal Set<CtMethod<?>> l = new SignatureBasedSortedSet<>();\n+\t\tfinal Set<CtMethod<?>> l = new HashSet<>();\n+\t\tfinal ClassTypingContext ctc = new ClassTypingContext(this);\n \t\tmap(new AllTypeMembersFunction(CtMethod.class)).forEach(new CtConsumer<CtMethod<?>>() {\n \t\t\t@Override\n-\t\t\tpublic void accept(CtMethod<?> method) {\n-\t\t\t\tif (distinctSignatures.add(method.getSignature())) {\n-\t\t\t\t\tl.add(method);\n+\t\t\tpublic void accept(CtMethod<?> currentMethod) {\n+\t\t\t\tfor (CtMethod<?> alreadyVisitedMethod : l) {\n+\t\t\t\t\tif (ctc.isSameSignature(currentMethod, alreadyVisitedMethod)) {\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n \t\t\t\t}\n+\n+\t\t\t\tl.add(currentMethod);\n \t\t\t}\n \t\t});\n \t\treturn Collections.unmodifiableSet(l);\ndiff --git a/src/main/java/spoon/support/visitor/ClassTypingContext.java b/src/main/java/spoon/support/visitor/ClassTypingContext.java\nindex 4cec550..f148151 100644\n--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java\n@@ -423,6 +423,9 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t */\n \t@Override\n \tprotected CtTypeReference<?> adaptTypeParameter(CtTypeParameter typeParam) {\n+\t\tif (typeParam == null) {\n+\t\t\tthrow new SpoonException(\"You cannot adapt a null type parameter.\");\n+\t\t}\n \t\tCtFormalTypeDeclarer declarer = typeParam.getTypeParameterDeclarer();\n \t\tif ((declarer instanceof CtType<?>) == false) {\n \t\t\treturn null;\n@@ -643,6 +646,10 @@ public class ClassTypingContext extends AbstractTypingContext {\n \t\tif (typeRef instanceof CtTypeParameterReference) {\n \t\t\tCtTypeParameterReference typeParamRef = (CtTypeParameterReference) typeRef;\n \t\t\tCtTypeParameter typeParam = typeParamRef.getDeclaration();\n+\t\t\tif (typeParam == null) {\n+\t\t\t\tthrow new SpoonException(\"Declaration of the CtTypeParameter should not be null.\");\n+\t\t\t}\n+\n \t\t\tif (typeParam.getTypeParameterDeclarer() instanceof CtExecutable) {\n \t\t\t\t//the parameter is declared in scope of Method or Constructor\n \t\t\t\treturn typeRef.clone();\n", 
    "projectMetrics": {
      "numberSourceFiles": 492, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 554, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239423752, 
        "hostName": "spirals-bears", 
        "totalMemory": 477102080, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:12:25 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/245681314/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            76
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 77
        }, 
        "testing": {
          "stepDurations": [
            273
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 273
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:00:35 AM", 
      "totalDuration": 701
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1125, 
        "numberRunning": 1129, 
        "numberFailing": 4, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/245682273", 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 34, 
          "numberRunning": 37, 
          "testClass": "spoon.test.imports.ImportTest", 
          "numberFailing": 3, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testStaticMethodWithDifferentClassSameNameCollision", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "The file should not contain a static import ", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testNoFQNWhenUsedInInnerClassAndShadowedByLocalVariable", 
          "testClass": "spoon.test.variable.AccessFullyQualifiedFieldTest", 
          "detail": "The inner class should contain call using import", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testStaticMethodWithDifferentClassSameNameJava7NoCollision", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "The call to the last EnumTestSuite should be in FQN", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testStaticMethodWithDifferentClassSameNameJava3NoCollision", 
          "testClass": "spoon.test.imports.ImportTest", 
          "detail": "The file should not contain a static import ", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/245809519", 
        "date": "Jun 22, 2017 4:32:20 PM", 
        "id": 245809519
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/245682273", 
        "date": "Jun 22, 2017 10:17:07 AM", 
        "id": 245682273
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/7badbe6c1b3db13cb8d92866a359ddad079f4ac6", 
        "sha": "7badbe6c1b3db13cb8d92866a359ddad079f4ac6", 
        "branchName": "master", 
        "date": "Jun 22, 2017 4:22:24 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/521f2307d4a639dcf7541f65a961609ce39d743f", 
        "sha": "521f2307d4a639dcf7541f65a961609ce39d743f", 
        "branchName": "master", 
        "date": "Jun 22, 2017 10:08:24 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-245682273-245809519", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 492, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 560, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 21, 
        "numberDeleted": 39
      }
    }, 
    "bugId": "Bears_68", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex fd7b96d..ff5d432 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -1099,14 +1099,16 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t} else {\n \t\t\t// It's a method invocation\n \t\t\tprinter.snapshotLength();\n-\t\t\ttry (Writable _context = context.modify()) {\n-\t\t\t\tif (invocation.getTarget() instanceof CtTypeAccess) {\n-\t\t\t\t\t_context.ignoreGenerics(true);\n+\t\t\tif (!this.importsContext.isImported(invocation.getExecutable())) {\n+\t\t\t\ttry (Writable _context = context.modify()) {\n+\t\t\t\t\tif (invocation.getTarget() instanceof CtTypeAccess) {\n+\t\t\t\t\t\t_context.ignoreGenerics(true);\n+\t\t\t\t\t}\n+\t\t\t\t\tscan(invocation.getTarget());\n+\t\t\t\t}\n+\t\t\t\tif (printer.hasNewContent()) {\n+\t\t\t\t\tprinter.write(\".\");\n \t\t\t\t}\n-\t\t\t\tscan(invocation.getTarget());\n-\t\t\t}\n-\t\t\tif (printer.hasNewContent()) {\n-\t\t\t\tprinter.write(\".\");\n \t\t\t}\n \n \t\t\telementPrinterHelper.writeActualTypeArguments(invocation);\ndiff --git a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\nindex 49d65ff..d6ed362 100644\n--- a/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/ImportScannerImpl.java\n@@ -367,11 +367,19 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t */\n \tprivate boolean declaringTypeIsLocalOrImported(CtTypeReference declaringType) {\n \t\tif (declaringType != null) {\n-\t\t\tif (!isTypeInCollision(declaringType, false) && addClassImport(declaringType)) {\n-\t\t\t\treturn true;\n+\n+\t\t\tboolean isInCollision = isTypeInCollision(declaringType, false);\n+\t\t\tif (!isInCollision) {\n+\t\t\t\tboolean importSuccess = addClassImport(declaringType);\n+\t\t\t\tif (importSuccess) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n \t\t\t}\n \n-\t\t\tif (isImportedInClassImports(declaringType) || classNamePresentInJavaLang(declaringType)) {\n+\t\t\tboolean importedInClassImports = isImportedInClassImports(declaringType);\n+\t\t\tboolean inJavaLang = classNamePresentInJavaLang(declaringType);\n+\n+\t\t\tif (importedInClassImports || inJavaLang) {\n \t\t\t\treturn true;\n \t\t\t}\n \n@@ -386,7 +394,29 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\treturn false;\n \t}\n \n+\t/**\n+\t * Test if the given executable reference is targeted a method name which is in collision with a method name of the current class\n+\t * @param ref\n+\t * @return\n+\t */\n+\tprivate boolean isInCollisionWithLocalMethod(CtExecutableReference ref) {\n+\t\tCtType<?> typeDecl = ref.getParent(CtType.class);\n+\n+\t\tString methodName = ref.getSimpleName();\n+\n+\t\tfor (CtMethod<?> method : typeDecl.getAllMethods()) {\n+\t\t\tif (method.getSimpleName().equals(methodName)) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \tprotected boolean addMethodImport(CtExecutableReference ref) {\n+\t\t// static import is not supported below java 1.5\n+\t\tif (ref.getFactory().getEnvironment().getComplianceLevel() < 5) {\n+\t\t\treturn false;\n+\t\t}\n \t\tif (this.methodImports.containsKey(ref.getSimpleName())) {\n \t\t\treturn isImportedInMethodImports(ref);\n \t\t}\n@@ -396,6 +426,10 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t\t\treturn false;\n \t\t}\n \n+\t\tif (this.isInCollisionWithLocalMethod(ref)) {\n+\t\t\treturn false;\n+\t\t}\n+\n \t\tmethodImports.put(ref.getSimpleName(), ref);\n \n \t\t// if we are in the same package than target type, we also import class to avoid FQN in FQN mode.\n@@ -420,6 +454,10 @@ public class ImportScannerImpl extends CtScanner implements ImportScanner {\n \t}\n \n \tprotected boolean addFieldImport(CtFieldReference ref) {\n+\t\t// static import is not supported below java 1.5\n+\t\tif (ref.getFactory().getEnvironment().getComplianceLevel() < 5) {\n+\t\t\treturn false;\n+\t\t}\n \t\tif (this.fieldImports.containsKey(ref.getSimpleName())) {\n \t\t\treturn isImportedInFieldImports(ref);\n \t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 297912200, 
        "hostName": "spirals-bears", 
        "totalMemory": 403177472, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:12:20 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/245682273/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            75
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 77
        }, 
        "testing": {
          "stepDurations": [
            271
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 271
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:00:35 AM", 
      "totalDuration": 698
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1128, 
        "numberRunning": 1129, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/246175274", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<[]> but was:<[@spoon.reflect.annotations.PropertyGetter(role = spoon.reflect.path.CtRole.EXPRESSION)\n<C extends spoon.reflect.declaration.CtCodeSnippet> C setValue(java.lang.String value);]>", 
          "isError": false, 
          "testMethod": "testGetterSetterFroRole", 
          "testClass": "spoon.test.api.MetamodelTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "spoon.test.api.MetamodelTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/246195936", 
        "date": "Jun 23, 2017 3:19:11 PM", 
        "id": 246195936
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/246175274", 
        "date": "Jun 23, 2017 2:18:32 PM", 
        "id": 246175274
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/99a84a7499413a45c6f1cbf6df7b37a12b1acb6b", 
        "sha": "99a84a7499413a45c6f1cbf6df7b37a12b1acb6b", 
        "branchName": "master", 
        "date": "Jun 23, 2017 3:10:34 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d5fd5f3691accbbc23d794064bc4f7833c04231a", 
        "sha": "d5fd5f3691accbbc23d794064bc4f7833c04231a", 
        "branchName": "master", 
        "date": "Jun 23, 2017 2:10:02 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-246175274-246195936", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 492, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 560, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 10, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 18, 
        "numberDeleted": 18
      }
    }, 
    "bugId": "Bears_69", 
    "diff": "diff --git a/src/main/java/spoon/reflect/annotations/MetamodelPropertyField.java b/src/main/java/spoon/reflect/annotations/MetamodelPropertyField.java\nindex 3f9d999..b563912 100644\n--- a/src/main/java/spoon/reflect/annotations/MetamodelPropertyField.java\n+++ b/src/main/java/spoon/reflect/annotations/MetamodelPropertyField.java\n@@ -33,5 +33,5 @@ import java.lang.annotation.Target;\n @Retention(RetentionPolicy.RUNTIME)\n @Target({ ElementType.FIELD })\n public @interface MetamodelPropertyField {\n-\tCtRole role();\n+\tCtRole[] role();\n }\ndiff --git a/src/main/java/spoon/reflect/code/CtCase.java b/src/main/java/spoon/reflect/code/CtCase.java\nindex 5a92571..c0de369 100644\n--- a/src/main/java/spoon/reflect/code/CtCase.java\n+++ b/src/main/java/spoon/reflect/code/CtCase.java\n@@ -19,8 +19,7 @@ package spoon.reflect.code;\n import spoon.reflect.annotations.PropertyGetter;\n import spoon.reflect.annotations.PropertySetter;\n \n-import static spoon.reflect.path.CtRole.CASE;\n-\n+import static spoon.reflect.path.CtRole.EXPRESSION;\n \n /**\n  * This code element defines a case within a switch-case.\n@@ -40,13 +39,13 @@ public interface CtCase<S> extends CtStatement, CtStatementList {\n \t/**\n \t * Gets the case expression.\n \t */\n-\t@PropertyGetter(role = CASE)\n+\t@PropertyGetter(role = EXPRESSION)\n \tCtExpression<S> getCaseExpression();\n \n \t/**\n \t * Sets the case expression.\n \t */\n-\t@PropertySetter(role = CASE)\n+\t@PropertySetter(role = EXPRESSION)\n \t<T extends CtCase<S>> T setCaseExpression(CtExpression<S> caseExpression);\n \n \t@Override\ndiff --git a/src/main/java/spoon/reflect/code/CtCatch.java b/src/main/java/spoon/reflect/code/CtCatch.java\nindex c7dd808..6436d28 100644\n--- a/src/main/java/spoon/reflect/code/CtCatch.java\n+++ b/src/main/java/spoon/reflect/code/CtCatch.java\n@@ -46,7 +46,7 @@ public interface CtCatch extends CtCodeElement, CtBodyHolder {\n \t * Gets the catch's body.\n \t */\n \t@Override\n-\t@PropertySetter(role = BODY)\n+\t@PropertyGetter(role = BODY)\n \tCtBlock<?> getBody();\n \n \t@Override\ndiff --git a/src/main/java/spoon/reflect/code/CtConstructorCall.java b/src/main/java/spoon/reflect/code/CtConstructorCall.java\nindex 4771ef3..f375817 100644\n--- a/src/main/java/spoon/reflect/code/CtConstructorCall.java\n+++ b/src/main/java/spoon/reflect/code/CtConstructorCall.java\n@@ -75,6 +75,6 @@ public interface CtConstructorCall<T> extends CtTargetedExpression<T, CtExpressi\n \n \t@Override\n \t@DerivedProperty\n-\t@PropertySetter(role = TYPE)\n+\t@PropertyGetter(role = TYPE)\n \tCtTypeReference<T> getType();\n }\ndiff --git a/src/main/java/spoon/reflect/code/CtNewClass.java b/src/main/java/spoon/reflect/code/CtNewClass.java\nindex fb53fd0..2b5141c 100644\n--- a/src/main/java/spoon/reflect/code/CtNewClass.java\n+++ b/src/main/java/spoon/reflect/code/CtNewClass.java\n@@ -16,17 +16,17 @@\n  */\n package spoon.reflect.code;\n \n+import spoon.reflect.annotations.PropertyGetter;\n+import spoon.reflect.annotations.PropertySetter;\n import spoon.reflect.declaration.CtClass;\n import spoon.reflect.reference.CtActualTypeContainer;\n import spoon.reflect.reference.CtExecutableReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.support.DerivedProperty;\n-import spoon.reflect.annotations.PropertyGetter;\n-import spoon.reflect.annotations.PropertySetter;\n \n import java.util.List;\n \n-import static spoon.reflect.path.CtRole.EXPRESSION;\n+import static spoon.reflect.path.CtRole.NESTED_TYPE;\n import static spoon.reflect.path.CtRole.TYPE_PARAMETER;\n \n /**\n@@ -77,13 +77,13 @@ public interface CtNewClass<T> extends CtConstructorCall<T> {\n \t/**\n \t * Gets the created class.\n \t */\n-\t@PropertyGetter(role = EXPRESSION)\n+\t@PropertyGetter(role = NESTED_TYPE)\n \tCtClass<?> getAnonymousClass();\n \n \t/**\n \t * Sets the created class.\n \t */\n-\t@PropertySetter(role = EXPRESSION)\n+\t@PropertySetter(role = NESTED_TYPE)\n \t<N extends CtNewClass> N setAnonymousClass(CtClass<?> anonymousClass);\n \n \t@Override\ndiff --git a/src/main/java/spoon/reflect/declaration/CtCodeSnippet.java b/src/main/java/spoon/reflect/declaration/CtCodeSnippet.java\nindex bada4f2..5745164 100644\n--- a/src/main/java/spoon/reflect/declaration/CtCodeSnippet.java\n+++ b/src/main/java/spoon/reflect/declaration/CtCodeSnippet.java\n@@ -36,13 +36,13 @@ public interface CtCodeSnippet {\n \t/**\n \t * Sets the textual value of the code.\n \t */\n-\t@PropertyGetter(role = EXPRESSION)\n+\t@PropertySetter(role = EXPRESSION)\n \t<C extends CtCodeSnippet> C setValue(String value);\n \n \t/**\n \t * Gets the textual value of the code.\n \t */\n-\t@PropertySetter(role = EXPRESSION)\n+\t@PropertyGetter(role = EXPRESSION)\n \tString getValue();\n \n }\ndiff --git a/src/main/java/spoon/reflect/declaration/CtModifiable.java b/src/main/java/spoon/reflect/declaration/CtModifiable.java\nindex 9053509..f7bb505 100644\n--- a/src/main/java/spoon/reflect/declaration/CtModifiable.java\n+++ b/src/main/java/spoon/reflect/declaration/CtModifiable.java\n@@ -18,6 +18,7 @@ package spoon.reflect.declaration;\n \n import spoon.reflect.annotations.PropertyGetter;\n import spoon.reflect.annotations.PropertySetter;\n+import spoon.support.DerivedProperty;\n \n import java.util.Set;\n \n@@ -80,6 +81,6 @@ public interface CtModifiable extends CtElement {\n \t/**\n \t * Gets the visibility of this modifiable element.\n \t */\n-\t@PropertyGetter(role = MODIFIER)\n+\t@DerivedProperty\n \tModifierKind getVisibility();\n }\ndiff --git a/src/main/java/spoon/support/reflect/code/CtCaseImpl.java b/src/main/java/spoon/support/reflect/code/CtCaseImpl.java\nindex a903880..534d6c8 100644\n--- a/src/main/java/spoon/support/reflect/code/CtCaseImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtCaseImpl.java\n@@ -34,7 +34,7 @@ import static spoon.reflect.ModelElementContainerDefaultCapacities.CASE_STATEMEN\n public class CtCaseImpl<E> extends CtStatementImpl implements CtCase<E> {\n \tprivate static final long serialVersionUID = 1L;\n \n-\t@MetamodelPropertyField(role = CtRole.CASE)\n+\t@MetamodelPropertyField(role = CtRole.EXPRESSION)\n \tCtExpression<E> caseExpression;\n \n \t@MetamodelPropertyField(role = CtRole.STATEMENT)\ndiff --git a/src/main/java/spoon/support/reflect/code/CtNewClassImpl.java b/src/main/java/spoon/support/reflect/code/CtNewClassImpl.java\nindex c514639..d2fd191 100644\n--- a/src/main/java/spoon/support/reflect/code/CtNewClassImpl.java\n+++ b/src/main/java/spoon/support/reflect/code/CtNewClassImpl.java\n@@ -25,7 +25,7 @@ import spoon.reflect.annotations.MetamodelPropertyField;\n public class CtNewClassImpl<T> extends CtConstructorCallImpl<T> implements CtNewClass<T> {\n \tprivate static final long serialVersionUID = 1L;\n \n-\t@MetamodelPropertyField(role = CtRole.EXPRESSION)\n+\t@MetamodelPropertyField(role = CtRole.NESTED_TYPE)\n \tCtClass<?> anonymousClass;\n \n \t@Override\ndiff --git a/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java b/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\nindex b93915f..7001146 100644\n--- a/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\n+++ b/src/main/java/spoon/support/reflect/declaration/CtTypeImpl.java\n@@ -82,7 +82,7 @@ public abstract class CtTypeImpl<T> extends CtNamedElementImpl implements CtType\n \t@MetamodelPropertyField(role = CtRole.MODIFIER)\n \tSet<ModifierKind> modifiers = emptySet();\n \n-\t@MetamodelPropertyField(role = CtRole.FIELD)\n+\t@MetamodelPropertyField(role = {CtRole.FIELD, CtRole.EXECUTABLE, CtRole.NESTED_TYPE})\n \tList<CtTypeMember> typeMembers = emptyList();\n \n \tpublic CtTypeImpl() {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 373699120, 
        "hostName": "spirals-bears", 
        "totalMemory": 521142272, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:12:04 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/246175274/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            73
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 75
        }, 
        "testing": {
          "stepDurations": [
            274
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 274
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:00:25 AM", 
      "totalDuration": 693
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1129, 
        "numberRunning": 1130, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/246216583", 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "spoon.test.exceptions.ExceptionTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "spoon.test.exceptions.ExceptionTest", 
          "testMethod": "testUnionCatchExceptionInsideLambdaInNoClasspath", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/246226768", 
        "date": "Jun 23, 2017 4:40:23 PM", 
        "id": 246226768
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/246216583", 
        "date": "Jun 23, 2017 4:15:16 PM", 
        "id": 246216583
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/c02968f6abc8672824766979627e503b987d8027", 
        "sha": "c02968f6abc8672824766979627e503b987d8027", 
        "branchName": "master", 
        "date": "Jun 23, 2017 4:32:08 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/1a344bf95e075c966e781d16228cff7f9921973e", 
        "sha": "1a344bf95e075c966e781d16228cff7f9921973e", 
        "branchName": "master", 
        "date": "Jun 23, 2017 4:06:31 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-246216583-246226768", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 492, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 560, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 9, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_70", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\nindex eef2458..cb0d187 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTTreeBuilder.java\n@@ -153,6 +153,7 @@ import spoon.reflect.declaration.CtTypeParameter;\n import spoon.reflect.declaration.ModifierKind;\n import spoon.reflect.factory.Factory;\n import spoon.reflect.reference.CtArrayTypeReference;\n+import spoon.reflect.reference.CtReference;\n import spoon.reflect.reference.CtTypeReference;\n import spoon.reflect.reference.CtUnboundVariableReference;\n import spoon.support.comparator.CtLineElementComparator;\n@@ -1415,7 +1416,15 @@ public class JDTTreeBuilder extends ASTVisitor {\n \t\t\treturn true;\n \t\t}\n \t\tif (context.stack.peekFirst().node instanceof UnionTypeReference) {\n-\t\t\tcontext.enter(references.<Throwable>getTypeReference(singleTypeReference.resolvedType), singleTypeReference);\n+\t\t\tif (singleTypeReference.resolvedType == null) {\n+\t\t\t\tCtTypeReference typeReference = factory.Type().createReference(singleTypeReference.toString());\n+\t\t\t\tCtReference ref = references.getDeclaringReferenceFromImports(singleTypeReference.getLastToken());\n+\t\t\t\treferences.setPackageOrDeclaringType(typeReference, ref);\n+\t\t\t\tcontext.enter(typeReference, singleTypeReference);\n+\t\t\t} else {\n+\t\t\t\tcontext.enter(references.<Throwable>getTypeReference(singleTypeReference.resolvedType), singleTypeReference);\n+\t\t\t}\n+\n \t\t\treturn true;\n \t\t} else if (context.stack.peekFirst().element instanceof CtCatch) {\n \t\t\tcontext.enter(helper.createCatchVariable(singleTypeReference), singleTypeReference);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 318617824, 
        "hostName": "spirals-bears", 
        "totalMemory": 405274624, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:00:10 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/246216583/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            70
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 71
        }, 
        "testing": {
          "stepDurations": [
            269
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 269
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:48:41 AM", 
      "totalDuration": 682
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1133, 
        "numberRunning": 1135, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/247837075", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<61> but was:<62>", 
          "isError": false, 
          "testMethod": "testGetSuperclass", 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testIsSameSignatureWithGenerics", 
          "isError": false, 
          "testClass": "spoon.test.generics.GenericsTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 39, 
          "numberRunning": 40, 
          "testClass": "spoon.test.generics.GenericsTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "spoon.reflect.declaration.CtTypeInformationTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/247951830", 
        "date": "Jun 28, 2017 4:18:22 PM", 
        "id": 247951830
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/247837075", 
        "date": "Jun 28, 2017 10:17:19 AM", 
        "id": 247837075
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/05df3b8c995cb3bbf1303d1a98dbe6224edee45c", 
        "sha": "05df3b8c995cb3bbf1303d1a98dbe6224edee45c", 
        "branchName": "master", 
        "date": "Jun 28, 2017 4:08:55 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/f984d8855a7017b11c55a578f0cd05e25743f9da", 
        "sha": "f984d8855a7017b11c55a578f0cd05e25743f9da", 
        "branchName": "master", 
        "date": "Jun 28, 2017 10:07:36 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-247837075-247951830", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 4, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 20, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_71", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex 3e81dbc..d7797f1 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -632,6 +632,7 @@ public class ReferenceBuilder {\n \t\t\t\tref = getTypeReference(binding.actualType());\n \t\t\t} else {\n \t\t\t\tref = this.jdtTreeBuilder.getFactory().Core().createTypeReference();\n+\t\t\t\tthis.exploringParameterizedBindings.put(binding, ref);\n \t\t\t\tif (binding.isAnonymousType()) {\n \t\t\t\t\tref.setSimpleName(\"\");\n \t\t\t\t} else {\n@@ -702,7 +703,13 @@ public class ReferenceBuilder {\n \t\t\t\t// if the type parameter has a super class other than java.lang.Object, we get it\n \t\t\t\t// superClass.superclass() is null if it's java.lang.Object\n \t\t\t\tif (superClass != null && !(superClass.superclass() == null)) {\n-\t\t\t\t\trefSuperClass = this.getTypeReference(superClass);\n+\n+\t\t\t\t\t// this case could happen with Enum<E extends Enum<E>> for example:\n+\t\t\t\t\t// in that case we only want to have E -> Enum -> E\n+\t\t\t\t\t// to conserve the same behavior as JavaReflectionTreeBuilder\n+\t\t\t\t\tif (!(superClass instanceof ParameterizedTypeBinding) || !this.exploringParameterizedBindings.containsKey(superClass)) {\n+\t\t\t\t\t\trefSuperClass = this.getTypeReference(superClass);\n+\t\t\t\t\t}\n \n \t\t\t\t// if the type parameter has a super interface, then we'll get it too, as a superclass\n \t\t\t\t// type parameter can only extends an interface or a class, so we don't make the distinction\ndiff --git a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\nindex 8dddb38..12ad83e 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtExecutableReferenceImpl.java\n@@ -150,7 +150,10 @@ public class CtExecutableReferenceImpl<T> extends CtReferenceImpl implements CtE\n \t@SuppressWarnings(\"unchecked\")\n \tpublic CtExecutable<T> getDeclaration() {\n \t\tfinal CtTypeReference<?> typeRef = getDeclaringType();\n-\t\treturn typeRef == null ? null : getCtExecutable(typeRef.getDeclaration());\n+\t\tif (typeRef == null || typeRef.getDeclaration() == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\treturn getCtExecutable(typeRef.getDeclaration());\n \t}\n \n \t@Override\ndiff --git a/src/main/java/spoon/support/visitor/AbstractTypingContext.java b/src/main/java/spoon/support/visitor/AbstractTypingContext.java\nindex 46d9982..1cbb2ea 100644\n--- a/src/main/java/spoon/support/visitor/AbstractTypingContext.java\n+++ b/src/main/java/spoon/support/visitor/AbstractTypingContext.java\n@@ -71,9 +71,6 @@ abstract class AbstractTypingContext implements GenericTypeAdapter {\n \t\t\treturn adaptTypeParameterReferenceBoundingType(typeParamRef, typeParamRef.getBoundingType());\n \t\t}\n \t\tCtTypeReference<?> typeRefAdapted = adaptTypeParameter(typeParamRef.getDeclaration());\n-\t\tif (typeRefAdapted instanceof CtTypeParameterReference) {\n-\t\t\treturn adaptTypeParameterReferenceBoundingType((CtTypeParameterReference) typeRefAdapted, typeParamRef.getBoundingType());\n-\t\t}\n \t\treturn typeRefAdapted;\n \t}\n \ndiff --git a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\nindex e380bbb..3f410c1 100644\n--- a/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n+++ b/src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java\n@@ -329,7 +329,12 @@ public class JavaReflectionTreeBuilder extends JavaReflectionVisitorImpl {\n \n \t@Override\n \tpublic void visitType(Type type) {\n-\t\tfinal CtTypeReference<?> ctTypeReference = factory.Core().createTypeReference();\n+\t\tCtTypeReference<?> ctTypeReference;\n+\t\tif (type instanceof TypeVariable) {\n+\t\t\tctTypeReference = factory.Core().createTypeParameterReference();\n+\t\t} else {\n+\t\t\tctTypeReference = factory.Core().createTypeReference();\n+\t\t}\n \t\tenter(new TypeReferenceRuntimeBuilderContext(ctTypeReference));\n \t\tctTypeReference.setSimpleName(getTypeName(type));\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 563, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 374404216, 
        "hostName": "spirals-bears", 
        "totalMemory": 499122176, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:46:54 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/247837075/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            70
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 71
        }, 
        "testing": {
          "stepDurations": [
            283
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 283
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:35:02 AM", 
      "totalDuration": 704
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1140, 
        "numberRunning": 1141, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/248403517", 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 7, 
          "testClass": "spoon.test.prettyprinter.PrinterTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "spoon.test.prettyprinter.PrinterTest", 
          "testMethod": "testPrintingOfOrphanFieldReference"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/248678183", 
        "date": "Jun 30, 2017 9:44:42 AM", 
        "id": 248678183
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/248403517", 
        "date": "Jun 29, 2017 5:11:50 PM", 
        "id": 248403517
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/bc9286a0d1f630052967cd373654ce5ccc63b8b1", 
        "sha": "bc9286a0d1f630052967cd373654ce5ccc63b8b1", 
        "branchName": "master", 
        "date": "Jun 30, 2017 9:35:45 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/096c8000575ef969165ddcea2dbc842de9cb416c", 
        "sha": "096c8000575ef969165ddcea2dbc842de9cb416c", 
        "branchName": "master", 
        "date": "Jun 29, 2017 4:56:30 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-248403517-248678183", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 12, 
        "numberDeleted": 26
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_72", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 29a5a84..d2e069a 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -16,6 +16,7 @@\n  */\n package spoon.reflect.visitor;\n \n+import spoon.SpoonException;\n import spoon.compiler.Environment;\n import spoon.reflect.code.CtAnnotationFieldAccess;\n import spoon.reflect.code.CtArrayAccess;\n@@ -67,6 +68,7 @@ import spoon.reflect.code.CtTry;\n import spoon.reflect.code.CtTryWithResource;\n import spoon.reflect.code.CtTypeAccess;\n import spoon.reflect.code.CtUnaryOperator;\n+import spoon.reflect.code.CtVariableAccess;\n import spoon.reflect.code.CtVariableRead;\n import spoon.reflect.code.CtVariableWrite;\n import spoon.reflect.code.CtWhile;\n@@ -292,12 +294,46 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\t\tprinter.adjustStartPosition(e);\n \t\t\t\t}\n \t\t\t}\n-\t\t\te.accept(this);\n+\t\t\ttry {\n+\t\t\t\te.accept(this);\n+\t\t\t} catch (SpoonException ex) {\n+\t\t\t\tthrow ex;\n+\t\t\t} catch (Exception ex) {\n+\t\t\t\tString elementInfo = e.getClass().getName();\n+\t\t\t\telementInfo += \" on path \" + getPath(e) + \"\\n\";\n+\t\t\t\tif (e.getPosition() != null) {\n+\t\t\t\t\telementInfo += \"at position \" + e.getPosition().toString() + \" \";\n+\t\t\t\t}\n+\t\t\t\tthrow new SpoonException(\"Printing of \" + elementInfo + \"failed\", ex);\n+\t\t\t}\n \t\t\tcontext.elementStack.pop();\n \t\t}\n \t\treturn this;\n \t}\n \n+\tprivate static String getPath(CtElement ele) {\n+\t\tStringBuilder sb = new StringBuilder();\n+\t\taddParentPath(sb, ele);\n+\t\tif (ele instanceof CtVariableAccess) {\n+\t\t\tsb.append(':').append(((CtVariableAccess) ele).getVariable().getSimpleName());\n+\t\t}\n+\t\treturn sb.toString();\n+\t}\n+\tprivate static void addParentPath(StringBuilder sb, CtElement ele) {\n+\t\tif (ele == null || (ele instanceof CtPackage && ((CtPackage) ele).isUnnamedPackage())) {\n+\t\t\treturn;\n+\t\t}\n+\t\tif (ele.isParentInitialized()) {\n+\t\t\taddParentPath(sb, ele.getParent());\n+\t\t}\n+\t\tsb.append(\"\\n\\t\").append(ele.getClass().getSimpleName());\n+\t\tif (ele instanceof CtNamedElement) {\n+\t\t\tsb.append(\":\").append(((CtNamedElement) ele).getSimpleName());\n+\t\t} else if (ele instanceof CtReference) {\n+\t\t\tsb.append(\":\").append(((CtReference) ele).getSimpleName());\n+\t\t}\n+\t}\n+\n \t/**\n \t * The generic scan method for a reference.\n \t */\n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 567, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 254867376, 
        "hostName": "spirals-bears", 
        "totalMemory": 484442112, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:44:33 AM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/248403517/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            72
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 72
        }, 
        "testing": {
          "stepDurations": [
            288
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 288
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:32:43 AM", 
      "totalDuration": 703
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1140, 
        "numberRunning": 1141, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/249529059", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "It must fail, because body of forEach should be called and thrown CCE", 
          "isError": false, 
          "testMethod": "testClassCastExceptionOnForEach", 
          "testClass": "spoon.test.filters.FilterTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 39, 
          "numberRunning": 40, 
          "testClass": "spoon.test.filters.FilterTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/249603843", 
        "date": "Jul 3, 2017 2:11:12 PM", 
        "id": 249603843
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/249529059", 
        "date": "Jul 3, 2017 9:57:32 AM", 
        "id": 249529059
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3041002595d0497cca31f9c5fd65a706abec9117", 
        "sha": "3041002595d0497cca31f9c5fd65a706abec9117", 
        "branchName": "master", 
        "date": "Jul 3, 2017 2:01:45 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/41d7cd3360af9799d9c5cef98fd6bb3db3965bf1", 
        "sha": "41d7cd3360af9799d9c5cef98fd6bb3db3965bf1", 
        "branchName": "master", 
        "date": "Jul 3, 2017 9:48:26 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-249529059-249603843", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 567, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 9, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_73", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\nindex 651e21d..868e391 100644\n--- a/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n+++ b/src/main/java/spoon/reflect/visitor/chain/CtQueryImpl.java\n@@ -339,9 +339,15 @@ public class CtQueryImpl implements CtQuery {\n \t\t\ttry {\n \t\t\t\tnextStep.accept(element);\n \t\t\t} catch (ClassCastException e) {\n-\t\t\t\tif (Launcher.LOGGER.isTraceEnabled()) {\n-\t\t\t\t\t//log expected CCE ... there might be some unexpected too!\n-\t\t\t\t\tLauncher.LOGGER.trace(e);\n+\t\t\t\tStackTraceElement[] stackEles = e.getStackTrace();\n+\t\t\t\tif (stackEles.length > 1 && stackEles[0].getClassName().equals(getClass().getName()) && stackEles[0].getMethodName().equals(\"accept\")) {\n+\t\t\t\t\tif (Launcher.LOGGER.isTraceEnabled()) {\n+\t\t\t\t\t\t//log expected CCE ... there might be some unexpected too!\n+\t\t\t\t\t\tLauncher.LOGGER.trace(e);\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\t//Do not ignore this exception it is not expected!\n+\t\t\t\t\tthrow new SpoonException(\"Execution of query callback failed\", e);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 371006760, 
        "hostName": "spirals-bears", 
        "totalMemory": 493879296, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:39:57 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/249529059/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            69
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 70
        }, 
        "testing": {
          "stepDurations": [
            282
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 282
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:28:02 PM", 
      "totalDuration": 708
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1142, 
        "numberRunning": 1143, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/254745624", 
      "failingClasses": [
        {
          "numberPassing": 26, 
          "numberRunning": 27, 
          "testClass": "spoon.test.reference.TypeReferenceTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testUnknownSuperClassWithSameNameInNoClasspath", 
          "testClass": "spoon.test.reference.TypeReferenceTest", 
          "detail": "Values should be different. Actual: it.feio.android.omninotes.models.Attachment", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/256471804", 
        "date": "Jul 23, 2017 12:57:11 AM", 
        "id": 256471804
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/254745624", 
        "date": "Jul 18, 2017 9:38:30 AM", 
        "id": 254745624
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/d46c02d67c8eb04a198040de13e8ba9d63dba1c9", 
        "sha": "d46c02d67c8eb04a198040de13e8ba9d63dba1c9", 
        "branchName": "master", 
        "date": "Jul 23, 2017 12:47:48 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e74f8dff1824eadf9ffb3ea86745215a52cca943", 
        "sha": "e74f8dff1824eadf9ffb3ea86745215a52cca943", 
        "branchName": "master", 
        "date": "Jul 18, 2017 9:29:04 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-254745624-256471804", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 568, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 4
      }
    }, 
    "bugId": "Bears_74", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\nindex d7797f1..c53cd18 100644\n--- a/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java\n@@ -540,6 +540,10 @@ public class ReferenceBuilder {\n \t\t\tCtPackageReference packageReference = index >= 0 ? packageFactory.getOrCreate(concatSubArray(namesParameterized, index)).getReference() : packageFactory.topLevel();\n \t\t\tinner.setPackage(packageReference);\n \t\t}\n+\t\tif (!res.toString().replace(\", ?\", \",?\").endsWith(CharOperation.toString(ref.getParameterizedTypeName()))) {\n+\t\t\t// verify that we did not match a class that have the same name in a different package\n+\t\t\treturn this.jdtTreeBuilder.getFactory().Type().createReference(CharOperation.toString(ref.getParameterizedTypeName()));\n+\t\t}\n \t\treturn res;\n \t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 398275256, 
        "hostName": "spirals-bears", 
        "totalMemory": 472383488, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:38:10 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/254745624/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            72
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 73
        }, 
        "testing": {
          "stepDurations": [
            283
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 283
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:26:12 PM", 
      "totalDuration": 711
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1143, 
        "numberRunning": 1146, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/259378726", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[]> but was:<[);]>", 
          "isError": false, 
          "testMethod": "testPositionAbstractMethod", 
          "testClass": "spoon.test.position.PositionTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[public]> but was:<[description=\"fake\")\npublic int]>", 
          "isError": false, 
          "testMethod": "testPositionInterface", 
          "testClass": "spoon.test.position.PositionTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[public abstrac]t> but was:<[RetentionPolicy.RUNTIME)  \npublic abstract @in]t>", 
          "isError": false, 
          "testMethod": "testPositionAnnotation", 
          "testClass": "spoon.test.position.PositionTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 7, 
          "numberRunning": 10, 
          "testClass": "spoon.test.position.PositionTest", 
          "numberFailing": 3, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/259664281", 
        "date": "Aug 1, 2017 9:41:36 AM", 
        "id": 259664281
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/259378726", 
        "date": "Jul 31, 2017 4:09:17 PM", 
        "id": 259378726
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/33acd0631ab0847c3beface62c10970a1664d809", 
        "sha": "33acd0631ab0847c3beface62c10970a1664d809", 
        "branchName": "master", 
        "date": "Aug 1, 2017 9:31:58 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/87faf50c4a3a7f81d6de9c88949209b6e0c39e72", 
        "sha": "87faf50c4a3a7f81d6de9c88949209b6e0c39e72", 
        "branchName": "master", 
        "date": "Jul 31, 2017 3:59:29 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-259378726-259664281", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 33, 
        "numberDeleted": 85
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_75", 
    "diff": "diff --git a/src/main/java/spoon/support/compiler/jdt/PositionBuilder.java b/src/main/java/spoon/support/compiler/jdt/PositionBuilder.java\nindex 573a8c2..94735e8 100644\n--- a/src/main/java/spoon/support/compiler/jdt/PositionBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/PositionBuilder.java\n@@ -16,16 +16,20 @@\n  */\n package spoon.support.compiler.jdt;\n \n+import org.eclipse.jdt.internal.compiler.CompilationResult;\n import org.eclipse.jdt.internal.compiler.ast.ASTNode;\n import org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.Annotation;\n+import org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.Expression;\n import org.eclipse.jdt.internal.compiler.ast.Javadoc;\n import org.eclipse.jdt.internal.compiler.ast.MethodDeclaration;\n import org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;\n \n import org.eclipse.jdt.internal.compiler.ast.TypeParameter;\n+\n+import spoon.SpoonException;\n import spoon.reflect.code.CtStatementList;\n import spoon.reflect.cu.CompilationUnit;\n import spoon.reflect.cu.SourcePosition;\n@@ -54,13 +58,26 @@ public class PositionBuilder {\n \tSourcePosition buildPositionCtElement(CtElement e, ASTNode node) {\n \t\tCoreFactory cf = this.jdtTreeBuilder.getFactory().Core();\n \t\tCompilationUnit cu = this.jdtTreeBuilder.getFactory().CompilationUnit().create(new String(this.jdtTreeBuilder.getContextBuilder().compilationunitdeclaration.getFileName()));\n-\t\tint[] lineSeparatorPositions = this.jdtTreeBuilder.getContextBuilder().compilationunitdeclaration.compilationResult.lineSeparatorPositions;\n+\t\tCompilationResult cr = this.jdtTreeBuilder.getContextBuilder().compilationunitdeclaration.compilationResult;\n+\t\tint[] lineSeparatorPositions = cr.lineSeparatorPositions;\n+\t\tchar[] contents = cr.compilationUnit.getContents();\n+\n \n \t\tint sourceStart = node.sourceStart;\n \t\tint sourceEnd = node.sourceEnd;\n-\t\tif ((node instanceof Expression)) {\n-\t\t\tif (((Expression) node).statementEnd > 0) {\n-\t\t\t\tsourceEnd = ((Expression) node).statementEnd;\n+\t\tif ((node instanceof Annotation)) {\n+\t\t\tAnnotation ann = (Annotation) node;\n+\t\t\tint declEnd = ann.declarationSourceEnd;\n+\n+\t\t\tif (declEnd > 0) {\n+\t\t\t\tsourceEnd = declEnd;\n+\t\t\t}\n+\t\t} else if ((node instanceof Expression)) {\n+\t\t\tExpression expression = (Expression) node;\n+\t\t\tint statementEnd = expression.statementEnd;\n+\n+\t\t\tif (statementEnd > 0) {\n+\t\t\t\tsourceEnd = statementEnd;\n \t\t\t}\n \t\t}\n \n@@ -110,14 +127,18 @@ public class PositionBuilder {\n \t\t\tAnnotation[] annotations = typeDeclaration.annotations;\n \t\t\tif (annotations != null && annotations.length > 0) {\n \t\t\t\tif (annotations[0].sourceStart() == declarationSourceStart) {\n-\t\t\t\t\tmodifiersSourceStart = annotations[annotations.length - 1].sourceEnd() + 2;\n+\t\t\t\t\tmodifiersSourceStart = findNextNonWhitespace(contents, annotations[annotations.length - 1].declarationSourceEnd + 1);\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (modifiersSourceStart == 0) {\n \t\t\t\tmodifiersSourceStart = declarationSourceStart;\n \t\t\t}\n-\t\t\t// the position the name minus the size of \"class\" minus at least 2 spaces\n-\t\t\tint modifiersSourceEnd = sourceStart - 8;\n+\t\t\t//look for start of first keyword before the type keyword e.g. \"class\". `sourceStart` points at first char of type name\n+\t\t\tint modifiersSourceEnd = findPrevNonWhitespace(contents, findPrevWhitespace(contents, findPrevNonWhitespace(contents, sourceStart - 1)));\n+\t\t\tif (modifiersSourceEnd < modifiersSourceStart) {\n+\t\t\t\t//there is no modifier\n+\t\t\t\tmodifiersSourceEnd = modifiersSourceStart - 1;\n+\t\t\t}\n \n \t\t\treturn cf.createBodyHolderSourcePosition(cu, sourceStart, sourceEnd,\n \t\t\t\t\tmodifiersSourceStart, modifiersSourceEnd,\n@@ -135,6 +156,13 @@ public class PositionBuilder {\n \t\t\tif (modifiersSourceStart == 0) {\n \t\t\t\tmodifiersSourceStart = declarationSourceStart;\n \t\t\t}\n+\n+\t\t\tif (node instanceof AnnotationMethodDeclaration && bodyStart == bodyEnd) {\n+\t\t\t\t//The \";\" at the end of annotation method declaration is not part of body\n+\t\t\t\t//let it behave same like in abstract MethodDeclaration\n+\t\t\t\tbodyEnd--;\n+\t\t\t}\n+\n \t\t\tJavadoc javadoc = methodDeclaration.javadoc;\n \t\t\tif (javadoc != null && javadoc.sourceEnd() > declarationSourceStart) {\n \t\t\t\tmodifiersSourceStart = javadoc.sourceEnd() + 1;\n@@ -170,24 +198,82 @@ public class PositionBuilder {\n \t\t\t\tif (bodyStart == 0) {\n \t\t\t\t\treturn SourcePosition.NOPOSITION;\n \t\t\t\t} else {\n+\t\t\t\t\tif (bodyStart < bodyEnd) {\n+\t\t\t\t\t\t//include brackets if they are there\n+\t\t\t\t\t\tif (contents[bodyStart - 1] == '{') {\n+\t\t\t\t\t\t\tbodyStart--;\n+\t\t\t\t\t\t\tif (contents[bodyEnd + 1] == '}') {\n+\t\t\t\t\t\t\t\tbodyEnd++;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\tthrow new SpoonException(\"Missing body end in\\n\" + new String(contents, sourceStart, sourceEnd - sourceStart));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n \t\t\t\t\treturn cf.createBodyHolderSourcePosition(cu,\n \t\t\t\t\t\t\tsourceStart, sourceEnd,\n \t\t\t\t\t\t\tmodifiersSourceStart, modifiersSourceEnd,\n \t\t\t\t\t\t\tdeclarationSourceStart, declarationSourceEnd,\n-\t\t\t\t\t\t\tbodyStart - 1, bodyEnd + 1,\n+\t\t\t\t\t\t\tbodyStart, bodyEnd,\n \t\t\t\t\t\t\tlineSeparatorPositions);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\tif ((node instanceof Expression)) {\n-\t\t\tExpression expression = (Expression) node;\n-\t\t\tint statementEnd = expression.statementEnd;\n \n-\t\t\tif (statementEnd > 0) {\n-\t\t\t\tsourceEnd = statementEnd;\n+\t\treturn cf.createSourcePosition(cu, sourceStart, sourceEnd, lineSeparatorPositions);\n+\t}\n+\n+\t/**\n+\t * @return index of first non whitespace char, searching forward. Can return off if it is non whitespace.\n+\t */\n+\tprivate int findNextNonWhitespace(char[] content, int off) {\n+\t\twhile (off >= 0) {\n+\t\t\tchar c = content[off];\n+\t\t\tif (Character.isWhitespace(c) == false) {\n+\t\t\t\treturn off;\n \t\t\t}\n+\t\t\toff++;\n \t\t}\n+\t\treturn -1;\n+\t}\n \n-\t\treturn cf.createSourcePosition(cu, sourceStart, sourceEnd, lineSeparatorPositions);\n+\t/**\n+\t * @return index of first whitespace char, searching forward. Can return off if it is whitespace.\n+\t */\n+\tprivate int findNextWhitespace(char[] content, int off) {\n+\t\twhile (off >= 0) {\n+\t\t\tchar c = content[off];\n+\t\t\tif (Character.isWhitespace(c)) {\n+\t\t\t\treturn off;\n+\t\t\t}\n+\t\t\toff++;\n+\t\t}\n+\t\treturn -1;\n+\t}\n+\t/**\n+\t * @return index of first non whitespace char, searching backward. Can return off if it is non whitespace.\n+\t */\n+\tprivate int findPrevNonWhitespace(char[] content, int off) {\n+\t\twhile (off >= 0) {\n+\t\t\tchar c = content[off];\n+\t\t\tif (Character.isWhitespace(c) == false) {\n+\t\t\t\treturn off;\n+\t\t\t}\n+\t\t\toff--;\n+\t\t}\n+\t\treturn -1;\n+\t}\n+\n+\t/**\n+\t * @return index of first whitespace char, searching backward. Can return off if it is whitespace.\n+\t */\n+\tprivate int findPrevWhitespace(char[] content, int off) {\n+\t\twhile (off >= 0) {\n+\t\t\tchar c = content[off];\n+\t\t\tif (Character.isWhitespace(c)) {\n+\t\t\t\treturn off;\n+\t\t\t}\n+\t\t\toff--;\n+\t\t}\n+\t\treturn -1;\n \t}\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 571, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 389818024, 
        "hostName": "spirals-bears", 
        "totalMemory": 507510784, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:36:19 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/259378726/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            74
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 74
        }, 
        "testing": {
          "stepDurations": [
            305
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 305
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:23:54 PM", 
      "totalDuration": 738
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1146, 
        "numberRunning": 1147, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/259664281", 
      "failingClasses": [
        {
          "numberPassing": 18, 
          "numberRunning": 19, 
          "testClass": "spoon.test.template.TemplateTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testObjectIsNotParamTemplate", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<0> but was:<1>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/259695141", 
        "date": "Aug 1, 2017 11:39:46 AM", 
        "id": 259695141
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/259664281", 
        "date": "Aug 1, 2017 9:41:36 AM", 
        "id": 259664281
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0da20b507607e5317e1acb33f44dfee1a54590aa", 
        "sha": "0da20b507607e5317e1acb33f44dfee1a54590aa", 
        "branchName": "master", 
        "date": "Aug 1, 2017 11:30:53 AM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/33acd0631ab0847c3beface62c10970a1664d809", 
        "sha": "33acd0631ab0847c3beface62c10970a1664d809", 
        "branchName": "master", 
        "date": "Aug 1, 2017 9:31:58 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-259664281-259695141", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 572, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_76", 
    "diff": "diff --git a/src/main/java/spoon/support/template/Parameters.java b/src/main/java/spoon/support/template/Parameters.java\nindex ed93b9e..48ced1d 100644\n--- a/src/main/java/spoon/support/template/Parameters.java\n+++ b/src/main/java/spoon/support/template/Parameters.java\n@@ -268,8 +268,8 @@ public abstract class Parameters {\n \t\t\t//the reference to this is not template parameter\n \t\t\treturn false;\n \t\t}\n-\t\tif (getTemplateParameterType(ref.getFactory()).isSubtypeOf(ref.getType())) {\n-\t\t\t//the type of template field is or extends from class TemplateParameter.\n+\t\tif (TemplateParameter.class.getName().equals(ref.getType().getQualifiedName())) {\n+\t\t\t//the type of template field is TemplateParameter.\n \t\t\treturn true;\n \t\t}\n \t\treturn false;\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 283742472, 
        "hostName": "spirals-bears", 
        "totalMemory": 476053504, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:25:49 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/259664281/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            72
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 73
        }, 
        "testing": {
          "stepDurations": [
            294
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 294
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:13:33 PM", 
      "totalDuration": 729
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1148, 
        "numberRunning": 1149, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/260087947", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "(/root/workspace/INRIA/spoon/260087947/src/test/java/spoon/test/comment/testclasses/WildComments.java:10) expected:<[/* test single line comments with nested * and */ and **/]> but was:<[test single line comments with nested * and */ and]>", 
          "isError": false, 
          "testMethod": "testWildComments", 
          "testClass": "spoon.test.comment.CommentTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 14, 
          "numberRunning": 15, 
          "testClass": "spoon.test.comment.CommentTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/260197957", 
        "date": "Aug 2, 2017 3:35:34 PM", 
        "id": 260197957
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/260087947", 
        "date": "Aug 2, 2017 9:55:33 AM", 
        "id": 260087947
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/dadbcf54d44fe493b2c299999ec4cad83d467e92", 
        "sha": "dadbcf54d44fe493b2c299999ec4cad83d467e92", 
        "branchName": "master", 
        "date": "Aug 2, 2017 3:26:00 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/e576dcd47b6fdcf74568b1f08482310cf326c7c0", 
        "sha": "e576dcd47b6fdcf74568b1f08482310cf326c7c0", 
        "branchName": "master", 
        "date": "Aug 2, 2017 9:46:43 AM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-260087947-260197957", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 82, 
        "numberDeleted": 23
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_77", 
    "diff": "diff --git a/src/main/java/spoon/reflect/code/CtComment.java b/src/main/java/spoon/reflect/code/CtComment.java\nindex 7bf0ac7..aff4a8c 100644\n--- a/src/main/java/spoon/reflect/code/CtComment.java\n+++ b/src/main/java/spoon/reflect/code/CtComment.java\n@@ -51,6 +51,13 @@ public interface CtComment extends CtStatement {\n \t\tBLOCK\n \t}\n \n+\t/**\n+\t * This line separator is used in comments returned by {@link #getContent()}.\n+\t * It is OS independent.\n+\t * It has no influence to pretty printed comments, which uses by default OS dependent line separator\n+\t */\n+\tString LINE_SEPARATOR = \"\\n\";\n+\n \t/**\n \t * Get the content of the comment\n \t * @return the content of the comment\ndiff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex b810ccc..3b5c8df 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -168,11 +168,6 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t */\n \tpublic static final String BLOCK_COMMENT_START = \"/* \";\n \n-\t/**\n-\t * RegExp which matches all possible line separators\n-\t */\n-\tprivate static final String LINE_SEPARATORS_RE = \"\\\\n\\\\r|\\\\n|\\\\r\";\n-\n \t/**\n \t * The printing context.\n \t */\n@@ -904,7 +899,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\tprinter.write(docTag.getParam()).writeln().writeTabs();\n \t\t}\n \n-\t\tString[] tagLines = docTag.getContent().split(LINE_SEPARATORS_RE);\n+\t\tString[] tagLines = docTag.getContent().split(CtComment.LINE_SEPARATOR);\n \t\tfor (int i = 0; i < tagLines.length; i++) {\n \t\t\tString com = tagLines[i];\n \t\t\tif (i > 0 || docTag.getType().hasParam()) {\n@@ -942,7 +937,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\tprinter.write(content);\n \t\t\t\tbreak;\n \t\t\tdefault:\n-\t\t\t\tString[] lines = content.split(LINE_SEPARATORS_RE);\n+\t\t\t\tString[] lines = content.split(CtComment.LINE_SEPARATOR);\n \t\t\t\tfor (int i = 0; i < lines.length; i++) {\n \t\t\t\t\tString com = lines[i];\n \t\t\t\t\tif (comment.getCommentType() == CtComment.CommentType.BLOCK) {\ndiff --git a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\nindex f4b45c8..842eac9 100644\n--- a/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n+++ b/src/main/java/spoon/support/compiler/jdt/JDTCommentBuilder.java\n@@ -20,6 +20,8 @@ import org.apache.log4j.Logger;\n import org.eclipse.jdt.core.compiler.CharOperation;\n import org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;\n import org.eclipse.jdt.internal.compiler.env.ICompilationUnit;\n+\n+import spoon.SpoonException;\n import spoon.reflect.code.CtBinaryOperator;\n import spoon.reflect.code.CtBlock;\n import spoon.reflect.code.CtBodyHolder;\n@@ -51,15 +53,20 @@ import spoon.reflect.visitor.CtInheritanceScanner;\n import spoon.reflect.visitor.CtScanner;\n import spoon.reflect.visitor.DefaultJavaPrettyPrinter;\n \n+import java.io.BufferedReader;\n+import java.io.CharArrayReader;\n import java.io.File;\n+import java.io.IOException;\n+import java.io.Reader;\n+import java.io.StringReader;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.regex.Pattern;\n \n /**\n  * The comment builder that will insert all element of a CompilationUnitDeclaration into the Spoon AST\n  */\n-@SuppressWarnings(\"unchecked\")\n class JDTCommentBuilder {\n \n \tprivate static final Logger LOGGER = Logger.getLogger(JDTCommentBuilder.class);\n@@ -526,38 +533,60 @@ class JDTCommentBuilder {\n \t * @return the content of the comment\n \t */\n \tprivate String getCommentContent(int start, int end) {\n-\t\t//skip comment prefix\n-\t\tstart += 2;\n-\t\treturn cleanComment(new String(contents, start, end - start));\n+\t\treturn cleanComment(new CharArrayReader(contents, start, end - start));\n \t}\n \n \tpublic static String cleanComment(String comment) {\n-\t\tStringBuffer ret = new StringBuffer();\n-\t\tString[] lines = comment.split(\"\\n\");\n-\t\t// limit case\n-\t\tif (lines.length == 1) {\n-\t\t\treturn lines[0].replaceAll(\"^/\\\\*+ ?\", \"\").replaceAll(\"\\\\*+/$\", \"\").trim();\n-\t\t}\n+\t\treturn cleanComment(new StringReader(comment));\n+\t}\n \n-\t\tfor (String s : lines) {\n-\t\t\tString cleanUpLine = s.trim();\n-\t\t\tif (cleanUpLine.startsWith(\"/**\")) {\n-\t\t\t\tcleanUpLine = cleanUpLine.replaceAll(\"/\\\\*+ ?\", \"\");\n-\t\t\t} else if (cleanUpLine.endsWith(\"*/\")) {\n-\t\t\t\tcleanUpLine = cleanUpLine.replaceAll(\"\\\\*+/$\", \"\").replaceAll(\"^[ \\t]*\\\\*+ ?\", \"\");\n+\tprivate static final Pattern startCommentRE = Pattern.compile(\"^/\\\\*{1,2} ?\");\n+\tprivate static final Pattern middleCommentRE = Pattern.compile(\"^[ \\t]*\\\\*? ?\");\n+\tprivate static final Pattern endCommentRE = Pattern.compile(\"\\\\*/$\");\n+\n+\tprivate static String cleanComment(Reader comment) {\n+\t\tStringBuilder ret = new StringBuilder();\n+\t\ttry (BufferedReader br = new BufferedReader(comment)) {\n+\t\t\tString line = br.readLine();\n+\t\t\tif (line.length() < 2 || line.charAt(0) != '/') {\n+\t\t\t\tthrow new SpoonException(\"Unexpected beginning of comment\");\n+\t\t\t}\n+\t\t\tboolean isLastLine = false;\n+\t\t\tif (line.charAt(1) == '/') {\n+\t\t\t\t//it is single line comment, which starts with \"//\"\n+\t\t\t\tisLastLine = true;\n+\t\t\t\tline = line.substring(2);\n \t\t\t} else {\n-\t\t\t\tcleanUpLine = cleanUpLine.replaceAll(\"^[ \\t]*\\\\*+ ?\", \"\");\n+\t\t\t\t//it is potentially multiline comment, which starts with \"/*\" or \"/**\"\n+\t\t\t\t//check end first\n+\t\t\t\tif (line.endsWith(\"*/\")) {\n+\t\t\t\t\t//it is last line\n+\t\t\t\t\tline = endCommentRE.matcher(line).replaceFirst(\"\");\n+\t\t\t\t\tisLastLine = true;\n+\t\t\t\t}\n+\t\t\t\t//skip beginning\n+\t\t\t\tline = startCommentRE.matcher(line).replaceFirst(\"\");\n \t\t\t}\n-\t\t\tret.append(cleanUpLine);\n-\t\t\tret.append(\"\\n\");\n-\t\t}\n-\t\t// clean '\\r'\n-\t\tStringBuffer ret2 = new StringBuffer();\n-\t\tfor (int i = 0; i < ret.length(); i++) {\n-\t\t\tif (ret.charAt(i) != '\\r') {\n-\t\t\t\tret2.append(ret.charAt(i));\n+\t\t\t//append first line\n+\t\t\tret.append(line);\n+\t\t\twhile ((line = br.readLine()) != null) {\n+\t\t\t\tif (isLastLine) {\n+\t\t\t\t\tthrow new SpoonException(\"Unexpected next line after last line\");\n+\t\t\t\t}\n+\t\t\t\tif (line.endsWith(\"*/\")) {\n+\t\t\t\t\t//it is last line\n+\t\t\t\t\tline = endCommentRE.matcher(line).replaceFirst(\"\");\n+\t\t\t\t\tisLastLine = true;\n+\t\t\t\t}\n+\t\t\t\t//always clean middle comment, but after end comment is detected\n+\t\t\t\tline = middleCommentRE.matcher(line).replaceFirst(\"\");\n+\t\t\t\t//write next line - Note that Spoon model comment's lines are always separated by \"\\n\"\n+\t\t\t\tret.append(CtComment.LINE_SEPARATOR);\n+\t\t\t\tret.append(line);\n \t\t\t}\n+\t\t\treturn ret.toString().trim();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new SpoonException(e);\n \t\t}\n-\t\treturn ret2.toString().trim();\n \t}\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 574, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 276888848, 
        "hostName": "spirals-bears", 
        "totalMemory": 397410304, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:23:40 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/260087947/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            83
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 85
        }, 
        "testing": {
          "stepDurations": [
            302
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 302
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:10:55 PM", 
      "totalDuration": 758
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1149, 
        "numberRunning": 1150, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.SpoonException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/260612138", 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 11, 
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.SpoonException", 
          "testMethod": "testIssue1501", 
          "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest", 
          "detail": "spoon.SpoonException: Printing of spoon.support.reflect.code.CtFieldReadImpl on path \n CtPackageImpl:org\n CtPackageImpl:ethack\n CtPackageImpl:orwall\n CtClassImpl:PreferencesActivity\n CtClassImpl:NetworkPrefs\n CtFieldImpl:listener\n CtNewClassImpl\n CtClassImpl:1\n CtMethodImpl:onSharedPreferenceChanged\n CtBlockImpl\n CtIfImpl\n CtBlockImpl\n CtInvocationImpl\n CtFieldReadImpl:PARAM_ACTIVATE\nat position (/root/workspace/INRIA/spoon/260612138/src/test/resources/noclasspath/orwall/PreferencesActivity.java:126) failed", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/265581135", 
        "date": "Aug 17, 2017 3:53:00 PM", 
        "id": 265581135
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/260612138", 
        "date": "Aug 3, 2017 3:49:11 PM", 
        "id": 260612138
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/27e3d3f895346849555bcd09e47968351dc04b31", 
        "sha": "27e3d3f895346849555bcd09e47968351dc04b31", 
        "branchName": "master", 
        "date": "Aug 17, 2017 3:43:09 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/fbf56d6f6628980965c3b2f8eab9ee9db1e3649c", 
        "sha": "fbf56d6f6628980965c3b2f8eab9ee9db1e3649c", 
        "branchName": "master", 
        "date": "Aug 3, 2017 3:39:32 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-260612138-265581135", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_78", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex b7bb8ad..672c64c 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -780,7 +780,7 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\tboolean isImportedField = importsContext.isImported(f.getVariable());\n \n \t\t\t\tif (!isInitializeStaticFinalField && !(isStaticField && isImportedField)) {\n-\t\t\t\t\tif (target.isImplicit()) {\n+\t\t\t\t\tif (target.isImplicit() && !(f.getVariable().getFieldDeclaration() == null && this.env.getNoClasspath())) {\n \t\t\t\t\t\t/*\n \t\t\t\t\t\t * target is implicit, check whether there is no conflict with an local variable, catch variable or parameter\n \t\t\t\t\t\t * in case of conflict make it explicit, otherwise the field access is shadowed by that variable.\n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 574, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 268591760, 
        "hostName": "spirals-bears", 
        "totalMemory": 403701760, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:23:29 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/260612138/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            80
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 81
        }, 
        "testing": {
          "stepDurations": [
            299
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 299
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 3:10:53 PM", 
      "totalDuration": 749
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1158, 
        "numberRunning": 1160, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/270437105", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Type NestedInterface is not a class", 
          "isError": false, 
          "testMethod": "testCallProcessorWithMultipleTypes", 
          "testClass": "spoon.test.processing.ProcessingTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Type NestedInterface is not a class", 
          "isError": false, 
          "testMethod": "testProcessorWithGenericType", 
          "testClass": "spoon.test.processing.ProcessingTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 7, 
          "testClass": "spoon.test.processing.ProcessingTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/270439051", 
        "date": "Aug 31, 2017 4:35:21 PM", 
        "id": 270439051
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/270437105", 
        "date": "Aug 31, 2017 4:30:31 PM", 
        "id": 270437105
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/1d1ed44e13912f8131880119da287c317605e6e3", 
        "sha": "1d1ed44e13912f8131880119da287c317605e6e3", 
        "branchName": "master", 
        "date": "Aug 31, 2017 4:25:29 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0e10a4eeb6426b1acd96e20a102a9d2f69f83334", 
        "sha": "0e10a4eeb6426b1acd96e20a102a9d2f69f83334", 
        "branchName": "master", 
        "date": "Aug 31, 2017 4:20:37 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-270437105-270439051", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_79", 
    "diff": "diff --git a/src/main/java/spoon/support/visitor/ProcessingVisitor.java b/src/main/java/spoon/support/visitor/ProcessingVisitor.java\nindex 268b27f..07212e5 100644\n--- a/src/main/java/spoon/support/visitor/ProcessingVisitor.java\n+++ b/src/main/java/spoon/support/visitor/ProcessingVisitor.java\n@@ -45,10 +45,11 @@ public class ProcessingVisitor extends CtScanner {\n \t\tif (!factory.getEnvironment().isProcessingStopped()\n \t\t\t\t&& processor.getProcessedElementTypes() != null) {\n \t\t\tfor (Object o : processor.getProcessedElementTypes()) {\n-\t\t\t\tif (((Class<?>) o).isAssignableFrom(e.getClass())) {\n-\t\t\t\t\treturn true;\n+\t\t\t\tif (!((Class<?>) o).isAssignableFrom(e.getClass())) {\n+\t\t\t\t\treturn false;\n \t\t\t\t}\n \t\t\t}\n+\t\t\treturn true;\n \t\t}\n \t\treturn false;\n \t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 511, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 586, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 317172976, 
        "hostName": "spirals-bears", 
        "totalMemory": 481296384, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:12:21 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/270437105/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            76
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 77
        }, 
        "testing": {
          "stepDurations": [
            357
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 357
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:57:08 PM", 
      "totalDuration": 904
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1160, 
        "numberRunning": 1162, 
        "numberFailing": 1, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.compiler.InvalidClassPathException", 
            "isError": true, 
            "occurrences": 1
          }, 
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/270439051", 
      "failingClasses": [
        {
          "numberPassing": 11, 
          "numberRunning": 13, 
          "testClass": "spoon.test.compilation.CompilationTest", 
          "numberFailing": 1, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "spoon.compiler.InvalidClassPathException", 
          "testMethod": "testURLClassLoader", 
          "testClass": "spoon.test.compilation.CompilationTest", 
          "detail": "file:/root/workspace/INRIA/spoon/270439051/target/classes/ does not exist, it is not a valid folder", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testURLClassLoaderWithOtherResourcesThanOnlyFiles", 
          "isError": false, 
          "testClass": "spoon.test.compilation.CompilationTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/271649592", 
        "date": "Sep 4, 2017 1:43:38 PM", 
        "id": 271649592
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/270439051", 
        "date": "Aug 31, 2017 4:35:21 PM", 
        "id": 270439051
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0e4787187d8d6192c43144de0fc91e5047fa867b", 
        "sha": "0e4787187d8d6192c43144de0fc91e5047fa867b", 
        "branchName": "master", 
        "date": "Sep 4, 2017 1:33:40 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/1d1ed44e13912f8131880119da287c317605e6e3", 
        "sha": "1d1ed44e13912f8131880119da287c317605e6e3", 
        "branchName": "master", 
        "date": "Aug 31, 2017 4:25:29 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-270439051-271649592", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 511, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 586, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 14, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_80", 
    "diff": "diff --git a/src/main/java/spoon/support/StandardEnvironment.java b/src/main/java/spoon/support/StandardEnvironment.java\nindex 2d52b1f..0698044 100644\n--- a/src/main/java/spoon/support/StandardEnvironment.java\n+++ b/src/main/java/spoon/support/StandardEnvironment.java\n@@ -353,11 +353,22 @@ public class StandardEnvironment implements Serializable, Environment {\n \t\tif (aClassLoader instanceof URLClassLoader) {\n \t\t\tfinal URL[] urls = ((URLClassLoader) aClassLoader).getURLs();\n \t\t\tif (urls != null && urls.length > 0) {\n-\t\t\t\tList<String> classpath = new ArrayList<>();\n+\t\t\t\t// Check that the URLs are only file URLs\n+\t\t\t\tboolean onlyFileURLs = true;\n \t\t\t\tfor (URL url : urls) {\n-\t\t\t\t\tclasspath.add(url.toString());\n+\t\t\t\t\tif (!url.getProtocol().equals(\"file\")) {\n+\t\t\t\t\t\tonlyFileURLs = false;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (onlyFileURLs) {\n+\t\t\t\t\tList<String> classpath = new ArrayList<>();\n+\t\t\t\t\tfor (URL url : urls) {\n+\t\t\t\t\t\tclasspath.add(url.getPath());\n+\t\t\t\t\t}\n+\t\t\t\t\tsetSourceClasspath(classpath.toArray(new String[0]));\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow new SpoonException(\"Spoon does not support a URLClassLoader containing other resources than local file.\");\n \t\t\t\t}\n-\t\t\t\tsetSourceClasspath(classpath.toArray(new String[0]));\n \t\t\t}\n \t\t\treturn;\n \t\t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 349771488, 
        "hostName": "spirals-bears", 
        "totalMemory": 421527552, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:08:55 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/270439051/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            78
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 79
        }, 
        "testing": {
          "stepDurations": [
            305
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 305
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:53:48 PM", 
      "totalDuration": 898
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1162, 
        "numberRunning": 1163, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.StackOverflowError", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/271649592", 
      "failureDetails": [
        {
          "failureName": "java.lang.StackOverflowError", 
          "isError": true, 
          "testClass": "spoon.test.reference.ElasticsearchStackoverflowTest", 
          "testMethod": "testStackOverflow"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "spoon.test.reference.ElasticsearchStackoverflowTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/272084174", 
        "date": "Sep 5, 2017 4:45:50 PM", 
        "id": 272084174
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/271649592", 
        "date": "Sep 4, 2017 1:43:38 PM", 
        "id": 271649592
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/82eb44bdc63e882696001b3a25f5e32ef2ec8526", 
        "sha": "82eb44bdc63e882696001b3a25f5e32ef2ec8526", 
        "branchName": "master", 
        "date": "Sep 5, 2017 4:35:43 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/0e4787187d8d6192c43144de0fc91e5047fa867b", 
        "sha": "0e4787187d8d6192c43144de0fc91e5047fa867b", 
        "branchName": "master", 
        "date": "Sep 4, 2017 1:33:40 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-271649592-272084174", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 8, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_81", 
    "diff": "diff --git a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\nindex f2bc30b..67611e8 100644\n--- a/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n+++ b/src/main/java/spoon/support/reflect/reference/CtTypeParameterReferenceImpl.java\n@@ -190,12 +190,18 @@ public class CtTypeParameterReferenceImpl extends CtTypeReferenceImpl<Object> im\n \t\t\tparent = parent.getParent();\n \t\t}\n \t\tif (parent instanceof CtExecutableReference) {\n-\t\t\tCtElement parent2 = ((CtExecutableReference) parent).getExecutableDeclaration();\n-\t\t\tif (parent2 instanceof CtMethod) {\n-\t\t\t\te = parent2;\n+\t\t\tCtExecutableReference parentExec = (CtExecutableReference) parent;\n+\t\t\tif (!parentExec.getDeclaringType().equals(e)) {\n+\t\t\t\tCtElement parent2 = parentExec.getExecutableDeclaration();\n+\t\t\t\tif (parent2 instanceof CtMethod) {\n+\t\t\t\t\te = parent2;\n+\t\t\t\t} else {\n+\t\t\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n+\t\t\t\t}\n \t\t\t} else {\n \t\t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n \t\t\t}\n+\n \t\t} else {\n \t\t\te = e.getParent(CtFormalTypeDeclarer.class);\n \t\t}\n", 
    "projectMetrics": {
      "numberSourceFiles": 511, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 587, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 422054464, 
        "hostName": "spirals-bears", 
        "totalMemory": 491257856, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:08:46 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/271649592/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            82
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 84
        }, 
        "testing": {
          "stepDurations": [
            300
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 300
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:53:38 PM", 
      "totalDuration": 901
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1162, 
        "numberRunning": 1167, 
        "numberFailing": 5, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 5
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/272467827", 
      "failingClasses": [
        {
          "numberPassing": 18, 
          "numberRunning": 23, 
          "testClass": "spoon.test.template.TemplateTest", 
          "numberFailing": 5, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testExtensionDecoupledSubstitutionVisitor", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<....logger.Logger.exit([\"enter\"])> but was:<....logger.Logger.exit([this._methodName_])>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testFieldAccessNameSubstitutionInInnerClass", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<[value] = 7> but was:<[\"value\"] = 7>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testAnotherFieldAccessNameSubstitution", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<...System.out.println(([(x)] + (m_x)))> but was:<...System.out.println(([\"x\"] + (m_x)))>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testFieldAccessNameSubstitution", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<[value] = 7> but was:<[\"value\"] = 7>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testTemplateInheritance", 
          "testClass": "spoon.test.template.TemplateTest", 
          "detail": "expected:<[newVarName] = o> but was:<[\"newVarName\"] = o>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/272468614", 
        "date": "Sep 6, 2017 2:59:34 PM", 
        "id": 272468614
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/272467827", 
        "date": "Sep 6, 2017 2:57:28 PM", 
        "id": 272467827
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/25286d92e4c3f3c59865b904779d630f6d927ec9", 
        "sha": "25286d92e4c3f3c59865b904779d630f6d927ec9", 
        "branchName": "master", 
        "date": "Sep 6, 2017 2:49:41 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/3ccd1790a203b2ebe63cd0af796da9dac6760a14", 
        "sha": "3ccd1790a203b2ebe63cd0af796da9dac6760a14", 
        "branchName": "master", 
        "date": "Sep 6, 2017 2:47:46 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-272467827-272468614", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 511, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 591, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 22, 
        "numberDeleted": 56
      }
    }, 
    "bugId": "Bears_82", 
    "diff": "diff --git a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\nindex 033dc1b..5eff88b 100644\n--- a/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n+++ b/src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java\n@@ -787,6 +787,9 @@ public class DefaultJavaPrettyPrinter implements CtVisitor, PrettyPrinter {\n \t\t\t\t\t\t * Search for potential variable declaration until we found a class which declares or inherits this field\n \t\t\t\t\t\t */\n \t\t\t\t\t\tfinal CtField<?> field = f.getVariable().getFieldDeclaration();\n+\t\t\t\t\t\tif (field == null) {\n+\t\t\t\t\t\t\tthrow new SpoonException(\"The reference to field named \\\"\" + f.getVariable().getSimpleName() + \"\\\" is invalid, because there is no field with such name on path:\" + getPath(f));\n+\t\t\t\t\t\t}\n \t\t\t\t\t\tfinal String fieldName = field.getSimpleName();\n \t\t\t\t\t\tCtVariable<?> var = f.getVariable().map(new PotentialVariableDeclarationFunction(fieldName)).first();\n \t\t\t\t\t\tif (var != field) {\ndiff --git a/src/main/java/spoon/support/template/SubstitutionVisitor.java b/src/main/java/spoon/support/template/SubstitutionVisitor.java\nindex b0c1ecc..1ff0559 100644\n--- a/src/main/java/spoon/support/template/SubstitutionVisitor.java\n+++ b/src/main/java/spoon/support/template/SubstitutionVisitor.java\n@@ -243,11 +243,46 @@ public class SubstitutionVisitor extends CtScanner {\n \t\t\t\t\t\tthrow context.replace(toReplace, enumValueAccess);\n \t\t\t\t\t} else if ((value != null) && value.getClass().isArray()) {\n \t\t\t\t\t\tthrow context.replace(toReplace, factory.Code().createLiteralArray((Object[]) value));\n+\t\t\t\t\t} else if (fieldAccess == toReplace && value instanceof String) {\n+\t\t\t\t\t\t/*\n+\t\t\t\t\t\t * If the value is type String, then it is ambiguous request, because:\n+\t\t\t\t\t\t * A) sometime client wants to replace parameter field access by String literal\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * @Parameter\n+\t\t\t\t\t\t * String field = \"x\"\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * System.printLn(field) //is substitutes as: System.printLn(\"x\")\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * but in the case of local variables it already behaves like this\n+\t\t\t\t\t\t * {\n+\t\t\t\t\t\t * \t\tint field;\n+\t\t\t\t\t\t * \t\tSystem.printLn(field) //is substitutes as: System.printLn(x)\n+\t\t\t\t\t\t * }\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * B) sometime client wants to keep field access and just substitute field name\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * @Parameter(\"field\")\n+\t\t\t\t\t\t * String fieldName = \"x\"\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * System.printLn(field) //is substitutes as: System.printLn(x)\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * ----------------------\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * The case B is more clear and is compatible with substitution of name of local variable, method name, etc.\n+\t\t\t\t\t\t * And case A can be easily modeled using this clear code\n+\t\t\t\t\t\t *\n+\t\t\t\t\t\t * @Parameter\n+\t\t\t\t\t\t * String field = \"x\"\n+\t\t\t\t\t\t * System.printLn(\"field\") //is substitutes as: System.printLn(\"x\")\n+\t\t\t\t\t\t * System.printLn(field) //is substitutes as: System.printLn(\"x\") because the parameter `field` is constructed with literal value\n+\t\t\t\t\t\t */\n+\t\t\t\t\t\t//New implementation always replaces the name of the accessed field\n+\t\t\t\t\t\t//so do nothing here. The string substitution is handled by #scanCtReference\n \t\t\t\t\t} else {\n \t\t\t\t\t\tthrow context.replace(toReplace, factory.Code().createLiteral(value));\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tthrow context.replace(toReplace, toReplace.clone());\n+\t\t\t\t\tthrow context.replace(toReplace, (CtElement) value);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -501,14 +536,14 @@ public class SubstitutionVisitor extends CtScanner {\n \t * @return list where each item is assured to be of type itemClass\n \t */\n \t@SuppressWarnings(\"unchecked\")\n-\tprivate static <T> List<T> getParameterValueAsListOfClones(Class<T> itemClass, Object parameterValue) {\n+\tprivate <T> List<T> getParameterValueAsListOfClones(Class<T> itemClass, Object parameterValue) {\n \t\tList<Object> list = getParameterValueAsNewList(parameterValue);\n \t\tfor (int i = 0; i < list.size(); i++) {\n \t\t\tlist.set(i, getParameterValueAsClass(itemClass, list.get(i)));\n \t\t}\n \t\treturn (List<T>) list;\n \t}\n-\tprivate static List<Object> getParameterValueAsNewList(Object parameterValue) {\n+\tprivate List<Object> getParameterValueAsNewList(Object parameterValue) {\n \t\tList<Object> list = new ArrayList<>();\n \t\tif (parameterValue != null) {\n \t\t\tif (parameterValue instanceof Object[]) {\n@@ -536,7 +571,7 @@ public class SubstitutionVisitor extends CtScanner {\n \t * @return parameterValue cast (in future potentially converted) to itemClass\n \t */\n \t@SuppressWarnings(\"unchecked\")\n-\tprivate static <T> T getParameterValueAsClass(Class<T> itemClass, Object parameterValue) {\n+\tprivate <T> T getParameterValueAsClass(Class<T> itemClass, Object parameterValue) {\n \t\tif (parameterValue == null || parameterValue == NULL_VALUE) {\n \t\t\treturn null;\n \t\t}\n@@ -556,7 +591,11 @@ public class SubstitutionVisitor extends CtScanner {\n \t\t\tif (parameterValue instanceof CtTypeReference) {\n \t\t\t\t//convert type reference into code element as class access\n \t\t\t\tCtTypeReference<?> tr = (CtTypeReference<?>) parameterValue;\n-\t\t\t\treturn (T) tr.getFactory().Code().createClassAccess(tr);\n+\t\t\t\treturn (T) factory.Code().createClassAccess(tr);\n+\t\t\t}\n+\t\t\tif (parameterValue instanceof String) {\n+\t\t\t\t//convert String to code element as Literal\n+\t\t\t\treturn (T) factory.Code().createLiteral((String) parameterValue);\n \t\t\t}\n \t\t}\n \t\tthrow new SpoonException(\"Parameter value has unexpected class: \" + parameterValue.getClass().getName() + \". Expected class is: \" + itemClass.getName());\n@@ -565,7 +604,7 @@ public class SubstitutionVisitor extends CtScanner {\n \t * @param parameterValue a value of an template parameter\n \t * @return parameter value converted to String\n \t */\n-\tprivate static String getParameterValueAsString(Object parameterValue) {\n+\tprivate String getParameterValueAsString(Object parameterValue) {\n \t\tif (parameterValue == null) {\n \t\t\treturn null;\n \t\t}\n@@ -634,7 +673,7 @@ public class SubstitutionVisitor extends CtScanner {\n \t * @param index index of item from the list, or null if item is not expected to be a list\n \t * @return parameterValue (optionally item from the list) cast (in future potentially converted) to itemClass\n \t */\n-\tprivate static <T> T getParameterValueAtIndex(Class<T> itemClass, Object parameterValue, Integer index) {\n+\tprivate <T> T getParameterValueAtIndex(Class<T> itemClass, Object parameterValue, Integer index) {\n \t\tif (index != null) {\n \t\t\t//convert to list, but do not clone\n \t\t\tList<Object> list = getParameterValueAsNewList(parameterValue);\ndiff --git a/src/main/java/spoon/template/Template.java b/src/main/java/spoon/template/Template.java\nindex ea3f036..14aecdb 100644\n--- a/src/main/java/spoon/template/Template.java\n+++ b/src/main/java/spoon/template/Template.java\n@@ -26,9 +26,10 @@ import spoon.reflect.declaration.CtType;\n  * {@link TemplateParameter#S()} method.\n  *\n  * <p>\n- * When the template parameter is a String or a primitive type (or a boxing\n+ * When the template parameter is a String it is used to rename element of the code such as fields or methods.\n+ * When it is another primitive type (or a boxing\n  * type) representing a literal, or a Class, the template parameter can be\n- * directly accessed.\n+ * directly accessed. To use a standard parameter containing a String type, use a CtLiteral&lt;String&gt;\n  *\n  * <pre>\n  *       import spoon.template.Template;\n@@ -38,15 +39,19 @@ import spoon.reflect.declaration.CtType;\n  *           // template parameter fields\n  *            \\@Parameter String _parameter_;\n  *\n+ *            \\@Parameter CtLiteral&lt;String&gt; _anotherParameter;\n+ *\n+ *\n  *           // parameters binding\n  *            \\@Local\n- *           public SimpleTemplate(String parameter) {\n+ *           public SimpleTemplate(String parameter, CtLiteral&lt;String&gt; anotherParameter) {\n  *               _parameter_ = parameter;\n+ *               _anotherParameter = anotherParameter;\n  *           }\n  *\n  *           // template method\n- *           public void simpleTemplateMethod() {\n- *               System.out.println(_parameter_);\n+ *           public void methodwith_parameter_() {\n+ *               System.out.println(_anotherParameter);\n  *           }\n  *       }\n  * </pre>\n@@ -60,7 +65,10 @@ import spoon.reflect.declaration.CtType;\n  *\n  * <pre>\n  *       spoon.reflect.CtClass target=...;\n- *       Template template=new SimpleTemplate(&quot;hello templated world&quot;);\n+ *       CtLiteral&lt;String&gt; anotherParameter = factory.createLiteral();\n+ *       anotherParameter.setValue(&quot;hello templated world&quot;);\n+ *\n+ *       Template template=new SimpleTemplate(&quot;ParameterizedName&quot;, anotherParameter);\n  *       Substitution.insertAll(target,template);\n  * </pre>\n  *\n@@ -70,7 +78,7 @@ import spoon.reflect.declaration.CtType;\n  *\n  * <pre>\n  * public class A {\n- * \tpublic void insertedMethod() {\n+ * \tpublic void methodwithParameterizedName() {\n  * \t\tSystem.out.println(&quot;hello templated world&quot;);\n  *    }\n  * }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 350354016, 
        "hostName": "spirals-bears", 
        "totalMemory": 470286336, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 3:08:20 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/272467827/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            80
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 81
        }, 
        "testing": {
          "stepDurations": [
            301
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 301
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:53:04 PM", 
      "totalDuration": 908
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1167, 
        "numberRunning": 1168, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "spoon.template.TemplateException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/INRIA/spoon/277315604", 
      "failureDetails": [
        {
          "failureName": "spoon.template.TemplateException", 
          "detail": "proxy template parameter must be typed as String spoon.reflect.reference.CtTypeReference", 
          "isError": true, 
          "testMethod": "substituteTypeAccessReference", 
          "testClass": "spoon.test.template.TemplateTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 23, 
          "numberRunning": 24, 
          "testClass": "spoon.test.template.TemplateTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/277340707", 
        "date": "Sep 19, 2017 4:49:14 PM", 
        "id": 277340707
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/INRIA/spoon/builds/277315604", 
        "date": "Sep 19, 2017 3:53:56 PM", 
        "id": 277315604
      }
    }, 
    "repository": {
      "name": "INRIA-spoon", 
      "url": "https://github.com/INRIA/spoon", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14176513
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/INRIA/spoon/commit/770e4845b911a176cb092e574a93a46fb4327328", 
        "sha": "770e4845b911a176cb092e574a93a46fb4327328", 
        "branchName": "master", 
        "date": "Sep 19, 2017 4:37:31 PM", 
        "repoName": "INRIA/spoon"
      }, 
      "buggyBuild": {
        "url": "http://github.com/INRIA/spoon/commit/494ba6f46237e818ca2a751da8673e3a707b1df1", 
        "sha": "494ba6f46237e818ca2a751da8673e3a707b1df1", 
        "branchName": "master", 
        "date": "Sep 19, 2017 3:43:28 PM", 
        "repoName": "INRIA/spoon"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/INRIA-spoon-277315604-277340707", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 514, 
      "numberLibrariesFailingModule": 10, 
      "numberTestFiles": 592, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 43, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_83", 
    "diff": "diff --git a/src/main/java/spoon/template/Substitution.java b/src/main/java/spoon/template/Substitution.java\nindex d413e1b..b60f1ad 100644\n--- a/src/main/java/spoon/template/Substitution.java\n+++ b/src/main/java/spoon/template/Substitution.java\n@@ -671,29 +671,31 @@ public abstract class Substitution {\n \t\t\tParameter templateParamAnnotation = f.getAnnotation(Parameter.class);\n \t\t\tif (templateParamAnnotation != null && !templateParamAnnotation.value().equals(\"\")) {\n \t\t\t\tString proxyName = templateParamAnnotation.value();\n-\t\t\t\t// contract: if value, then the field type must be String\n-\t\t\t\tif (!f.getType().equals(c.getFactory().Type().STRING)) {\n-\t\t\t\t\tthrow new TemplateException(\"proxy template parameter must be typed as String \" +  f.getType().getQualifiedName());\n-\t\t\t\t}\n-\n-\t\t\t\t// contract: the name of the template parameter must correspond to the name of the field\n-\t\t\t\t// as found, by Pavel, this is not good contract because it prevents easy refactoring of templates\n-\t\t\t\t// we remove it but keep th commented code in case somebody would come up with this bad idae\n-//\t\t\t\tif (!f.getSimpleName().equals(\"_\" + f.getAnnotation(Parameter.class).value())) {\n-//\t\t\t\t\tthrow new TemplateException(\"the field name of a proxy template parameter must be called _\" + f.getSimpleName());\n-//\t\t\t\t}\n-\n-\t\t\t\t// contract: if a proxy parameter is declared and named \"x\" (@Parameter(\"x\")), then a type member named \"x\" must exist.\n-\t\t\t\tboolean found = false;\n-\t\t\t\tfor (CtTypeMember member: c.getTypeMembers()) {\n-\t\t\t\t\tif (member.getSimpleName().equals(proxyName)) {\n-\t\t\t\t\t\tfound = true;\n+\t\t\t\t// contract: if value, then the field type must be String or CtTypeReference\n+\t\t\t\tString fieldTypeQName = f.getType().getQualifiedName();\n+\t\t\t\tif (fieldTypeQName.equals(String.class.getName())) {\n+\t\t\t\t\t// contract: the name of the template parameter must correspond to the name of the field\n+\t\t\t\t\t// as found, by Pavel, this is not good contract because it prevents easy refactoring of templates\n+\t\t\t\t\t// we remove it but keep th commented code in case somebody would come up with this bad idae\n+//\t\t\t\t\tif (!f.getSimpleName().equals(\"_\" + f.getAnnotation(Parameter.class).value())) {\n+//\t\t\t\t\t\tthrow new TemplateException(\"the field name of a proxy template parameter must be called _\" + f.getSimpleName());\n+//\t\t\t\t\t}\n+\n+\t\t\t\t\t// contract: if a proxy parameter is declared and named \"x\" (@Parameter(\"x\")), then a type member named \"x\" must exist.\n+\t\t\t\t\tboolean found = false;\n+\t\t\t\t\tfor (CtTypeMember member: c.getTypeMembers()) {\n+\t\t\t\t\t\tif (member.getSimpleName().equals(proxyName)) {\n+\t\t\t\t\t\t\tfound = true;\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n+\t\t\t\t\tif (!found) {\n+\t\t\t\t\t\tthrow new TemplateException(\"if a proxy parameter is declared and named \\\"\" + proxyName + \"\\\", then a type member named \\\"\\\" + proxyName + \\\"\\\" must exist.\");\n+\t\t\t\t\t}\n+\t\t\t\t} else if (fieldTypeQName.equals(CtTypeReference.class.getName())) {\n+\t\t\t\t\t//OK it is CtTypeReference\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow new TemplateException(\"proxy template parameter must be typed as String or CtTypeReference, but it is \" + fieldTypeQName);\n \t\t\t\t}\n-\t\t\t\tif (!found) {\n-\t\t\t\t\tthrow new TemplateException(\"if a proxy parameter is declared and named \\\"\" + proxyName + \"\\\", then a type member named \\\"\\\" + proxyName + \\\"\\\" must exist.\");\n-\t\t\t\t}\n-\n \t\t\t}\n \t\t}\n \t}\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 248879168, 
        "hostName": "spirals-bears", 
        "totalMemory": 484442112, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:53:25 PM", 
      "projectRootPomPath": "./workspace/INRIA/spoon/277315604/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            80
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 81
        }, 
        "testing": {
          "stepDurations": [
            298
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 298
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:40:37 PM", 
      "totalDuration": 761
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1123, 
        "numberRunning": 1124, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/185852074", 
      "failingClasses": [
        {
          "numberPassing": 11, 
          "numberRunning": 12, 
          "testClass": "org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "testMethod": "skipsEntityWithoutIdentifier", 
          "testClass": "org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests", 
          "detail": "Unsupported entity org.springframework.data.auditing.IsNewAwareAuditingHandlerUnitTests$EntityWithoutId! Could not determine IsNewStrategy.", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193313389", 
        "date": "Jan 19, 2017 9:57:11 AM", 
        "id": 193313389
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/185852074", 
        "date": "Dec 21, 2016 11:43:04 PM", 
        "id": 185852074
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/cdbd0720836779e332384e1bcec244c3f645af65", 
        "sha": "cdbd0720836779e332384e1bcec244c3f645af65", 
        "branchName": "1.11.x", 
        "date": "Jan 19, 2017 9:50:06 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/d1d493150470b67dc3cfc54a746c9fa83eab16fd", 
        "sha": "d1d493150470b67dc3cfc54a746c9fa83eab16fd", 
        "branchName": "1.11.x", 
        "date": "Dec 21, 2016 7:35:19 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-185852074-193313389", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 347, 
      "numberLibrariesFailingModule": 62, 
      "numberTestFiles": 207, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 11
      }
    }, 
    "bugId": "Bears_84", 
    "diff": "diff --git a/src/main/java/org/springframework/data/auditing/AuditingHandler.java b/src/main/java/org/springframework/data/auditing/AuditingHandler.java\nindex f7433a5..5210104 100644\n--- a/src/main/java/org/springframework/data/auditing/AuditingHandler.java\n+++ b/src/main/java/org/springframework/data/auditing/AuditingHandler.java\n@@ -134,6 +134,16 @@ public class AuditingHandler implements InitializingBean {\n \t\ttouch(source, false);\n \t}\n \n+\t/**\n+\t * Returns whether the given source is considered to be auditable in the first place\n+\t * \n+\t * @param source can be {@literal null}.\n+\t * @return\n+\t */\n+\tprotected final boolean isAuditable(Object source) {\n+\t\treturn factory.getBeanWrapperFor(source) != null;\n+\t}\n+\n \tprivate void touch(Object target, boolean isNew) {\n \n \t\tAuditableBeanWrapper wrapper = factory.getBeanWrapperFor(target);\ndiff --git a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\nindex f9b1d4c..74922f8 100644\n--- a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\n+++ b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java\n@@ -73,7 +73,7 @@ public class IsNewAwareAuditingHandler extends AuditingHandler {\n \t */\n \tpublic void markAudited(Object object) {\n \n-\t\tif (object == null) {\n+\t\tif (!isAuditable(object)) {\n \t\t\treturn;\n \t\t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 235738112, 
        "hostName": "local", 
        "totalMemory": 282591232, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:59:23 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/185852074/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            4, 
            0, 
            0, 
            180
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 184
        }, 
        "testing": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:54:25 PM", 
      "totalDuration": 293
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2000, 
        "numberRunning": 2002, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/193313395", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests", 
          "testMethod": "doesNotConsiderTypeVariableBoundTo", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests", 
          "testMethod": "genericTypeOnConcreteOne", 
          "isError": true
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 5, 
          "testClass": "org.springframework.data.web.ProjectingJackson2HttpMessageConverterUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193356189", 
        "date": "Jan 19, 2017 12:49:41 PM", 
        "id": 193356189
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193313395", 
        "date": "Jan 19, 2017 9:58:45 AM", 
        "id": 193313395
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e68be19054603862acf5db25f66cb9a94784fe1e", 
        "sha": "e68be19054603862acf5db25f66cb9a94784fe1e", 
        "branchName": "master", 
        "date": "Jan 19, 2017 12:23:14 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/60d40b51b3d1f8fd6135d4d9d3915d46df494d23", 
        "sha": "60d40b51b3d1f8fd6135d4d9d3915d46df494d23", 
        "branchName": "master", 
        "date": "Jan 19, 2017 9:49:35 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-193313395-193356189", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_85", 
    "diff": "diff --git a/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java b/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\nindex bda6f47..efe34b1 100644\n--- a/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\n+++ b/src/main/java/org/springframework/data/web/ProjectingJackson2HttpMessageConverter.java\n@@ -117,7 +117,8 @@ public class ProjectingJackson2HttpMessageConverter extends MappingJackson2HttpM\n \t\t\treturn false;\n \t\t}\n \n-\t\tClass<?> rawType = ResolvableType.forType(type).getRawClass();\n+\t\tResolvableType owner = contextClass == null ? null : ResolvableType.forClass(contextClass);\n+\t\tClass<?> rawType = ResolvableType.forType(type, owner).resolve(Object.class);\n \t\tBoolean result = supportedTypesCache.get(rawType);\n \n \t\tif (result != null) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 378, 
      "numberLibrariesFailingModule": 71, 
      "numberTestFiles": 226, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 159380640, 
        "hostName": "local", 
        "totalMemory": 239075328, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:54:15 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/193313395/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            199
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 201
        }, 
        "testing": {
          "stepDurations": [
            31
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 31
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:48:17 PM", 
      "totalDuration": 352
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2004, 
        "numberRunning": 2006, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/193356189", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 4, 
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "doesNotSupportUnannotatedInterfaceFromSpringNamespace", 
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests", 
          "detail": "\nExpected: is <false>\n     but: was <true>", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "doesNotSupportCoreJavaType", 
          "testClass": "org.springframework.data.web.ProxyingHandlerMethodArgumentResolverUnitTests", 
          "detail": "\nExpected: is <false>\n     but: was <true>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/194423789", 
        "date": "Jan 23, 2017 11:51:09 AM", 
        "id": 194423789
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/193356189", 
        "date": "Jan 19, 2017 12:49:41 PM", 
        "id": 193356189
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/bf04e3232b959735a89ea2a06f77295773fce976", 
        "sha": "bf04e3232b959735a89ea2a06f77295773fce976", 
        "branchName": "master", 
        "date": "Jan 23, 2017 11:41:39 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e68be19054603862acf5db25f66cb9a94784fe1e", 
        "sha": "e68be19054603862acf5db25f66cb9a94784fe1e", 
        "branchName": "master", 
        "date": "Jan 19, 2017 12:23:14 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-193356189-194423789", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 378, 
      "numberLibrariesFailingModule": 71, 
      "numberTestFiles": 228, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 25, 
        "numberDeleted": 8
      }
    }, 
    "bugId": "Bears_86", 
    "diff": "diff --git a/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java b/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\nindex b918f22..0ab0c94 100644\n--- a/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\n+++ b/src/main/java/org/springframework/data/web/ProxyingHandlerMethodArgumentResolver.java\n@@ -15,6 +15,9 @@\n  */\n package org.springframework.data.web;\n \n+import java.util.Arrays;\n+import java.util.List;\n+\n import org.springframework.beans.BeansException;\n import org.springframework.beans.MutablePropertyValues;\n import org.springframework.beans.factory.BeanClassLoaderAware;\n@@ -22,9 +25,11 @@ import org.springframework.beans.factory.BeanFactory;\n import org.springframework.beans.factory.BeanFactoryAware;\n import org.springframework.context.ResourceLoaderAware;\n import org.springframework.core.MethodParameter;\n+import org.springframework.core.annotation.AnnotatedElementUtils;\n import org.springframework.core.convert.ConversionService;\n import org.springframework.core.io.ResourceLoader;\n import org.springframework.data.projection.SpelAwareProxyProjectionFactory;\n+import org.springframework.util.ClassUtils;\n import org.springframework.web.bind.WebDataBinder;\n import org.springframework.web.bind.support.WebDataBinderFactory;\n import org.springframework.web.context.request.NativeWebRequest;\n@@ -40,6 +45,8 @@ import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n public class ProxyingHandlerMethodArgumentResolver extends ModelAttributeMethodProcessor\n \t\timplements BeanFactoryAware, ResourceLoaderAware, BeanClassLoaderAware {\n \n+\tprivate static final List<String> IGNORED_PACKAGES = Arrays.asList(\"java\", \"org.springframework\");\n+\n \tprivate final SpelAwareProxyProjectionFactory proxyFactory;\n \tprivate final ConversionService conversionService;\n \n@@ -90,7 +97,31 @@ public class ProxyingHandlerMethodArgumentResolver extends ModelAttributeMethodP\n \t */\n \t@Override\n \tpublic boolean supportsParameter(MethodParameter parameter) {\n-\t\treturn parameter.getParameterType().isInterface();\n+\n+\t\tClass<?> type = parameter.getParameterType();\n+\n+\t\tif (!type.isInterface()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\t// Annotated parameter\n+\t\tif (parameter.getParameterAnnotation(ProjectedPayload.class) != null) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// Annotated type\n+\t\tif (AnnotatedElementUtils.findMergedAnnotation(type, ProjectedPayload.class) != null) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\t// Fallback for only user defined interfaces\n+\t\tfor (String prefix : IGNORED_PACKAGES) {\n+\t\t\tif (ClassUtils.getPackageName(type).startsWith(prefix)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn true;\n \t}\n \n \t/* \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 202264560, 
        "hostName": "local", 
        "totalMemory": 242221056, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:50:46 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/193356189/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            3, 
            0, 
            0, 
            187
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 190
        }, 
        "testing": {
          "stepDurations": [
            36
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 36
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:44:56 PM", 
      "totalDuration": 344
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2027, 
        "numberRunning": 2028, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "org.springframework.core.convert.ConversionFailedException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/240714544", 
      "failureDetails": [
        {
          "failureName": "org.springframework.core.convert.ConversionFailedException", 
          "detail": "Failed to convert from type [org.springframework.data.repository.util.NullableWrapper] to type [io.vavr.control.Option<?>] for value 'org.springframework.data.repository.util.NullableWrapper@433ae0b0'; nested exception is java.lang.IllegalArgumentException: wrong number of arguments", 
          "isError": true, 
          "testMethod": "convertsValueToVavrOption", 
          "testClass": "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 28, 
          "numberRunning": 29, 
          "testClass": "org.springframework.data.repository.util.QueryExecutionConvertersUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/241322094", 
        "date": "Jun 9, 2017 9:30:15 PM", 
        "id": 241322094
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/240714544", 
        "date": "Jun 8, 2017 11:46:59 AM", 
        "id": 240714544
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e1761f6c8c1f1189144427785b590823134d1cf4", 
        "sha": "e1761f6c8c1f1189144427785b590823134d1cf4", 
        "branchName": "1.13.x", 
        "date": "Jun 9, 2017 9:24:08 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/0398bdd22f56aebc8fc05aa498873fc0b2407435", 
        "sha": "0398bdd22f56aebc8fc05aa498873fc0b2407435", 
        "branchName": "1.13.x", 
        "date": "Jun 8, 2017 11:26:19 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-240714544-241322094", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_87", 
    "diff": "diff --git a/src/main/java/org/springframework/data/repository/util/QueryExecutionConverters.java b/src/main/java/org/springframework/data/repository/util/QueryExecutionConverters.java\nindex 4cb24fd..5dcb0f0 100644\n--- a/src/main/java/org/springframework/data/repository/util/QueryExecutionConverters.java\n+++ b/src/main/java/org/springframework/data/repository/util/QueryExecutionConverters.java\n@@ -525,7 +525,7 @@ public abstract class QueryExecutionConverters {\n \t\t */\n \t\t@Override\n \t\tprotected Object wrap(Object source) {\n-\t\t\treturn ReflectionUtils.invokeMethod(OF_METHOD, source);\n+\t\t\treturn ReflectionUtils.invokeMethod(OF_METHOD, null, source);\n \t\t}\n \n \t\tpublic static WrapperType getWrapperType() {\n", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 233, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 314685336, 
        "hostName": "spirals-bears", 
        "totalMemory": 427819008, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:34:19 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/240714544/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            154
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 155
        }, 
        "testing": {
          "stepDurations": [
            53
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 53
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:28:30 AM", 
      "totalDuration": 342
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2031, 
        "numberRunning": 2033, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/254354007", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 4, 
          "testClass": "org.springframework.data.repository.config.RepositoryBeanNameGeneratorUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.springframework.data.repository.config.RepositoryBeanNameGeneratorUnitTests", 
          "testMethod": "usesClassNameOfScannedBeanDefinition", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.springframework.data.repository.config.RepositoryBeanNameGeneratorUnitTests", 
          "testMethod": "usesClassNameOfAnnotatedBeanDefinition", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/255142407", 
        "date": "Jul 19, 2017 8:52:52 AM", 
        "id": 255142407
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/254354007", 
        "date": "Jul 17, 2017 10:49:53 AM", 
        "id": 254354007
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/721888f05285f24716908902c6167c3a34e27397", 
        "sha": "721888f05285f24716908902c6167c3a34e27397", 
        "branchName": "1.13.x", 
        "date": "Jul 19, 2017 8:44:17 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/143b497090d353e341c9f7016dc9cba47e5d4557", 
        "sha": "143b497090d353e341c9f7016dc9cba47e5d4557", 
        "branchName": "1.13.x", 
        "date": "Jul 6, 2017 11:27:45 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-254354007-255142407", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 233, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 8, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_88", 
    "diff": "diff --git a/src/main/java/org/springframework/data/repository/config/RepositoryBeanNameGenerator.java b/src/main/java/org/springframework/data/repository/config/RepositoryBeanNameGenerator.java\nindex 1020be8..0e6f4b8 100644\n--- a/src/main/java/org/springframework/data/repository/config/RepositoryBeanNameGenerator.java\n+++ b/src/main/java/org/springframework/data/repository/config/RepositoryBeanNameGenerator.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012 the original author or authors.\n+ * Copyright 2012-2017 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -51,14 +51,17 @@ public class RepositoryBeanNameGenerator implements BeanNameGenerator, BeanClass\n \t */\n \tpublic String generateBeanName(BeanDefinition definition, BeanDefinitionRegistry registry) {\n \n-\t\tAnnotatedBeanDefinition beanDefinition = new AnnotatedGenericBeanDefinition(getRepositoryInterfaceFrom(definition));\n+\t\tAnnotatedBeanDefinition beanDefinition = definition instanceof AnnotatedBeanDefinition //\n+\t\t\t\t? (AnnotatedBeanDefinition) definition //\n+\t\t\t\t: new AnnotatedGenericBeanDefinition(getRepositoryInterfaceFrom(definition));\n+\n \t\treturn DELEGATE.generateBeanName(beanDefinition, registry);\n \t}\n \n \t/**\n-\t * Returns the type configured for the {@code repositoryInterface} property of the given bean definition. Uses a\n-\t * potential {@link Class} being configured as is or tries to load a class with the given value's {@link #toString()}\n-\t * representation.\n+\t * Returns the type configured for the {@code repositoryInterface} constructor argument of the given bean definition.\n+\t * Uses a potential {@link Class} being configured as is or tries to load a class with the given value's\n+\t * {@link #toString()} representation.\n \t * \n \t * @param beanDefinition\n \t * @return\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 284138720, 
        "hostName": "spirals-bears", 
        "totalMemory": 418906112, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:23:11 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/254354007/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            3, 
            0, 
            0, 
            153
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 156
        }, 
        "testing": {
          "stepDurations": [
            52
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 52
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:17:17 PM", 
      "totalDuration": 348
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1242, 
        "numberRunning": 1243, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/263410130", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is <org.springframework.data.util.ClassTypeInformationUnitTests$SomeConcrete>\n     but: was <org.springframework.data.util.ClassTypeInformationUnitTests$SomeConcrete<java.lang.Object>>", 
          "isError": false, 
          "testMethod": "usesTargetTypeForWildcardedBaseOnSpecialization", 
          "testClass": "org.springframework.data.util.ClassTypeInformationUnitTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 29, 
          "numberRunning": 30, 
          "testClass": "org.springframework.data.util.ClassTypeInformationUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/263513297", 
        "date": "Aug 11, 2017 4:25:35 PM", 
        "id": 263513297
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/263410130", 
        "date": "Aug 11, 2017 11:00:15 AM", 
        "id": 263410130
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/1725cbaec18cb1a5c859f4d808a27840c4ffb1f6", 
        "sha": "1725cbaec18cb1a5c859f4d808a27840c4ffb1f6", 
        "branchName": "1.12.x", 
        "date": "Aug 11, 2017 3:54:45 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/ddbedb7cd7e88e4e25432933e78e1d4bacb0d987", 
        "sha": "ddbedb7cd7e88e4e25432933e78e1d4bacb0d987", 
        "branchName": "1.12.x", 
        "date": "Aug 3, 2017 11:38:02 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-263410130-263513297", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 9
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_89", 
    "diff": "diff --git a/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java b/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\nindex d707591..88a8a2f 100644\n--- a/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\n+++ b/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\n@@ -181,6 +181,15 @@ class ParameterizedTypeInformation<T> extends ParentTypeAwareTypeInformation<T>\n \t}\n \n \t/* \n+\t * (non-Javadoc)\n+\t * @see org.springframework.data.util.TypeDiscoverer#specialize(org.springframework.data.util.ClassTypeInformation)\n+\t */\n+\t@Override\n+\tpublic TypeInformation<?> specialize(ClassTypeInformation<?> type) {\n+\t\treturn isResolvedCompletely() ? type : super.specialize(type);\n+\t}\n+\n+\t/*\n \t * (non-Javadoc)\n \t * @see org.springframework.data.util.ParentTypeAwareTypeInformation#equals(java.lang.Object)\n \t */\n", 
    "projectMetrics": {
      "numberSourceFiles": 356, 
      "numberLibrariesFailingModule": 69, 
      "numberTestFiles": 225, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 372613752, 
        "hostName": "spirals-bears", 
        "totalMemory": 494927872, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:09:35 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/263410130/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            154
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 156
        }, 
        "testing": {
          "stepDurations": [
            52
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 52
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:03:54 PM", 
      "totalDuration": 335
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2036, 
        "numberRunning": 2037, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/264284792", 
      "failingClasses": [
        {
          "numberPassing": 17, 
          "numberRunning": 18, 
          "testClass": "org.springframework.data.mapping.model.AbstractPersistentPropertyUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "resolvesGenericsForRawType", 
          "testClass": "org.springframework.data.mapping.model.AbstractPersistentPropertyUnitTests", 
          "detail": "\nExpected: is type < java.lang.String\n     but: \"java.lang.Object\"", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/264335430", 
        "date": "Aug 14, 2017 2:15:11 PM", 
        "id": 264335430
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/264284792", 
        "date": "Aug 14, 2017 11:06:02 AM", 
        "id": 264284792
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/766c9078f23d9af9a8d6ebc3b991c07fadee3594", 
        "sha": "766c9078f23d9af9a8d6ebc3b991c07fadee3594", 
        "branchName": "1.13.x", 
        "date": "Aug 14, 2017 1:40:52 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/8638d30a004aad5904105794385058cfc65c7c3f", 
        "sha": "8638d30a004aad5904105794385058cfc65c7c3f", 
        "branchName": "1.13.x", 
        "date": "Aug 11, 2017 3:54:33 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-264284792-264335430", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_90", 
    "diff": "diff --git a/src/main/java/org/springframework/data/mapping/model/AbstractPersistentProperty.java b/src/main/java/org/springframework/data/mapping/model/AbstractPersistentProperty.java\nindex c36e1ad..9e64ebf 100644\n--- a/src/main/java/org/springframework/data/mapping/model/AbstractPersistentProperty.java\n+++ b/src/main/java/org/springframework/data/mapping/model/AbstractPersistentProperty.java\n@@ -62,8 +62,9 @@ public abstract class AbstractPersistentProperty<P extends PersistentProperty<P>\n \t\tAssert.notNull(owner, \"Owner entity must not be null!\");\n \n \t\tthis.name = field == null ? propertyDescriptor.getName() : field.getName();\n-\t\tthis.rawType = field == null ? propertyDescriptor.getPropertyType() : field.getType();\n \t\tthis.information = owner.getTypeInformation().getProperty(this.name);\n+\t\tthis.rawType = this.information != null ? information.getType()\n+\t\t\t\t: field == null ? propertyDescriptor.getPropertyType() : field.getType();\n \t\tthis.propertyDescriptor = propertyDescriptor;\n \t\tthis.field = field;\n \t\tthis.association = isAssociation() ? createAssociation() : null;\n", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 233, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 283803136, 
        "hostName": "spirals-bears", 
        "totalMemory": 418906112, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:07:46 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/264284792/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            2, 
            0, 
            0, 
            154
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 157
        }, 
        "testing": {
          "stepDurations": [
            50
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 50
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:01:49 PM", 
      "totalDuration": 351
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2038, 
        "numberRunning": 2039, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/271991482", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is sameInstance(<com.fasterxml.jackson.databind.ObjectMapper@1b13467c>)\n     but: was <com.fasterxml.jackson.databind.ObjectMapper@7bd96822>", 
          "isError": false, 
          "testMethod": "usesCustomObjectMapper", 
          "testClass": "org.springframework.data.web.config.SpringDataWebConfigurationIntegrationTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 5, 
          "testClass": "org.springframework.data.web.config.SpringDataWebConfigurationIntegrationTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/272568125", 
        "date": "Sep 6, 2017 6:58:13 PM", 
        "id": 272568125
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/271991482", 
        "date": "Sep 5, 2017 1:13:56 PM", 
        "id": 271991482
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/a2f8dc1676cb2ef1594b9e0620f52f8076c85617", 
        "sha": "a2f8dc1676cb2ef1594b9e0620f52f8076c85617", 
        "branchName": "1.13.x", 
        "date": "Sep 6, 2017 6:49:01 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e8fad19bc0f42b68a4ebad817bf6b7283ceed93f", 
        "sha": "e8fad19bc0f42b68a4ebad817bf6b7283ceed93f", 
        "branchName": "1.13.x", 
        "date": "Sep 5, 2017 12:01:21 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-271991482-272568125", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 11
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_91", 
    "diff": "diff --git a/src/main/java/org/springframework/data/web/config/SpringDataWebConfiguration.java b/src/main/java/org/springframework/data/web/config/SpringDataWebConfiguration.java\nindex e739c05..fcf249c 100644\n--- a/src/main/java/org/springframework/data/web/config/SpringDataWebConfiguration.java\n+++ b/src/main/java/org/springframework/data/web/config/SpringDataWebConfiguration.java\n@@ -17,6 +17,7 @@ package org.springframework.data.web.config;\n \n import java.util.List;\n \n+import org.springframework.beans.factory.NoSuchBeanDefinitionException;\n import org.springframework.beans.factory.ObjectFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Qualifier;\n@@ -122,7 +123,10 @@ public class SpringDataWebConfiguration extends WebMvcConfigurerAdapter {\n \t\tif (ClassUtils.isPresent(\"com.jayway.jsonpath.DocumentContext\", context.getClassLoader())\n \t\t\t\t&& ClassUtils.isPresent(\"com.fasterxml.jackson.databind.ObjectMapper\", context.getClassLoader())) {\n \n-\t\t\tProjectingJackson2HttpMessageConverter converter = new ProjectingJackson2HttpMessageConverter(new ObjectMapper());\n+\t\t\tObjectMapper mapper = getUniqueBean(ObjectMapper.class, context);\n+\t\t\tmapper = mapper == null ? new ObjectMapper() : mapper;\n+\n+\t\t\tProjectingJackson2HttpMessageConverter converter = new ProjectingJackson2HttpMessageConverter(mapper);\n \t\t\tconverter.setBeanClassLoader(context.getClassLoader());\n \t\t\tconverter.setBeanFactory(context);\n \n@@ -133,4 +137,13 @@ public class SpringDataWebConfiguration extends WebMvcConfigurerAdapter {\n \t\t\tconverters.add(0, new XmlBeamHttpMessageConverter());\n \t\t}\n \t}\n+\n+\tprivate static <T> T getUniqueBean(Class<T> type, ApplicationContext context) {\n+\n+\t\ttry {\n+\t\t\treturn context.getBean(type);\n+\t\t} catch (NoSuchBeanDefinitionException o_O) {\n+\t\t\treturn null;\n+\t\t}\n+\t}\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 233, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 288401728, 
        "hostName": "spirals-bears", 
        "totalMemory": 416808960, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:00:45 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/271991482/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            4, 
            0, 
            0, 
            157
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 161
        }, 
        "testing": {
          "stepDurations": [
            52
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 52
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:54:50 PM", 
      "totalDuration": 349
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2221, 
        "numberRunning": 2224, 
        "numberFailing": 0, 
        "numberErroring": 3, 
        "failures": [
          {
            "failureName": "java.lang.IllegalStateException", 
            "isError": true, 
            "occurrences": 1
          }, 
          {
            "failureName": "java.lang.ClassCastException", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/279152312", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 3, 
          "testClass": "org.springframework.data.history.AnnotationRevisionMetadataUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 3, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.ClassCastException", 
          "testMethod": "exposesRevisionDate", 
          "testClass": "org.springframework.data.history.AnnotationRevisionMetadataUnitTests", 
          "detail": "java.time.LocalDateTime cannot be cast to java.util.Optional", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.IllegalStateException", 
          "testMethod": "exposesNoInformationOnEmptyProbe", 
          "testClass": "org.springframework.data.history.AnnotationRevisionMetadataUnitTests", 
          "detail": "Expected lazy evaluation to yield a non-null value but got null!", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.ClassCastException", 
          "testMethod": "exposesRevisionNumber", 
          "testClass": "org.springframework.data.history.AnnotationRevisionMetadataUnitTests", 
          "detail": "java.lang.Long cannot be cast to java.util.Optional", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/279418526", 
        "date": "Sep 25, 2017 10:06:44 AM", 
        "id": 279418526
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/279152312", 
        "date": "Sep 24, 2017 11:24:31 AM", 
        "id": 279152312
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/65e21344ac1e411e3aa71466e62f30230b3b46cc", 
        "sha": "65e21344ac1e411e3aa71466e62f30230b3b46cc", 
        "branchName": "master", 
        "date": "Sep 25, 2017 9:56:31 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/041c18bef9f8ec832e63e3aaa4adc81acfb88727", 
        "sha": "041c18bef9f8ec832e63e3aaa4adc81acfb88727", 
        "branchName": "master", 
        "date": "Sep 22, 2017 12:11:04 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-279152312-279418526", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 421, 
      "numberLibrariesFailingModule": 94, 
      "numberTestFiles": 259, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_92", 
    "diff": "diff --git a/src/main/java/org/springframework/data/history/AnnotationRevisionMetadata.java b/src/main/java/org/springframework/data/history/AnnotationRevisionMetadata.java\nindex a787124..ae89a77 100644\n--- a/src/main/java/org/springframework/data/history/AnnotationRevisionMetadata.java\n+++ b/src/main/java/org/springframework/data/history/AnnotationRevisionMetadata.java\n@@ -85,9 +85,9 @@ public class AnnotationRevisionMetadata<N extends Number & Comparable<N>> implem\n \n \t\treturn Lazy.of(() -> {\n \n-\t\t\tAnnotationDetectionFieldCallback numberCallback = new AnnotationDetectionFieldCallback(annotationType);\n-\t\t\tReflectionUtils.doWithFields(entity.getClass(), numberCallback);\n-\t\t\treturn numberCallback.getValue(entity);\n+\t\t\tAnnotationDetectionFieldCallback callback = new AnnotationDetectionFieldCallback(annotationType);\n+\t\t\tReflectionUtils.doWithFields(entity.getClass(), callback);\n+\t\t\treturn Optional.ofNullable(callback.getValue(entity));\n \t\t});\n \t}\n }\ndiff --git a/src/main/java/org/springframework/data/history/RevisionMetadata.java b/src/main/java/org/springframework/data/history/RevisionMetadata.java\nindex 72cebaa..7cb712f 100644\n--- a/src/main/java/org/springframework/data/history/RevisionMetadata.java\n+++ b/src/main/java/org/springframework/data/history/RevisionMetadata.java\n@@ -40,8 +40,8 @@ public interface RevisionMetadata<N extends Number & Comparable<N>> {\n \t * @throws IllegalStateException if no revision number is available.\n \t */\n \tdefault N getRequiredRevisionNumber() {\n-\t\treturn getRevisionNumber()\n-\t\t\t\t.orElseThrow(() -> new IllegalStateException(String.format(\"No revision number found on %s!\", getDelegate())));\n+\t\treturn getRevisionNumber().orElseThrow(\n+\t\t\t\t() -> new IllegalStateException(String.format(\"No revision number found on %s!\", (Object) getDelegate())));\n \t}\n \n \t/**\n@@ -58,8 +58,8 @@ public interface RevisionMetadata<N extends Number & Comparable<N>> {\n \t * @throw IllegalStateException if no revision date is available.\n \t */\n \tdefault LocalDateTime getRequiredRevisionDate() {\n-\t\treturn getRevisionDate()\n-\t\t\t\t.orElseThrow(() -> new IllegalStateException(String.format(\"No revision date found on %s!\", getDelegate())));\n+\t\treturn getRevisionDate().orElseThrow(\n+\t\t\t\t() -> new IllegalStateException(String.format(\"No revision date found on %s!\", (Object) getDelegate())));\n \t}\n \n \t/**\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 257874368, 
        "hostName": "spirals-bears", 
        "totalMemory": 422576128, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:51:17 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/279152312/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            201
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 202
        }, 
        "testing": {
          "stepDurations": [
            89
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 89
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:43:07 PM", 
      "totalDuration": 482
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2229, 
        "numberRunning": 2230, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/279460664", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpecting actual not to be null", 
          "isError": false, 
          "testMethod": "createsInstancesWithRecursionAndSameCtorArgCountCorrectly", 
          "testClass": "org.springframework.data.convert.ClassGeneratingEntityInstantiatorUnitTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 12, 
          "numberRunning": 13, 
          "testClass": "org.springframework.data.convert.ClassGeneratingEntityInstantiatorUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/280335206", 
        "date": "Sep 27, 2017 11:05:11 AM", 
        "id": 280335206
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/279460664", 
        "date": "Sep 25, 2017 12:29:44 PM", 
        "id": 279460664
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/2b4ef1a55589466c87c2f30432f504e7b00a2438", 
        "sha": "2b4ef1a55589466c87c2f30432f504e7b00a2438", 
        "branchName": "master", 
        "date": "Sep 27, 2017 10:55:34 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/cc0ab54c38e90ddfbcf4d2aa23993270cb8e56b9", 
        "sha": "cc0ab54c38e90ddfbcf4d2aa23993270cb8e56b9", 
        "branchName": "master", 
        "date": "Sep 25, 2017 12:23:35 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-279460664-280335206", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 421, 
      "numberLibrariesFailingModule": 94, 
      "numberTestFiles": 259, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 52, 
        "numberDeleted": 6
      }
    }, 
    "bugId": "Bears_93", 
    "diff": "diff --git a/src/main/java/org/springframework/data/convert/ClassGeneratingEntityInstantiator.java b/src/main/java/org/springframework/data/convert/ClassGeneratingEntityInstantiator.java\nindex 59073f2..144b3e0 100644\n--- a/src/main/java/org/springframework/data/convert/ClassGeneratingEntityInstantiator.java\n+++ b/src/main/java/org/springframework/data/convert/ClassGeneratingEntityInstantiator.java\n@@ -55,18 +55,7 @@ import org.springframework.util.ClassUtils;\n  */\n public class ClassGeneratingEntityInstantiator implements EntityInstantiator {\n \n-\tprivate static final int ARG_CACHE_SIZE = 100;\n-\n-\tprivate static final ThreadLocal<Object[][]> OBJECT_POOL = ThreadLocal.withInitial(() -> {\n-\n-\t\tObject[][] cached = new Object[ARG_CACHE_SIZE][];\n-\n-\t\tfor (int i = 0; i < ARG_CACHE_SIZE; i++) {\n-\t\t\tcached[i] = new Object[i];\n-\t\t}\n-\n-\t\treturn cached;\n-\t});\n+\tprivate static final Object[] EMPTY_ARGS = new Object[0];\n \n \tprivate final ObjectInstantiatorClassGenerator generator;\n \n@@ -170,30 +159,14 @@ public class ClassGeneratingEntityInstantiator implements EntityInstantiator {\n \t}\n \n \t/**\n-\t * Allocates an object array for instance creation. This method uses the argument array cache if possible.\n+\t * Allocates an object array for instance creation.\n \t *\n \t * @param argumentCount\n \t * @return\n \t * @since 2.0\n-\t * @see #ARG_CACHE_SIZE\n \t */\n \tstatic Object[] allocateArguments(int argumentCount) {\n-\t\treturn argumentCount < ARG_CACHE_SIZE ? OBJECT_POOL.get()[argumentCount] : new Object[argumentCount];\n-\t}\n-\n-\t/**\n-\t * Deallocates an object array used for instance creation. Parameters are cleared if the array was cached.\n-\t *\n-\t * @param argumentCount\n-\t * @return\n-\t * @since 2.0\n-\t * @see #ARG_CACHE_SIZE\n-\t */\n-\tstatic void deallocateArguments(Object[] params) {\n-\n-\t\tif (params.length != 0 && params.length < ARG_CACHE_SIZE) {\n-\t\t\tArrays.fill(params, null);\n-\t\t}\n+\t\treturn argumentCount == 0 ? EMPTY_ARGS : new Object[argumentCount];\n \t}\n \n \t/**\n@@ -250,8 +223,6 @@ public class ClassGeneratingEntityInstantiator implements EntityInstantiator {\n \t\t\t\treturn (T) instantiator.newInstance(params);\n \t\t\t} catch (Exception e) {\n \t\t\t\tthrow new MappingInstantiationException(entity, Arrays.asList(params), e);\n-\t\t\t} finally {\n-\t\t\t\tdeallocateArguments(params);\n \t\t\t}\n \t\t}\n \ndiff --git a/src/main/java/org/springframework/data/convert/KotlinClassGeneratingEntityInstantiator.java b/src/main/java/org/springframework/data/convert/KotlinClassGeneratingEntityInstantiator.java\nindex c4da91e..1bdb23a 100644\n--- a/src/main/java/org/springframework/data/convert/KotlinClassGeneratingEntityInstantiator.java\n+++ b/src/main/java/org/springframework/data/convert/KotlinClassGeneratingEntityInstantiator.java\n@@ -237,11 +237,7 @@ public class KotlinClassGeneratingEntityInstantiator extends ClassGeneratingEnti\n \t\t\t\tparams[userParameterCount + i] = defaulting[i];\n \t\t\t}\n \n-\t\t\ttry {\n-\t\t\t\treturn (T) instantiator.newInstance(params);\n-\t\t\t} finally {\n-\t\t\t\tdeallocateArguments(params);\n-\t\t\t}\n+\t\t\treturn (T) instantiator.newInstance(params);\n \t\t}\n \t}\n }\ndiff --git a/src/main/java/org/springframework/data/convert/ReflectionEntityInstantiator.java b/src/main/java/org/springframework/data/convert/ReflectionEntityInstantiator.java\nindex 6c53f0f..6fc71a6 100644\n--- a/src/main/java/org/springframework/data/convert/ReflectionEntityInstantiator.java\n+++ b/src/main/java/org/springframework/data/convert/ReflectionEntityInstantiator.java\n@@ -40,18 +40,7 @@ public enum ReflectionEntityInstantiator implements EntityInstantiator {\n \n \tINSTANCE;\n \n-\tprivate final int ARG_CACHE_SIZE = 100;\n-\n-\tprivate final ThreadLocal<Object[][]> objectPool = ThreadLocal.withInitial(() -> {\n-\n-\t\tObject[][] cached = new Object[ARG_CACHE_SIZE][];\n-\n-\t\tfor (int i = 0; i < ARG_CACHE_SIZE; i++) {\n-\t\t\tcached[i] = new Object[i];\n-\t\t}\n-\n-\t\treturn cached;\n-\t});\n+\tprivate static final Object[] EMPTY_ARGS = new Object[0];\n \n \t@SuppressWarnings(\"unchecked\")\n \tpublic <T, E extends PersistentEntity<? extends T, P>, P extends PersistentProperty<P>> T createInstance(E entity,\n@@ -80,7 +69,7 @@ public enum ReflectionEntityInstantiator implements EntityInstantiator {\n \t\t}\n \t\tint parameterCount = constructor.getConstructor().getParameterCount();\n \n-\t\tObject[] params = parameterCount < ARG_CACHE_SIZE ? objectPool.get()[parameterCount] : new Object[parameterCount];\n+\t\tObject[] params = parameterCount == 0 ? EMPTY_ARGS : new Object[parameterCount];\n \t\tint i = 0;\n \t\tfor (Parameter<?, P> parameter : constructor.getParameters()) {\n \t\t\tparams[i++] = provider.getParameterValue(parameter);\n@@ -90,8 +79,6 @@ public enum ReflectionEntityInstantiator implements EntityInstantiator {\n \t\t\treturn BeanUtils.instantiateClass(constructor.getConstructor(), params);\n \t\t} catch (BeanInstantiationException e) {\n \t\t\tthrow new MappingInstantiationException(entity, new ArrayList<>(Arrays.asList(params)), e);\n-\t\t} finally {\n-\t\t\tArrays.fill(params, null);\n \t\t}\n \t}\n }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 275989640, 
        "hostName": "spirals-bears", 
        "totalMemory": 428867584, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:45:06 PM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/279460664/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            204
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 206
        }, 
        "testing": {
          "stepDurations": [
            87
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 87
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:36:59 PM", 
      "totalDuration": 481
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2045, 
        "numberRunning": 2046, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/286617333", 
      "failingClasses": [
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "org.springframework.data.util.ParameterizedTypeInformationUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "detectsNestedGenerics", 
          "testClass": "org.springframework.data.util.ParameterizedTypeInformationUnitTests", 
          "detail": "\nExpected: is type < org.springframework.data.util.ParameterizedTypeInformationUnitTests$MyEnum\n     but: \"java.lang.Object\"", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/287128429", 
        "date": "Oct 12, 2017 6:24:57 PM", 
        "id": 287128429
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/286617333", 
        "date": "Oct 11, 2017 7:08:01 PM", 
        "id": 286617333
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/d0d0d72c980fc5b5bde949ae051b433f8daf5c9f", 
        "sha": "d0d0d72c980fc5b5bde949ae051b433f8daf5c9f", 
        "branchName": "1.13.x", 
        "date": "Oct 12, 2017 6:19:15 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/91fd1a4cafffc22530d11713044e8fdad64d8106", 
        "sha": "91fd1a4cafffc22530d11713044e8fdad64d8106", 
        "branchName": "1.13.x", 
        "date": "Oct 11, 2017 7:00:14 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-286617333-287128429", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 237, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 72, 
        "numberDeleted": 46
      }
    }, 
    "bugId": "Bears_94", 
    "diff": "diff --git a/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java b/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\nindex 88a8a2f..798de32 100644\n--- a/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\n+++ b/src/main/java/org/springframework/data/util/ParameterizedTypeInformation.java\n@@ -52,35 +52,6 @@ class ParameterizedTypeInformation<T> extends ParentTypeAwareTypeInformation<T>\n \t\tthis.type = type;\n \t}\n \n-\t/**\n-\t * Resolves the type variables to be used. Uses the parent's type variable map but overwrites variables locally\n-\t * declared.\n-\t * \n-\t * @param type must not be {@literal null}.\n-\t * @param resolvedType must not be {@literal null}.\n-\t * @param parent must not be {@literal null}.\n-\t * @return\n-\t */\n-\tprivate static Map<TypeVariable<?>, Type> calculateTypeVariables(ParameterizedType type, Class<?> resolvedType,\n-\t\t\tTypeDiscoverer<?> parent) {\n-\n-\t\tTypeVariable<?>[] typeParameters = resolvedType.getTypeParameters();\n-\t\tType[] arguments = type.getActualTypeArguments();\n-\n-\t\tMap<TypeVariable<?>, Type> localTypeVariables = new HashMap<TypeVariable<?>, Type>(parent.getTypeVariableMap());\n-\n-\t\tfor (int i = 0; i < typeParameters.length; i++) {\n-\n-\t\t\tType value = arguments[i];\n-\n-\t\t\tif (!(value instanceof TypeVariable)) {\n-\t\t\t\tlocalTypeVariables.put(typeParameters[i], value);\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn localTypeVariables;\n-\t}\n-\n \t/*\n \t * (non-Javadoc)\n \t * @see org.springframework.data.util.TypeDiscoverer#doGetMapValueType()\n@@ -268,4 +239,47 @@ class ParameterizedTypeInformation<T> extends ParentTypeAwareTypeInformation<T>\n \t\tthis.resolved = resolved;\n \t\treturn resolved;\n \t}\n+\n+\t/**\n+\t * Resolves the type variables to be used. Uses the parent's type variable map but overwrites variables locally\n+\t * declared.\n+\t * \n+\t * @param type must not be {@literal null}.\n+\t * @param resolvedType must not be {@literal null}.\n+\t * @param parent must not be {@literal null}.\n+\t * @return will never be {@literal null}.\n+\t */\n+\tprivate static Map<TypeVariable<?>, Type> calculateTypeVariables(ParameterizedType type, Class<?> resolvedType,\n+\t\t\tTypeDiscoverer<?> parent) {\n+\n+\t\tTypeVariable<?>[] typeParameters = resolvedType.getTypeParameters();\n+\t\tType[] arguments = type.getActualTypeArguments();\n+\n+\t\tMap<TypeVariable<?>, Type> localTypeVariables = new HashMap<TypeVariable<?>, Type>(parent.getTypeVariableMap());\n+\n+\t\tfor (int i = 0; i < typeParameters.length; i++) {\n+\t\t\tlocalTypeVariables.put(typeParameters[i], flattenTypeVariable(arguments[i], localTypeVariables));\n+\t\t}\n+\n+\t\treturn localTypeVariables;\n+\t}\n+\n+\t/**\n+\t * Recursively resolves the type bound to the given {@link Type} in case it's a {@link TypeVariable} and there's an\n+\t * entry in the given type variables.\n+\t * \n+\t * @param source must not be {@literal null}.\n+\t * @param variables must not be {@literal null}.\n+\t * @return will never be {@literal null}.\n+\t */\n+\tprivate static Type flattenTypeVariable(Type source, Map<TypeVariable<?>, Type> variables) {\n+\n+\t\tif (!(source instanceof TypeVariable)) {\n+\t\t\treturn source;\n+\t\t}\n+\n+\t\tType value = variables.get(source);\n+\n+\t\treturn value == null ? source : flattenTypeVariable(value, variables);\n+\t}\n }\ndiff --git a/src/main/java/org/springframework/data/util/TypeDiscoverer.java b/src/main/java/org/springframework/data/util/TypeDiscoverer.java\nindex f131ce2..b096ff8 100644\n--- a/src/main/java/org/springframework/data/util/TypeDiscoverer.java\n+++ b/src/main/java/org/springframework/data/util/TypeDiscoverer.java\n@@ -134,7 +134,7 @@ class TypeDiscoverer<S> implements TypeInformation<S> {\n \n \t\tif (fieldType instanceof TypeVariable) {\n \t\t\tTypeVariable<?> variable = (TypeVariable<?>) fieldType;\n-\t\t\treturn new TypeVariableTypeInformation(variable, type, this);\n+\t\t\treturn new TypeVariableTypeInformation(variable, this);\n \t\t}\n \n \t\tif (fieldType instanceof GenericArrayType) {\ndiff --git a/src/main/java/org/springframework/data/util/TypeVariableTypeInformation.java b/src/main/java/org/springframework/data/util/TypeVariableTypeInformation.java\nindex 1314cc4..cc3db7a 100644\n--- a/src/main/java/org/springframework/data/util/TypeVariableTypeInformation.java\n+++ b/src/main/java/org/springframework/data/util/TypeVariableTypeInformation.java\n@@ -17,7 +17,6 @@ package org.springframework.data.util;\n \n import static org.springframework.util.ObjectUtils.*;\n \n-import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Type;\n import java.lang.reflect.TypeVariable;\n \n@@ -32,61 +31,22 @@ import org.springframework.util.Assert;\n class TypeVariableTypeInformation<T> extends ParentTypeAwareTypeInformation<T> {\n \n \tprivate final TypeVariable<?> variable;\n-\tprivate final Type owningType;\n \n \t/**\n-\t * Creates a bew {@link TypeVariableTypeInformation} for the given {@link TypeVariable} owning {@link Type} and parent\n+\t * Creates a new {@link TypeVariableTypeInformation} for the given {@link TypeVariable} owning {@link Type} and parent\n \t * {@link TypeDiscoverer}.\n \t * \n \t * @param variable must not be {@literal null}\n \t * @param owningType must not be {@literal null}\n \t * @param parent must not be {@literal null}.\n \t */\n-\tpublic TypeVariableTypeInformation(TypeVariable<?> variable, Type owningType, TypeDiscoverer<?> parent) {\n+\tpublic TypeVariableTypeInformation(TypeVariable<?> variable, TypeDiscoverer<?> parent) {\n \n \t\tsuper(variable, parent);\n \n \t\tAssert.notNull(variable, \"TypeVariable must not be null!\");\n \n \t\tthis.variable = variable;\n-\t\tthis.owningType = owningType;\n-\t}\n-\n-\t/*\n-\t * (non-Javadoc)\n-\t * @see org.springframework.data.util.TypeDiscoverer#getType()\n-\t */\n-\t@Override\n-\tpublic Class<T> getType() {\n-\n-\t\tint index = getIndex(variable);\n-\n-\t\tif (owningType instanceof ParameterizedType && index != -1) {\n-\t\t\tType fieldType = ((ParameterizedType) owningType).getActualTypeArguments()[index];\n-\t\t\treturn resolveType(fieldType);\n-\t\t}\n-\n-\t\treturn resolveType(variable);\n-\t}\n-\n-\t/**\n-\t * Returns the index of the type parameter binding the given {@link TypeVariable}.\n-\t * \n-\t * @param variable\n-\t * @return\n-\t */\n-\tprivate int getIndex(TypeVariable<?> variable) {\n-\n-\t\tClass<?> rawType = resolveType(owningType);\n-\t\tTypeVariable<?>[] typeParameters = rawType.getTypeParameters();\n-\n-\t\tfor (int i = 0; i < typeParameters.length; i++) {\n-\t\t\tif (variable.equals(typeParameters[i])) {\n-\t\t\t\treturn i;\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn -1;\n \t}\n \n \t/*\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 303869256, 
        "hostName": "spirals-bears", 
        "totalMemory": 501219328, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 1:09:04 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/286617333/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            156
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 158
        }, 
        "testing": {
          "stepDurations": [
            52
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 52
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 1:03:10 AM", 
      "totalDuration": 348
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2310, 
        "numberRunning": 2316, 
        "numberFailing": 2, 
        "numberErroring": 4, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 3
          }, 
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }, 
          {
            "failureName": "java.lang.Exception", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/289903133", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "shouldUseClassPropertyAccessorFactory[Class in default package]", 
          "isError": true, 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpecting:\n  <java.lang.NullPointerException>\nto be an instance of:\n  <java.lang.UnsupportedOperationException>\nbut was:\n  <\"java.lang.NullPointerException\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.isTypeInjectable(ClassGeneratingPropertyAccessorFactory.java:136)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.isSupported(ClassGeneratingPropertyAccessorFactory.java:122)\n at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:397)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:227)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:172)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:85)\n at org.springframework.data.mapping.context.MappingContext.getRequiredPersistentEntity(MappingContext.java:70)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.getPersistentPropertyAccessor(ClassGeneratingPropertyAccessorFactoryTests.java:167)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.lambda$null$3(ClassGeneratingPropertyAccessorFactoryTests.java:153)\n at org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:60)\n at org.assertj.core.api.ThrowableTypeAssert.isThrownBy(ThrowableTypeAssert.java:54)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.lambda$setPropertyShouldFailOnUnhandledProperty$4(ClassGeneratingPropertyAccessorFactoryTests.java:153)\n at org.assertj.core.api.AbstractAssert.satisfies(AbstractAssert.java:639)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.setPropertyShouldFailOnUnhandledProperty(ClassGeneratingPropertyAccessorFactoryTests.java:152)\n at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\">", 
          "isError": false, 
          "testMethod": "setPropertyShouldFailOnUnhandledProperty[Class in default package]", 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }, 
        {
          "failureName": "java.lang.Exception", 
          "detail": "Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.NullPointerException>", 
          "isError": true, 
          "testMethod": "shouldFailOnNullBean[Class in default package]", 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "accessorShouldDeclareConstructor[Class in default package]", 
          "isError": true, 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "shouldSupportGeneratedPropertyAccessors[Class in default package]", 
          "isError": true, 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpecting:\n  <java.lang.NullPointerException>\nto be an instance of:\n  <java.lang.UnsupportedOperationException>\nbut was:\n  <\"java.lang.NullPointerException\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.isTypeInjectable(ClassGeneratingPropertyAccessorFactory.java:136)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory.isSupported(ClassGeneratingPropertyAccessorFactory.java:122)\n at org.springframework.data.mapping.context.AbstractMappingContext.addPersistentEntity(AbstractMappingContext.java:397)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:227)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:172)\n at org.springframework.data.mapping.context.AbstractMappingContext.getPersistentEntity(AbstractMappingContext.java:85)\n at org.springframework.data.mapping.context.MappingContext.getRequiredPersistentEntity(MappingContext.java:70)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.getPersistentPropertyAccessor(ClassGeneratingPropertyAccessorFactoryTests.java:167)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.lambda$null$1(ClassGeneratingPropertyAccessorFactoryTests.java:145)\n at org.assertj.core.api.ThrowableAssert.catchThrowable(ThrowableAssert.java:60)\n at org.assertj.core.api.ThrowableTypeAssert.isThrownBy(ThrowableTypeAssert.java:54)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.lambda$getPropertyShouldFailOnUnhandledProperty$2(ClassGeneratingPropertyAccessorFactoryTests.java:145)\n at org.assertj.core.api.AbstractAssert.satisfies(AbstractAssert.java:639)\n at org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests.getPropertyShouldFailOnUnhandledProperty(ClassGeneratingPropertyAccessorFactoryTests.java:144)\n at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.junit.runners.Suite.runChild(Suite.java:128)\n at org.junit.runners.Suite.runChild(Suite.java:27)\n at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n\">", 
          "isError": false, 
          "testMethod": "getPropertyShouldFailOnUnhandledProperty[Class in default package]", 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 504, 
          "numberRunning": 510, 
          "testClass": "org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactoryTests", 
          "numberFailing": 2, 
          "numberErroring": 4, 
          "numberSkipping": 1
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/292475109", 
        "date": "Oct 25, 2017 9:16:22 AM", 
        "id": 292475109
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/289903133", 
        "date": "Oct 19, 2017 12:24:52 PM", 
        "id": 289903133
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/edd8c5b8a337cec89e1c16a1e0d4f06825fffa73", 
        "sha": "edd8c5b8a337cec89e1c16a1e0d4f06825fffa73", 
        "branchName": "2.0.x", 
        "date": "Oct 25, 2017 9:10:15 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/26da224081795d6f75144af755c12fd93fdba1bf", 
        "sha": "26da224081795d6f75144af755c12fd93fdba1bf", 
        "branchName": "2.0.x", 
        "date": "Oct 19, 2017 12:15:13 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-289903133-292475109", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_95", 
    "diff": "diff --git a/src/main/java/org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory.java b/src/main/java/org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory.java\nindex 658142a..e55fd89 100644\n--- a/src/main/java/org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory.java\n+++ b/src/main/java/org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory.java\n@@ -133,7 +133,10 @@ public class ClassGeneratingPropertyAccessorFactory implements PersistentPropert\n \t}\n \n \tprivate static boolean isTypeInjectable(PersistentEntity<?, ?> entity) {\n-\t\treturn entity.getType().getClassLoader() != null && !entity.getType().getPackage().getName().startsWith(\"java\");\n+\n+\t\tClass<?> type = entity.getType();\n+\t\treturn type.getClassLoader() != null\n+\t\t\t\t&& (type.getPackage() == null || !type.getPackage().getName().startsWith(\"java\"));\n \t}\n \n \tprivate boolean hasUniquePropertyHashCodes(PersistentEntity<?, ?> entity) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 421, 
      "numberLibrariesFailingModule": 94, 
      "numberTestFiles": 263, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 255496896, 
        "hostName": "spirals-bears", 
        "totalMemory": 465043456, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 1:02:40 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/289903133/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            3, 
            0, 
            0, 
            209
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 212
        }, 
        "testing": {
          "stepDurations": [
            90
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 90
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:54:18 AM", 
      "totalDuration": 494
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2126, 
        "numberRunning": 2127, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 3
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/303079759", 
      "failingClasses": [
        {
          "numberPassing": 7, 
          "numberRunning": 8, 
          "testClass": "org.springframework.data.repository.support.RepositoriesUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "exposesRepositoryForProxyType", 
          "testClass": "org.springframework.data.repository.support.RepositoriesUnitTests", 
          "detail": "\nExpected: is <true>\n     but: was <false>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/303439729", 
        "date": "Nov 17, 2017 10:27:02 AM", 
        "id": 303439729
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/303079759", 
        "date": "Nov 16, 2017 4:42:42 PM", 
        "id": 303079759
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/e79d70cb13ec44d068da223fdffa387ab0e1ba7f", 
        "sha": "e79d70cb13ec44d068da223fdffa387ab0e1ba7f", 
        "branchName": "1.13.x", 
        "date": "Nov 17, 2017 10:16:59 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/6199fed1c13d228f8a6c8c479f6273f869261f96", 
        "sha": "6199fed1c13d228f8a6c8c479f6273f869261f96", 
        "branchName": "1.13.x", 
        "date": "Nov 16, 2017 4:34:31 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-303079759-303439729", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 379, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 237, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_96", 
    "diff": "diff --git a/src/main/java/org/springframework/data/repository/support/Repositories.java b/src/main/java/org/springframework/data/repository/support/Repositories.java\nindex 4269212..63398ab 100644\n--- a/src/main/java/org/springframework/data/repository/support/Repositories.java\n+++ b/src/main/java/org/springframework/data/repository/support/Repositories.java\n@@ -121,7 +121,9 @@ public class Repositories implements Iterable<Class<?>> {\n \n \t\tAssert.notNull(domainClass, DOMAIN_TYPE_MUST_NOT_BE_NULL);\n \n-\t\treturn repositoryFactoryInfos.containsKey(domainClass);\n+\t\tClass<?> userClass = ClassUtils.getUserClass(domainClass);\n+\n+\t\treturn repositoryFactoryInfos.containsKey(userClass);\n \t}\n \n \t/**\n@@ -134,7 +136,9 @@ public class Repositories implements Iterable<Class<?>> {\n \n \t\tAssert.notNull(domainClass, DOMAIN_TYPE_MUST_NOT_BE_NULL);\n \n-\t\tString repositoryBeanName = repositoryBeanNames.get(domainClass);\n+\t\tClass<?> userClass = ClassUtils.getUserClass(domainClass);\n+\t\tString repositoryBeanName = repositoryBeanNames.get(userClass);\n+\n \t\treturn repositoryBeanName == null || beanFactory == null ? null : beanFactory.getBean(repositoryBeanName);\n \t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 277828384, 
        "hostName": "spirals-bears", 
        "totalMemory": 416284672, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:49:27 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/303079759/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            3, 
            0, 
            0, 
            156
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 159
        }, 
        "testing": {
          "stepDurations": [
            53
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 53
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:43:27 AM", 
      "totalDuration": 355
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2127, 
        "numberRunning": 2128, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 3
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-commons/323136560", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is <2L>\n     but: was <1L>", 
          "isError": false, 
          "testMethod": "createsPaginationLinksForOneIndexedArgumentResolverCorrectly", 
          "testClass": "org.springframework.data.web.PagedResourcesAssemblerUnitTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 18, 
          "numberRunning": 19, 
          "testClass": "org.springframework.data.web.PagedResourcesAssemblerUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/323139345", 
        "date": "Dec 30, 2017 12:21:12 PM", 
        "id": 323139345
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-commons/builds/323136560", 
        "date": "Dec 30, 2017 12:02:13 PM", 
        "id": 323136560
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-commons", 
      "url": "https://github.com/spring-projects/spring-data-commons", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072614
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/7c0ec77e40c9c5861fd36d3e5f2f6954a2208d46", 
        "sha": "7c0ec77e40c9c5861fd36d3e5f2f6954a2208d46", 
        "branchName": "1.13.x", 
        "date": "Dec 30, 2017 12:12:59 PM", 
        "repoName": "spring-projects/spring-data-commons"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-commons/commit/9a5cd29e3c162b80351fc39c233e2c4b15d00a23", 
        "sha": "9a5cd29e3c162b80351fc39c233e2c4b15d00a23", 
        "branchName": "1.13.x", 
        "date": "Dec 30, 2017 11:39:05 AM", 
        "repoName": "spring-projects/spring-data-commons"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-commons-323136560-323139345", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_97", 
    "diff": "diff --git a/src/main/java/org/springframework/data/web/PagedResourcesAssembler.java b/src/main/java/org/springframework/data/web/PagedResourcesAssembler.java\nindex b61e9ac..6979a4f 100644\n--- a/src/main/java/org/springframework/data/web/PagedResourcesAssembler.java\n+++ b/src/main/java/org/springframework/data/web/PagedResourcesAssembler.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013-2015 the original author or authors.\n+ * Copyright 2013-2017 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -45,6 +45,7 @@ import org.springframework.web.util.UriComponentsBuilder;\n  * @since 1.6\n  * @author Oliver Gierke\n  * @author Nick Williams\n+ * @author Marcel Overdijk\n  */\n public class PagedResourcesAssembler<T> implements ResourceAssembler<Page<T>, PagedResources<Resource<T>>> {\n \n@@ -285,10 +286,13 @@ public class PagedResourcesAssembler<T> implements ResourceAssembler<Page<T>, Pa\n \t * @param page must not be {@literal null}.\n \t * @return\n \t */\n-\tprivate static <T> PageMetadata asPageMetadata(Page<T> page) {\n+\tprivate PageMetadata asPageMetadata(Page<?> page) {\n \n \t\tAssert.notNull(page, \"Page must not be null!\");\n-\t\treturn new PageMetadata(page.getSize(), page.getNumber(), page.getTotalElements(), page.getTotalPages());\n+\n+\t\tint number = pageableResolver.isOneIndexedParameters() ? page.getNumber() + 1 : page.getNumber();\n+\n+\t\treturn new PageMetadata(page.getSize(), number, page.getTotalElements(), page.getTotalPages());\n \t}\n \n \tprivate static class SimplePagedResourceAssembler<T> implements ResourceAssembler<T, Resource<T>> {\n", 
    "projectMetrics": {
      "numberSourceFiles": 380, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 237, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 272172816, 
        "hostName": "spirals-bears", 
        "totalMemory": 412090368, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:41:00 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-commons/323136560/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            3, 
            0, 
            0, 
            159
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 162
        }, 
        "testing": {
          "stepDurations": [
            55
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 55
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:34:58 AM", 
      "totalDuration": 355
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 222, 
        "numberRunning": 223, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/traccar/traccar/188473748", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest", 
          "detail": "For input string: \"3.75\"", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/188474474", 
        "date": "Jan 3, 2017 10:49:06 AM", 
        "id": 188474474
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/188473748", 
        "date": "Jan 3, 2017 10:47:50 AM", 
        "id": 188473748
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/7bd6551a2f5712d63bea7e8711944fbeb78323c8", 
        "sha": "7bd6551a2f5712d63bea7e8711944fbeb78323c8", 
        "branchName": "master", 
        "date": "Jan 3, 2017 10:47:33 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e512848dc07145664f3c5d0adff7a9f88b2f17b6", 
        "sha": "e512848dc07145664f3c5d0adff7a9f88b2f17b6", 
        "branchName": "master", 
        "date": "Jan 3, 2017 10:44:00 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-188473748-188474474", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 478, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 199, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_98", 
    "diff": "diff --git a/src/org/traccar/protocol/GoSafeProtocolDecoder.java b/src/org/traccar/protocol/GoSafeProtocolDecoder.java\nindex deeea23..94d12e9 100644\n--- a/src/org/traccar/protocol/GoSafeProtocolDecoder.java\n+++ b/src/org/traccar/protocol/GoSafeProtocolDecoder.java\n@@ -156,7 +156,7 @@ public class GoSafeProtocolDecoder extends BaseProtocolDecoder {\n \n         position.set(Position.KEY_HDOP, parser.next());\n \n-        if (parser.hasNext(4)) {\n+        if (parser.hasNext(5)) {\n             position.setNetwork(new Network(CellTower.from(\n                     parser.nextInt(), parser.nextInt(), parser.nextInt(16), parser.nextInt(16), parser.nextInt())));\n         }\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 127876536, 
        "hostName": "local", 
        "totalMemory": 261095424, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 1:57:32 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/188473748/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            111
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 111
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 1:54:19 PM", 
      "totalDuration": 187
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 224, 
        "numberRunning": 225, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/traccar/traccar/190843415", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<BigEndianHeapChannelBuffer(ridx=0, widx=32, cap=32)> but was:<null>", 
          "isError": false, 
          "testMethod": "testDecodeAlternative", 
          "testClass": "org.traccar.protocol.H02FrameDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "org.traccar.protocol.H02FrameDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/191103948", 
        "date": "Jan 11, 2017 10:09:53 PM", 
        "id": 191103948
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/190843415", 
        "date": "Jan 11, 2017 5:29:01 AM", 
        "id": 190843415
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/e54122e22725bae7a962d58e06a497526aed46cb", 
        "sha": "e54122e22725bae7a962d58e06a497526aed46cb", 
        "branchName": "master", 
        "date": "Jan 11, 2017 1:07:56 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/afa6bfcef49c7152b3292010f43075356b9c9727", 
        "sha": "afa6bfcef49c7152b3292010f43075356b9c9727", 
        "branchName": "master", 
        "date": "Jan 11, 2017 5:27:39 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-190843415-191103948", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 11
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_99", 
    "diff": "diff --git a/src/org/traccar/protocol/H02FrameDecoder.java b/src/org/traccar/protocol/H02FrameDecoder.java\nindex a22252a..b2da648 100644\n--- a/src/org/traccar/protocol/H02FrameDecoder.java\n+++ b/src/org/traccar/protocol/H02FrameDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013 - 2016 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2013 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -37,7 +37,7 @@ public class H02FrameDecoder extends FrameDecoder {\n \n         char marker = (char) buf.getByte(buf.readerIndex());\n \n-        while (marker != '*' && marker != '$' && buf.readableBytes() > 0) {\n+        while (marker != '*' && marker != '$' && marker != 'X' && buf.readableBytes() > 0) {\n             buf.skipBytes(1);\n             if (buf.readableBytes() > 0) {\n                 marker = (char) buf.getByte(buf.readerIndex());\n@@ -66,6 +66,12 @@ public class H02FrameDecoder extends FrameDecoder {\n                 return buf.readBytes(messageLength);\n             }\n \n+        } else if (marker == 'X') {\n+\n+            if (buf.readableBytes() >= MESSAGE_SHORT) {\n+                return buf.readBytes(MESSAGE_SHORT);\n+            }\n+\n         }\n \n         return null;\ndiff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex 431dd5c..c2a3b2b 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -305,8 +305,6 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n         ChannelBuffer buf = (ChannelBuffer) msg;\n         String marker = buf.toString(0, 1, StandardCharsets.US_ASCII);\n \n-        // handle X mode?\n-\n         if (marker.equals(\"*\")) {\n             String sentence = buf.toString(StandardCharsets.US_ASCII);\n             if (sentence.contains(\",NBR,\")) {\n@@ -316,6 +314,8 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             }\n         } else if (marker.equals(\"$\")) {\n             return decodeBinary(buf, channel, remoteAddress);\n+        } else if (marker.equals(\"X\")) {\n+            return null; // X mode\n         }\n \n         return null;\n", 
    "projectMetrics": {
      "numberSourceFiles": 480, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 200, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 178062720, 
        "hostName": "local", 
        "totalMemory": 287309824, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 6:04:39 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/190843415/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            101
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 101
        }, 
        "testing": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 6:01:54 PM", 
      "totalDuration": 159
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 225, 
        "numberRunning": 226, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/traccar/traccar/195128524", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.events.IgnitionEventHandlerTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testIgnitionEventHandler", 
          "testClass": "org.traccar.events.IgnitionEventHandlerTest", 
          "detail": "expected:<[org.traccar.model.Event@6b2ea799]> but was:<null>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/195455832", 
        "date": "Jan 26, 2017 9:21:07 AM", 
        "id": 195455832
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/195128524", 
        "date": "Jan 25, 2017 11:35:26 AM", 
        "id": 195128524
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/3155b8697a9b3f8023e085a766a439eee4c058db", 
        "sha": "3155b8697a9b3f8023e085a766a439eee4c058db", 
        "branchName": "master", 
        "date": "Jan 26, 2017 9:19:55 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b1453ebd231009e9d9078377f2a1e063d852c444", 
        "sha": "b1453ebd231009e9d9078377f2a1e063d852c444", 
        "branchName": "master", 
        "date": "Jan 25, 2017 11:32:21 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-195128524-195455832", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 485, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 202, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 15, 
        "numberDeleted": 10
      }
    }, 
    "bugId": "Bears_100", 
    "diff": "diff --git a/src/org/traccar/events/IgnitionEventHandler.java b/src/org/traccar/events/IgnitionEventHandler.java\nindex 8464c3a..187b7ce 100644\n--- a/src/org/traccar/events/IgnitionEventHandler.java\n+++ b/src/org/traccar/events/IgnitionEventHandler.java\n@@ -39,20 +39,21 @@ public class IgnitionEventHandler extends BaseEventHandler {\n \n         Collection<Event> result = null;\n \n-        boolean ignition = position.getBoolean(Position.KEY_IGNITION);\n-\n-        boolean oldIgnition = false;\n-        Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());\n-        if (lastPosition != null) {\n-            oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);\n-        }\n-\n-        if (ignition && !oldIgnition) {\n-            result = Collections.singleton(\n-                    new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));\n-        } else if (!ignition && oldIgnition) {\n-            result = Collections.singleton(\n-                    new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));\n+        if (position.getAttributes().containsKey(Position.KEY_IGNITION)) {\n+            boolean ignition = position.getBoolean(Position.KEY_IGNITION);\n+\n+            Position lastPosition = Context.getIdentityManager().getLastPosition(position.getDeviceId());\n+            if (lastPosition != null && lastPosition.getAttributes().containsKey(Position.KEY_IGNITION)) {\n+                boolean oldIgnition = lastPosition.getBoolean(Position.KEY_IGNITION);\n+\n+                if (ignition && !oldIgnition) {\n+                    result = Collections.singleton(\n+                            new Event(Event.TYPE_IGNITION_ON, position.getDeviceId(), position.getId()));\n+                } else if (!ignition && oldIgnition) {\n+                    result = Collections.singleton(\n+                            new Event(Event.TYPE_IGNITION_OFF, position.getDeviceId(), position.getId()));\n+                }\n+            }\n         }\n         return result;\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 152852096, 
        "hostName": "local", 
        "totalMemory": 360185856, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:57:56 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/195128524/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            98
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 98
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:54:56 PM", 
      "totalDuration": 174
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 226, 
        "numberRunning": 227, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/traccar/traccar/198464113", 
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException", 
          "detail": "No group 5", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gl200ProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/198488474", 
        "date": "Feb 5, 2017 6:47:46 AM", 
        "id": 198488474
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/198464113", 
        "date": "Feb 5, 2017 3:07:28 AM", 
        "id": 198464113
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1909b845a8c77a2463c0ad8d4c1952b8c0852ae2", 
        "sha": "1909b845a8c77a2463c0ad8d4c1952b8c0852ae2", 
        "branchName": "master", 
        "date": "Feb 5, 2017 6:46:26 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/4e37ce80b615e126f82e567d06a60beff8c82fb0", 
        "sha": "4e37ce80b615e126f82e567d06a60beff8c82fb0", 
        "branchName": "master", 
        "date": "Feb 5, 2017 3:05:52 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-198464113-198488474", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 13, 
        "numberDeleted": 14
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_101", 
    "diff": "diff --git a/src/org/traccar/protocol/Gl200ProtocolDecoder.java b/src/org/traccar/protocol/Gl200ProtocolDecoder.java\nindex 60addcd..ab65071 100644\n--- a/src/org/traccar/protocol/Gl200ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200ProtocolDecoder.java\n@@ -32,6 +32,7 @@ import org.traccar.model.WifiAccessPoint;\n import java.net.SocketAddress;\n import java.util.LinkedList;\n import java.util.List;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n@@ -237,11 +238,13 @@ public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d{15}|x{14}),\")            // imei\n             .expression(\"[^,]*,\")                // device name\n             .number(\"(d+),\")                     // count\n-            .groupBegin()\n-            .number(\"(x{12}),\")                  // bssid\n-            .number(\"(-?d+),,,,\")                // rssi\n-            .groupEnd(\"+\")\n-            .any()\n+            .number(\"((?:x{12},-?d+,,,,)+),,,,\") // wifi\n+            .number(\"(d{1,3}),\")                 // battery\n+            .number(\"(dddd)(dd)(dd)\")            // date\n+            .number(\"(dd)(dd)(dd)\").optional(2)  // time\n+            .text(\",\")\n+            .number(\"(xxxx)\")                    // count number\n+            .text(\"$\").optional()\n             .compile();\n \n     private static final Pattern PATTERN = new PatternBuilder()\n@@ -620,12 +623,18 @@ public class Gl200ProtocolDecoder extends BaseProtocolDecoder {\n \n         Network network = new Network();\n \n-        int count = parser.nextInt();\n-        for (int i = 0; i < count; i++) {\n-            String mac = parser.next().replaceAll(\"(..)\", \"$1:\");\n-            network.addWifiAccessPoint(WifiAccessPoint.from(mac.substring(0, mac.length() - 1), parser.nextInt()));\n+        parser.nextInt(); // count\n+        Matcher matcher = Pattern.compile(\"([0-9a-fA-F]{12}),(-?\\\\d+),,,,\").matcher(parser.next());\n+        while (matcher.find()) {\n+            String mac = matcher.group(1).replaceAll(\"(..)\", \"$1:\");\n+            network.addWifiAccessPoint(WifiAccessPoint.from(\n+                    mac.substring(0, mac.length() - 1), Integer.parseInt(matcher.group(2))));\n         }\n \n+        position.setNetwork(network);\n+\n+        position.set(Position.KEY_BATTERY, parser.nextInt());\n+\n         return position;\n     }\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 487, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 203, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 182261232, 
        "hostName": "local", 
        "totalMemory": 258998272, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:34:22 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/198464113/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            95
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 95
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:31:36 AM", 
      "totalDuration": 160
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 229, 
        "numberRunning": 230, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/traccar/traccar/201008628", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest", 
          "detail": "Readable byte limit exceeded: 339", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/201013389", 
        "date": "Feb 13, 2017 4:46:40 AM", 
        "id": 201013389
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/201008628", 
        "date": "Feb 13, 2017 4:11:10 AM", 
        "id": 201008628
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/621576edf95c0d3af1919113e62ac1e9245efa88", 
        "sha": "621576edf95c0d3af1919113e62ac1e9245efa88", 
        "branchName": "master", 
        "date": "Feb 13, 2017 4:45:12 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/582d431cd4a01bf2a6f826f32f2b93c17fd00a7b", 
        "sha": "582d431cd4a01bf2a6f826f32f2b93c17fd00a7b", 
        "branchName": "master", 
        "date": "Feb 12, 2017 8:09:03 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-201008628-201013389", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 489, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 205, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_102", 
    "diff": "diff --git a/src/org/traccar/protocol/TeltonikaProtocolDecoder.java b/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\nindex fc7a8fd..4d4d68e 100644\n--- a/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TeltonikaProtocolDecoder.java\n@@ -82,12 +82,6 @@ public class TeltonikaProtocolDecoder extends BaseProtocolDecoder {\n             case 9:\n                 position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n                 break;\n-            case 21:\n-                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n-                break;\n-            case 22:\n-                position.set(\"profile\", buf.readUnsignedByte());\n-                break;\n             case 66:\n                 position.set(Position.KEY_POWER, buf.readUnsignedShort() + \"mV\");\n                 break;\n@@ -95,7 +89,7 @@ public class TeltonikaProtocolDecoder extends BaseProtocolDecoder {\n                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() + \"mV\");\n                 break;\n             case 70:\n-                position.set(\"pcbTemp\", buf.readInt() * 0.1);\n+                position.set(\"pcbTemp\", (length == 4 ? buf.readInt() : buf.readShort()) * 0.1);\n                 break;\n             case 72:\n                 position.set(Position.PREFIX_TEMP + 1, buf.readInt() * 0.1);\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 194524960, 
        "hostName": "local", 
        "totalMemory": 245891072, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:30:33 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/201008628/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            91
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 91
        }, 
        "testing": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:28:06 AM", 
      "totalDuration": 143
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 227, 
        "numberRunning": 230, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/207561899", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": false
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/207563891", 
        "date": "Mar 4, 2017 1:30:36 AM", 
        "id": 207563891
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/207561899", 
        "date": "Mar 4, 2017 1:29:02 AM", 
        "id": 207561899
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1423209d00804948110e1b70c2e41248b4945877", 
        "sha": "1423209d00804948110e1b70c2e41248b4945877", 
        "branchName": "master", 
        "date": "Mar 4, 2017 1:28:03 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b29929c4c8f78f665dd1614e43ee108c6eeeaa89", 
        "sha": "b29929c4c8f78f665dd1614e43ee108c6eeeaa89", 
        "branchName": "master", 
        "date": "Mar 4, 2017 1:18:16 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-207561899-207563891", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_103", 
    "diff": "diff --git a/src/org/traccar/protocol/AquilaProtocolDecoder.java b/src/org/traccar/protocol/AquilaProtocolDecoder.java\nindex e1cebd2..11ab15c 100644\n--- a/src/org/traccar/protocol/AquilaProtocolDecoder.java\n+++ b/src/org/traccar/protocol/AquilaProtocolDecoder.java\n@@ -132,7 +132,7 @@ public class AquilaProtocolDecoder extends BaseProtocolDecoder {\n \n         position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble()));\n \n-        position.set(Position.KEY_ODOMETER, parser.next());\n+        position.set(Position.KEY_ODOMETER, parser.nextInt());\n \n         if (parser.hasNext(9)) {\n \ndiff --git a/src/org/traccar/protocol/MeitrackProtocolDecoder.java b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\nindex 4862b49..f525356 100644\n--- a/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n+++ b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n@@ -124,7 +124,7 @@ public class MeitrackProtocolDecoder extends BaseProtocolDecoder {\n \n         position.setAltitude(parser.nextDouble());\n \n-        position.set(Position.KEY_ODOMETER, parser.next());\n+        position.set(Position.KEY_ODOMETER, parser.nextInt());\n         position.set(\"runtime\", parser.next());\n \n         position.setNetwork(new Network(\ndiff --git a/src/org/traccar/protocol/TotemProtocolDecoder.java b/src/org/traccar/protocol/TotemProtocolDecoder.java\nindex 6a4b205..f36ef81 100644\n--- a/src/org/traccar/protocol/TotemProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TotemProtocolDecoder.java\n@@ -290,7 +290,7 @@ public class TotemProtocolDecoder extends BaseProtocolDecoder {\n             position.setCourse(parser.nextDouble());\n             position.setSpeed(parser.nextDouble());\n             position.set(\"pdop\", parser.next());\n-            position.set(Position.KEY_ODOMETER, parser.next());\n+            position.set(Position.KEY_ODOMETER, parser.nextInt() * 1000);\n \n             position.setLatitude(parser.nextCoordinate());\n             position.setLongitude(parser.nextCoordinate());\n", 
    "projectMetrics": {
      "numberSourceFiles": 498, 
      "numberLibrariesFailingModule": 84, 
      "numberTestFiles": 207, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 187292416, 
        "hostName": "local", 
        "totalMemory": 257949696, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 5:07:33 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/207561899/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            102
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 102
        }, 
        "testing": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 5:04:36 AM", 
      "totalDuration": 171
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/212058933", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest", 
          "detail": "For input string: \"017.159\"", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/212061222", 
        "date": "Mar 17, 2017 11:31:02 AM", 
        "id": 212061222
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/212058933", 
        "date": "Mar 17, 2017 11:25:34 AM", 
        "id": 212058933
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c53feac38ec149fed84121704c620503bf1f7820", 
        "sha": "c53feac38ec149fed84121704c620503bf1f7820", 
        "branchName": "master", 
        "date": "Mar 17, 2017 10:59:49 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/8b46b34fb3e2c2635208f0cb427d45182c3fecc4", 
        "sha": "8b46b34fb3e2c2635208f0cb427d45182c3fecc4", 
        "branchName": "master", 
        "date": "Mar 17, 2017 10:50:49 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-212058933-212061222", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 505, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 11, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_104", 
    "diff": "diff --git a/src/org/traccar/protocol/SuntechProtocolDecoder.java b/src/org/traccar/protocol/SuntechProtocolDecoder.java\nindex 55d5c22..e19335c 100644\n--- a/src/org/traccar/protocol/SuntechProtocolDecoder.java\n+++ b/src/org/traccar/protocol/SuntechProtocolDecoder.java\n@@ -31,11 +31,13 @@ import java.util.TimeZone;\n public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n \n     private int protocolType;\n+    private boolean hbm;\n \n     public SuntechProtocolDecoder(SuntechProtocol protocol) {\n         super(protocol);\n \n         protocolType = Context.getConfig().getInteger(getProtocolName() + \".protocolType\");\n+        hbm = Context.getConfig().getBoolean(getProtocolName() + \".hbm\");\n     }\n \n     public void setProtocolType(int protocolType) {\n@@ -144,12 +146,16 @@ public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n             position.set(Position.KEY_INDEX, Integer.parseInt(values[index++]));\n         }\n \n-        if (index < values.length) {\n-            position.set(Position.KEY_HOURS, Integer.parseInt(values[index++]));\n-        }\n+        if (hbm) {\n+\n+            if (index < values.length) {\n+                position.set(Position.KEY_HOURS, Integer.parseInt(values[index++]));\n+            }\n+\n+            if (index < values.length) {\n+                position.set(Position.KEY_BATTERY, Double.parseDouble(values[index]));\n+            }\n \n-        if (index < values.length) {\n-            position.set(Position.KEY_BATTERY, Double.parseDouble(values[index]));\n         }\n \n         return position;\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 124132568, 
        "hostName": "local", 
        "totalMemory": 278396928, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:52:39 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/212058933/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            110
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 110
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:49:24 AM", 
      "totalDuration": 189
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/216100740", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "position is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216167822", 
        "date": "Mar 29, 2017 3:01:35 AM", 
        "id": 216167822
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216100740", 
        "date": "Mar 28, 2017 10:48:09 PM", 
        "id": 216100740
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/9879e67c1f522fe6940b7a3ca5fde5c93875dcfb", 
        "sha": "9879e67c1f522fe6940b7a3ca5fde5c93875dcfb", 
        "branchName": "master", 
        "date": "Mar 28, 2017 5:58:23 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b7d5d53ead8eb8f7dbe6e04cdee76ea2c05c1dbe", 
        "sha": "b7d5d53ead8eb8f7dbe6e04cdee76ea2c05c1dbe", 
        "branchName": "master", 
        "date": "Mar 28, 2017 1:44:07 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-216100740-216167822", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_105", 
    "diff": "diff --git a/src/org/traccar/protocol/TelicProtocolDecoder.java b/src/org/traccar/protocol/TelicProtocolDecoder.java\nindex bbd4b05..8207e59 100644\n--- a/src/org/traccar/protocol/TelicProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TelicProtocolDecoder.java\n@@ -54,7 +54,7 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n             .expression(\"(?:[^,]*,){7}\")\n             .number(\"(d+),\")                     // battery\n             .expression(\"[^,]*,\")\n-            .number(\"(d+)\")                      // external\n+            .number(\"(d+)?\")                     // external\n             .any()\n             .compile();\n \n@@ -83,6 +83,8 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n     @Override\n     protected Object decode(\n             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n+        org.traccar.helper.PatternUtil.MatchResult matchResult =\n+                org.traccar.helper.PatternUtil.checkPattern(PATTERN.pattern(), (String) msg);\n \n         Parser parser = new Parser(PATTERN, (String) msg);\n         if (!parser.matches()) {\n@@ -130,7 +132,10 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n         }\n \n         position.set(Position.KEY_BATTERY, parser.nextInt());\n-        position.set(Position.KEY_POWER, parser.nextInt());\n+\n+        if (parser.hasNext()) {\n+            position.set(Position.KEY_POWER, parser.nextInt());\n+        }\n \n         return position;\n     }\n", 
    "projectMetrics": {
      "numberSourceFiles": 506, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 178704504, 
        "hostName": "local", 
        "totalMemory": 259522560, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:37:45 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/216100740/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            106
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 106
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:34:45 AM", 
      "totalDuration": 174
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/216189551", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216602583", 
        "date": "Mar 30, 2017 4:50:55 AM", 
        "id": 216602583
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216189551", 
        "date": "Mar 29, 2017 5:00:35 AM", 
        "id": 216189551
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/6461a7fad516e46250daca301305f36ba8bab8e6", 
        "sha": "6461a7fad516e46250daca301305f36ba8bab8e6", 
        "branchName": "master", 
        "date": "Mar 29, 2017 7:49:15 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/d344bd8061dd15b0613a7f628decbd8bca3df095", 
        "sha": "d344bd8061dd15b0613a7f628decbd8bca3df095", 
        "branchName": "master", 
        "date": "Mar 28, 2017 7:58:42 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-216189551-216602583", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 506, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 0
      }
    }, 
    "bugId": "Bears_106", 
    "diff": "diff --git a/src/org/traccar/protocol/TelicProtocolDecoder.java b/src/org/traccar/protocol/TelicProtocolDecoder.java\nindex dd20932..579a646 100644\n--- a/src/org/traccar/protocol/TelicProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TelicProtocolDecoder.java\n@@ -53,8 +53,6 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+)?,\")                    // satellites\n             .expression(\"(?:[^,]*,){7}\")\n             .number(\"(d+),\")                     // battery\n-            .expression(\"[^,]*,\")\n-            .number(\"(d+)?\")                     // external\n             .any()\n             .compile();\n \n@@ -131,10 +129,6 @@ public class TelicProtocolDecoder extends BaseProtocolDecoder {\n \n         position.set(Position.KEY_BATTERY, parser.nextInt());\n \n-        if (parser.hasNext()) {\n-            position.set(Position.KEY_POWER, parser.nextInt());\n-        }\n-\n         return position;\n     }\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 138715416, 
        "hostName": "local", 
        "totalMemory": 287309824, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:34:37 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/216189551/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            111
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 111
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:31:19 AM", 
      "totalDuration": 191
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/216602583", 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "detail": "For input string: \"\"", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216605267", 
        "date": "Mar 30, 2017 5:07:42 AM", 
        "id": 216605267
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/216602583", 
        "date": "Mar 30, 2017 4:50:55 AM", 
        "id": 216602583
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/cece144cb40875887800251e20b9d44cb609052f", 
        "sha": "cece144cb40875887800251e20b9d44cb609052f", 
        "branchName": "master", 
        "date": "Mar 29, 2017 8:05:56 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6461a7fad516e46250daca301305f36ba8bab8e6", 
        "sha": "6461a7fad516e46250daca301305f36ba8bab8e6", 
        "branchName": "master", 
        "date": "Mar 29, 2017 7:49:15 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-216602583-216605267", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_107", 
    "diff": "diff --git a/src/org/traccar/protocol/StarLinkProtocolDecoder.java b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\nindex 8d35ea5..9709125 100644\n--- a/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n+++ b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n@@ -151,10 +151,14 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n                     position.set(Position.PREFIX_OUT + 4, Integer.parseInt(data[i]));\n                     break;\n                 case \"#LAC#\":\n-                    lac = Integer.parseInt(data[i]);\n+                    if (!data[i].isEmpty()) {\n+                        lac = Integer.parseInt(data[i]);\n+                    }\n                     break;\n                 case \"#CID#\":\n-                    cid = Integer.parseInt(data[i]);\n+                    if (!data[i].isEmpty()) {\n+                        cid = Integer.parseInt(data[i]);\n+                    }\n                     break;\n                 case \"#VIN#\":\n                     position.set(Position.KEY_POWER, Double.parseDouble(data[i]));\n", 
    "projectMetrics": {
      "numberSourceFiles": 506, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 189112464, 
        "hostName": "local", 
        "totalMemory": 263192576, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 4:34:35 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/216602583/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            110
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 110
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 4:31:19 AM", 
      "totalDuration": 189
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/219945896", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220224837", 
        "date": "Apr 9, 2017 11:49:17 AM", 
        "id": 220224837
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/219945896", 
        "date": "Apr 8, 2017 6:43:53 AM", 
        "id": 219945896
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1f4dc7e4413aae6f8e927d7d5a9c40a8bd0ae082", 
        "sha": "1f4dc7e4413aae6f8e927d7d5a9c40a8bd0ae082", 
        "branchName": "master", 
        "date": "Apr 9, 2017 11:47:16 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e104f5636d53311dfd91cafaa2cdea65260ae7dc", 
        "sha": "e104f5636d53311dfd91cafaa2cdea65260ae7dc", 
        "branchName": "master", 
        "date": "Apr 8, 2017 6:42:23 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-219945896-220224837", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 507, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_108", 
    "diff": "diff --git a/src/org/traccar/protocol/CguardProtocolDecoder.java b/src/org/traccar/protocol/CguardProtocolDecoder.java\nindex 1914401..f1d5939 100644\n--- a/src/org/traccar/protocol/CguardProtocolDecoder.java\n+++ b/src/org/traccar/protocol/CguardProtocolDecoder.java\n@@ -35,13 +35,13 @@ public class CguardProtocolDecoder extends BaseProtocolDecoder {\n     private static final Pattern PATTERN_NV = new PatternBuilder()\n             .text(\"NV:\")\n             .number(\"(dd)(dd)(dd) \")             // date (yymmdd)\n-            .number(\"(dd)(dd)(dd):\")             // time (hhmmss)\n-            .number(\"(-?d+.d+):\")                // longitude\n-            .number(\"(-?d+.d+):\")                // latitude\n-            .number(\"(d+.?d*):\")                 // speed\n-            .number(\"(?:NAN|(d+.?d*)):\")         // accuracy\n-            .number(\"(?:NAN|(d+.?d*)):\")         // course\n-            .number(\"(?:NAN|(d+.?d*))\")          // altitude\n+            .number(\"(dd)(dd)(dd)\")              // time (hhmmss)\n+            .number(\":(-?d+.d+)\")                // longitude\n+            .number(\":(-?d+.d+)\")                // latitude\n+            .number(\":(d+.?d*)\")                 // speed\n+            .number(\":(?:NAN|(d+.?d*))\")         // accuracy\n+            .number(\":(?:NAN|(d+.?d*))\")         // course\n+            .number(\":(?:NAN|(d+.?d*))\").optional() // altitude\n             .compile();\n \n     private static final Pattern PATTERN_BC = new PatternBuilder()\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 119918408, 
        "hostName": "local", 
        "totalMemory": 203423744, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:02:46 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/219945896/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            140
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 141
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            23
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 23
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 10:59:04 PM", 
      "totalDuration": 215
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.text.ParseException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/traccar/traccar/220525069", 
      "failureDetails": [
        {
          "failureName": "java.text.ParseException", 
          "detail": "Unparseable date: \"22:37:413be0133057\"", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220735965", 
        "date": "Apr 10, 2017 11:41:43 PM", 
        "id": 220735965
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/220525069", 
        "date": "Apr 10, 2017 1:49:05 PM", 
        "id": 220525069
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/aba44d6cb91ac0b54de743dbd469ee8ca118796f", 
        "sha": "aba44d6cb91ac0b54de743dbd469ee8ca118796f", 
        "branchName": "master", 
        "date": "Apr 10, 2017 11:40:01 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/2f46d48846633fbf56289f478a9acbe544a17c9c", 
        "sha": "2f46d48846633fbf56289f478a9acbe544a17c9c", 
        "branchName": "master", 
        "date": "Apr 10, 2017 1:46:55 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-220525069-220735965", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_109", 
    "diff": "diff --git a/src/org/traccar/protocol/SuntechProtocolDecoder.java b/src/org/traccar/protocol/SuntechProtocolDecoder.java\nindex e19335c..42e81f6 100644\n--- a/src/org/traccar/protocol/SuntechProtocolDecoder.java\n+++ b/src/org/traccar/protocol/SuntechProtocolDecoder.java\n@@ -67,7 +67,9 @@ public class SuntechProtocolDecoder extends BaseProtocolDecoder {\n         }\n         position.setDeviceId(deviceSession.getDeviceId());\n \n-        position.set(Position.KEY_VERSION_FW, values[index++]);\n+        if (!type.equals(\"Alert\") || protocolType == 0) {\n+            position.set(Position.KEY_VERSION_FW, values[index++]);\n+        }\n \n         DateFormat dateFormat = new SimpleDateFormat(\"yyyyMMddHH:mm:ss\");\n         dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n", 
    "projectMetrics": {
      "numberSourceFiles": 507, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 131838696, 
        "hostName": "local", 
        "totalMemory": 353370112, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 11:02:02 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/220525069/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            131
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 132
        }, 
        "testing": {
          "stepDurations": [
            20
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 20
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 10:58:19 PM", 
      "totalDuration": 215
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/222468469", 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecodeStatus", 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "detail": "expected:<4294966271> but was:<1418892070>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222479725", 
        "date": "Apr 16, 2017 4:54:46 AM", 
        "id": 222479725
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222468469", 
        "date": "Apr 16, 2017 3:04:42 AM", 
        "id": 222468469
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1498b5c5a00c575ba67dce2dcfac0d77a8b4964a", 
        "sha": "1498b5c5a00c575ba67dce2dcfac0d77a8b4964a", 
        "branchName": "master", 
        "date": "Apr 16, 2017 4:53:05 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/5c127eee77815eabc5c99ee45b2767a0e61553a9", 
        "sha": "5c127eee77815eabc5c99ee45b2767a0e61553a9", 
        "branchName": "master", 
        "date": "Apr 16, 2017 3:02:41 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-222468469-222479725", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 508, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_110", 
    "diff": "diff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex b78f21d..465bf83 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -184,7 +184,9 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")\n             .number(\"(d+)#\")\n             .or()\n-            .any()\n+            .expression(\",.*\")\n+            .or()\n+            .text(\"#\")\n             .groupEnd()\n             .compile();\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 297335936, 
        "hostName": "local", 
        "totalMemory": 344981504, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 10:58:51 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/222468469/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            117
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 117
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 10:55:05 PM", 
      "totalDuration": 217
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/222528691", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "list if empty", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222667430", 
        "date": "Apr 17, 2017 2:45:26 AM", 
        "id": 222667430
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/222528691", 
        "date": "Apr 16, 2017 12:24:40 PM", 
        "id": 222528691
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/73ecddc51d9c998e08ffa85d54a8e6da90567f36", 
        "sha": "73ecddc51d9c998e08ffa85d54a8e6da90567f36", 
        "branchName": "master", 
        "date": "Apr 17, 2017 2:43:54 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/e6975cd0c6d93dc205eac0c5470d3060269df87e", 
        "sha": "e6975cd0c6d93dc205eac0c5470d3060269df87e", 
        "branchName": "master", 
        "date": "Apr 16, 2017 12:22:43 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-222528691-222667430", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_111", 
    "diff": "diff --git a/src/org/traccar/protocol/Tlt2hProtocolDecoder.java b/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\nindex 9f0e8e8..1d6093b 100644\n--- a/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Tlt2hProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2013 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2013 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -45,7 +45,7 @@ public class Tlt2hProtocolDecoder extends BaseProtocolDecoder {\n     private static final Pattern PATTERN_POSITION = new PatternBuilder()\n             .number(\"#(x+)?\")                    // cell info\n             .text(\"$GPRMC,\")\n-            .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\n+            .number(\"(dd)(dd)(dd).d+,\")          // time (hhmmss.sss)\n             .expression(\"([AV]),\")               // validity\n             .number(\"(d+)(dd.d+),\")              // latitude\n             .expression(\"([NS]),\")\n@@ -91,7 +91,7 @@ public class Tlt2hProtocolDecoder extends BaseProtocolDecoder {\n                 parser.next(); // base station info\n \n                 DateBuilder dateBuilder = new DateBuilder()\n-                        .setTime(parser.nextInt(), parser.nextInt(), parser.nextInt(), parser.nextInt());\n+                        .setTime(parser.nextInt(), parser.nextInt(), parser.nextInt());\n \n                 position.setValid(parser.next().equals(\"A\"));\n                 position.setLatitude(parser.nextCoordinate());\n", 
    "projectMetrics": {
      "numberSourceFiles": 508, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 296134056, 
        "hostName": "local", 
        "totalMemory": 337641472, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 10:55:58 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/222528691/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            125
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 126
        }, 
        "testing": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 10:52:10 PM", 
      "totalDuration": 221
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 232, 
        "numberRunning": 233, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/225874246", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/226678972", 
        "date": "Apr 28, 2017 6:47:12 AM", 
        "id": 226678972
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/225874246", 
        "date": "Apr 26, 2017 7:08:32 AM", 
        "id": 225874246
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/4f235bcac5b13733684fed8e0ef05968123f6e10", 
        "sha": "4f235bcac5b13733684fed8e0ef05968123f6e10", 
        "branchName": "master", 
        "date": "Apr 28, 2017 6:45:30 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/1f3185d8a06f5d8cd3c05c15cbb7abbbfa81af37", 
        "sha": "1f3185d8a06f5d8cd3c05c15cbb7abbbfa81af37", 
        "branchName": "master", 
        "date": "Apr 26, 2017 7:07:00 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-225874246-226678972", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 210, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 6
      }
    }, 
    "bugId": "Bears_112", 
    "diff": "diff --git a/src/org/traccar/protocol/L100ProtocolDecoder.java b/src/org/traccar/protocol/L100ProtocolDecoder.java\nindex f98e532..6184480 100644\n--- a/src/org/traccar/protocol/L100ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/L100ProtocolDecoder.java\n@@ -40,8 +40,9 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .text(\"ATL\")\n             .number(\"(d{15}),\")                  // imei\n             .text(\"$GPRMC,\")\n-            .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\n-            .expression(\"([AV]),\")               // validity\n+            .number(\"(dd)(dd)(dd)\")              // time (hhmmss.sss)\n+            .number(\".(ddd)\").optional()\n+            .expression(\",([AV]),\")              // validity\n             .number(\"(dd)(dd.d+),\")              // latitude\n             .expression(\"([NS]),\")\n             .number(\"(ddd)(dd.d+),\")             // longitude\n@@ -52,7 +53,7 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .any()\n             .text(\"#\")\n             .number(\"([01]+),\")                  // io status\n-            .number(\"(d+.d+|N.C),\")              // adc\n+            .number(\"(d+.?d*|N.C),\")             // adc\n             .expression(\"[^,]*,\")                // reserved\n             .expression(\"[^,]*,\")                // reserved\n             .number(\"(d+.d+),\")                  // odometer\n@@ -61,8 +62,8 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // gsm\n             .number(\"(d+),\")                     // mcc\n             .number(\"(d+),\")                     // mnc\n-            .number(\"(d+),\")                     // lac\n-            .number(\"(d+)\")                      // cid\n+            .number(\"(x+),\")                     // lac\n+            .number(\"(x+)\")                      // cid\n             .text(\"ATL\")\n             .compile();\n \n@@ -111,7 +112,7 @@ public class L100ProtocolDecoder extends BaseProtocolDecoder {\n \n         int rssi = parser.nextInt(0);\n         position.setNetwork(new Network(CellTower.from(\n-                parser.nextInt(0), parser.nextInt(0), parser.nextInt(0), parser.nextInt(0), rssi)));\n+                parser.nextInt(0), parser.nextInt(0), parser.nextHexInt(0), parser.nextHexInt(0), rssi)));\n \n         return position;\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 169182664, 
        "hostName": "local", 
        "totalMemory": 256901120, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 9, 2018 10:49:10 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/225874246/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            148
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 148
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }
      }, 
      "reproductionDateBeginning": "Oct 9, 2018 10:45:06 PM", 
      "totalDuration": 236
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 233, 
        "numberRunning": 234, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/228965242", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "position is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/229298433", 
        "date": "May 5, 2017 11:47:27 PM", 
        "id": 229298433
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/228965242", 
        "date": "May 5, 2017 3:34:06 AM", 
        "id": 228965242
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/f35567956593f78f3f9630add815710b9df47634", 
        "sha": "f35567956593f78f3f9630add815710b9df47634", 
        "branchName": "master", 
        "date": "May 5, 2017 11:44:27 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/841965ba439654f76dcd7fc63efd70647f23f29f", 
        "sha": "841965ba439654f76dcd7fc63efd70647f23f29f", 
        "branchName": "master", 
        "date": "May 5, 2017 3:31:48 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-228965242-229298433", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_113", 
    "diff": "diff --git a/src/org/traccar/protocol/Pt502ProtocolDecoder.java b/src/org/traccar/protocol/Pt502ProtocolDecoder.java\nindex eb86f01..b1851f8 100644\n--- a/src/org/traccar/protocol/Pt502ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Pt502ProtocolDecoder.java\n@@ -1,5 +1,5 @@\n /*\r\n- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)\r\n+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)\r\n  * Copyright 2012 Luis Parada (luis.parada@gmail.com)\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -43,9 +43,9 @@ public class Pt502ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // id\r\n             .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\r\n             .expression(\"([AV]),\")               // validity\r\n-            .number(\"(dd)(dd.dddd),\")            // latitude\r\n+            .number(\"(d+)(dd.dddd),\")            // latitude\r\n             .expression(\"([NS]),\")\r\n-            .number(\"(ddd)(dd.dddd),\")           // longitude\r\n+            .number(\"(d+)(dd.dddd),\")            // longitude\r\n             .expression(\"([EW]),\")\r\n             .number(\"(d+.d+)?,\")                 // speed\r\n             .number(\"(d+.d+)?,\")                 // course\r\n@@ -83,9 +83,7 @@ public class Pt502ProtocolDecoder extends BaseProtocolDecoder {\n     protected Object decode(\r\n             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\r\n \r\n-        String sentence = (String) msg;\r\n-\r\n-        Parser parser = new Parser(PATTERN, sentence);\r\n+        Parser parser = new Parser(PATTERN, (String) msg);\r\n         if (!parser.matches()) {\r\n             return null;\r\n         }\r\n", 
    "projectMetrics": {
      "numberSourceFiles": 509, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 211, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 223961752, 
        "hostName": "local", 
        "totalMemory": 270532608, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 3:08:50 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/228965242/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            99
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 99
        }, 
        "testing": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }, 
        "cloning": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 3:05:51 PM", 
      "totalDuration": 173
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 236, 
        "numberRunning": 237, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.text.ParseException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/233864732", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.text.ParseException", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest", 
          "detail": "Unparseable date: \"\"", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/233868407", 
        "date": "May 19, 2017 4:49:59 AM", 
        "id": 233868407
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/233864732", 
        "date": "May 19, 2017 4:23:48 AM", 
        "id": 233864732
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/d9c3568535f8a3ef9cedb43f7c48e839e2940d1f", 
        "sha": "d9c3568535f8a3ef9cedb43f7c48e839e2940d1f", 
        "branchName": "master", 
        "date": "May 18, 2017 7:48:03 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6b16c0ddf2ac1ce497e1d8bc17a47eceeabca113", 
        "sha": "6b16c0ddf2ac1ce497e1d8bc17a47eceeabca113", 
        "branchName": "master", 
        "date": "May 18, 2017 7:22:03 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-233864732-233868407", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 524, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 214, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_114", 
    "diff": "diff --git a/src/org/traccar/protocol/StarLinkProtocolDecoder.java b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\nindex 0e98407..8fbecc3 100644\n--- a/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n+++ b/src/org/traccar/protocol/StarLinkProtocolDecoder.java\n@@ -100,6 +100,9 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n         int event = 0;\n \n         for (int i = 0; i < Math.min(data.length, dataTags.length); i++) {\n+            if (data[i].isEmpty()) {\n+                continue;\n+            }\n             switch (dataTags[i]) {\n                 case \"#EDT#\":\n                     position.setDeviceTime(dateFormat.parse(data[i]));\n@@ -180,6 +183,10 @@ public class StarLinkProtocolDecoder extends BaseProtocolDecoder {\n             }\n         }\n \n+        if (position.getFixTime() == null) {\n+            getLastLocation(position, null);\n+        }\n+\n         if (lac != null && cid != null) {\n             position.setNetwork(new Network(CellTower.fromLacCid(lac, cid)));\n         }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 205974136, 
        "hostName": "local", 
        "totalMemory": 246415360, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 2:59:41 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/233864732/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            102
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 102
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            17
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 17
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 2:56:46 PM", 
      "totalDuration": 169
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 240, 
        "numberRunning": 241, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/237845618", 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "detail": "For input string: \"100]\"", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/237846623", 
        "date": "May 31, 2017 11:13:23 AM", 
        "id": 237846623
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/237845618", 
        "date": "May 31, 2017 11:10:30 AM", 
        "id": 237845618
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c3be37febe85bbaa69b7112f6d9a04b19b8b9253", 
        "sha": "c3be37febe85bbaa69b7112f6d9a04b19b8b9253", 
        "branchName": "master", 
        "date": "May 31, 2017 11:11:00 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/62028d2d507f54ed50962bdb9dfb027baccb5e1c", 
        "sha": "62028d2d507f54ed50962bdb9dfb027baccb5e1c", 
        "branchName": "master", 
        "date": "May 31, 2017 11:07:43 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-237845618-237846623", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_115", 
    "diff": "diff --git a/src/org/traccar/protocol/WatchProtocolDecoder.java b/src/org/traccar/protocol/WatchProtocolDecoder.java\nindex f0d06a3..ad43215 100644\n--- a/src/org/traccar/protocol/WatchProtocolDecoder.java\n+++ b/src/org/traccar/protocol/WatchProtocolDecoder.java\n@@ -65,7 +65,7 @@ public class WatchProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"d+,\")                       // tumbles\n             .number(\"(x+),\")                     // status\n             .expression(\"([^\\\\]]*)\")             // cell and wifi\n-            .text(\"]\").optional()\n+            .text(\"]\")\n             .compile();\n \n     private void sendResponse(Channel channel, String manufacturer, String id, String content) {\n@@ -160,7 +160,8 @@ public class WatchProtocolDecoder extends BaseProtocolDecoder {\n \n                     getLastLocation(position, null);\n \n-                    position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));\n+                    position.set(Position.KEY_BATTERY_LEVEL,\n+                            Integer.parseInt(values[3].substring(0, values[3].length() - 1)));\n \n                     return position;\n                 }\n", 
    "projectMetrics": {
      "numberSourceFiles": 531, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 218, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 193874280, 
        "hostName": "local", 
        "totalMemory": 382205952, 
        "numberCPU": 4
      }, 
      "reproductionDateEnd": "Oct 10, 2018 2:45:09 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/237845618/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            146
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 147
        }, 
        "testing": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }, 
        "cloning": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 2:41:18 PM", 
      "totalDuration": 223
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 241, 
        "numberRunning": 242, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/239191142", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SanavProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.SanavProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/239340888", 
        "date": "Jun 4, 2017 6:51:00 PM", 
        "id": 239340888
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/239191142", 
        "date": "Jun 4, 2017 1:19:21 AM", 
        "id": 239191142
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/0d5b1440503ee50127554e0664b0ae7cbf9a25fd", 
        "sha": "0d5b1440503ee50127554e0664b0ae7cbf9a25fd", 
        "branchName": "master", 
        "date": "Jun 4, 2017 6:48:51 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/40cb222dddfe3c0acdf6043617e00d7deaa4646c", 
        "sha": "40cb222dddfe3c0acdf6043617e00d7deaa4646c", 
        "branchName": "master", 
        "date": "Jun 4, 2017 1:17:47 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-239191142-239340888", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 532, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 219, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_116", 
    "diff": "diff --git a/src/org/traccar/protocol/SanavProtocolDecoder.java b/src/org/traccar/protocol/SanavProtocolDecoder.java\nindex c736b2b..151c557 100644\n--- a/src/org/traccar/protocol/SanavProtocolDecoder.java\n+++ b/src/org/traccar/protocol/SanavProtocolDecoder.java\n@@ -38,7 +38,7 @@ public class SanavProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+)\")                      // imei\n             .expression(\"&?rmc[:=]\")\n             .text(\"$GPRMC,\")\n-            .number(\"(dd)(dd)(dd).(ddd),\")       // time (hhmmss.sss)\n+            .number(\"(dd)(dd)(dd).d+,\")          // time (hhmmss.sss)\n             .expression(\"([AV]),\")               // validity\n             .number(\"(d+)(dd.d+),\")              // latitude\n             .expression(\"([NS]),\")\n@@ -69,7 +69,7 @@ public class SanavProtocolDecoder extends BaseProtocolDecoder {\n         position.setDeviceId(deviceSession.getDeviceId());\n \n         DateBuilder dateBuilder = new DateBuilder()\n-                .setTime(parser.nextInt(0), parser.nextInt(0), parser.nextInt(0), parser.nextInt(0));\n+                .setTime(parser.nextInt(0), parser.nextInt(0), parser.nextInt(0));\n \n         position.setValid(parser.next().equals(\"A\"));\n         position.setLatitude(parser.nextCoordinate());\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 258007832, 
        "hostName": "spirals-bears", 
        "totalMemory": 442499072, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:18:20 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/239191142/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 104
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:14:54 AM", 
      "totalDuration": 200
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 242, 
        "numberRunning": 243, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/241384932", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "position is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gps103ProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gps103ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/242095240", 
        "date": "Jun 12, 2017 6:46:04 PM", 
        "id": 242095240
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/241384932", 
        "date": "Jun 10, 2017 12:59:46 AM", 
        "id": 241384932
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1df59fb0916ec36604a7771a40f887caebd0e228", 
        "sha": "1df59fb0916ec36604a7771a40f887caebd0e228", 
        "branchName": "master", 
        "date": "Jun 12, 2017 6:43:11 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/2c82232375a16c1b3f5a62e2e5561d37a482dff9", 
        "sha": "2c82232375a16c1b3f5a62e2e5561d37a482dff9", 
        "branchName": "master", 
        "date": "Jun 10, 2017 12:57:50 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-241384932-242095240", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 535, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 220, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 4
      }
    }, 
    "bugId": "Bears_117", 
    "diff": "diff --git a/src/org/traccar/protocol/Gps103ProtocolDecoder.java b/src/org/traccar/protocol/Gps103ProtocolDecoder.java\nindex b0113e0..2b546bb 100644\n--- a/src/org/traccar/protocol/Gps103ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gps103ProtocolDecoder.java\n@@ -90,10 +90,10 @@ public class Gps103ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // odometer\n             .number(\"(d+.d+)?,\")                 // fuel instant\n             .number(\"(d+.d+)?,\")                 // fuel average\n-            .number(\"(d+),\")                     // hours\n+            .number(\"(d+)?,\")                    // hours\n             .number(\"(d+),\")                     // speed\n             .number(\"d+.?d*%,\")                  // power load\n-            .number(\"(d+),\")                     // temperature\n+            .number(\"(?:([-+]?d+)|[-+]?),\")      // temperature\n             .number(\"(d+.?d*%),\")                // throttle\n             .number(\"(d+),\")                     // rpm\n             .number(\"(d+.d+),\")                  // battery\n@@ -209,9 +209,9 @@ public class Gps103ProtocolDecoder extends BaseProtocolDecoder {\n             position.set(Position.KEY_ODOMETER, parser.nextInt(0));\n             parser.nextDouble(0); // instant fuel consumption\n             position.set(Position.KEY_FUEL_CONSUMPTION, parser.nextDouble(0));\n-            position.set(Position.KEY_HOURS, parser.nextInt(0));\n+            position.set(Position.KEY_HOURS, parser.nextInt());\n             position.set(Position.KEY_OBD_SPEED, parser.nextInt(0));\n-            position.set(Position.PREFIX_TEMP + 1, parser.nextInt(0));\n+            position.set(Position.PREFIX_TEMP + 1, parser.nextInt());\n             position.set(Position.KEY_THROTTLE, parser.next());\n             position.set(Position.KEY_RPM, parser.nextInt(0));\n             position.set(Position.KEY_BATTERY, parser.nextDouble(0));\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 292753640, 
        "hostName": "spirals-bears", 
        "totalMemory": 459800576, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:16:12 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/241384932/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            106
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 106
        }, 
        "testing": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:12:50 AM", 
      "totalDuration": 195
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 248, 
        "numberRunning": 249, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/243199408", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.WondexProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.WondexProtocolDecoderTest", 
          "detail": "valid expected:<true> but was:<false>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/243229436", 
        "date": "Jun 15, 2017 1:48:06 PM", 
        "id": 243229436
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/243199408", 
        "date": "Jun 15, 2017 12:10:23 PM", 
        "id": 243199408
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/bf57beec25228d58df8604e23d8709f6d196f3c5", 
        "sha": "bf57beec25228d58df8604e23d8709f6d196f3c5", 
        "branchName": "master", 
        "date": "Jun 15, 2017 1:46:03 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6c3d168ed9240ed4b5485b537294db6ec9d94379", 
        "sha": "6c3d168ed9240ed4b5485b537294db6ec9d94379", 
        "branchName": "master", 
        "date": "Jun 15, 2017 12:06:20 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-243199408-243229436", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 540, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 220, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 7, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_118", 
    "diff": "diff --git a/src/org/traccar/FilterHandler.java b/src/org/traccar/FilterHandler.java\nindex 5e1214a..f2a80a9 100644\n--- a/src/org/traccar/FilterHandler.java\n+++ b/src/org/traccar/FilterHandler.java\n@@ -84,7 +84,9 @@ public class FilterHandler extends BaseDataHandler {\n     }\n \n     private boolean filterInvalid(Position position) {\n-        return filterInvalid && !position.getValid();\n+        return filterInvalid && (!position.getValid()\n+           || position.getLatitude() > 90 || position.getLongitude() > 180\n+           || position.getLatitude() < -90 || position.getLongitude() < -180);\n     }\n \n     private boolean filterZero(Position position) {\ndiff --git a/src/org/traccar/protocol/WondexProtocolDecoder.java b/src/org/traccar/protocol/WondexProtocolDecoder.java\nindex 8249d2c..8be5e09 100644\n--- a/src/org/traccar/protocol/WondexProtocolDecoder.java\n+++ b/src/org/traccar/protocol/WondexProtocolDecoder.java\n@@ -78,7 +78,6 @@ public class WondexProtocolDecoder extends BaseProtocolDecoder {\n             position.setProtocol(getProtocolName());\n             position.setDeviceId(deviceSession.getDeviceId());\n             getLastLocation(position, new Date());\n-            position.setValid(false);\n             position.set(Position.KEY_RESULT, buf.toString(StandardCharsets.US_ASCII));\n \n             return position;\n@@ -106,9 +105,8 @@ public class WondexProtocolDecoder extends BaseProtocolDecoder {\n             position.setCourse(parser.nextDouble(0));\n             position.setAltitude(parser.nextDouble(0));\n \n-            int satellites = parser.nextInt(0);\n-            position.setValid(satellites >= 3);\n-            position.set(Position.KEY_SATELLITES, satellites);\n+            position.setValid(true);\n+            position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n \n             position.set(Position.KEY_EVENT, parser.next());\n             position.set(Position.KEY_BATTERY, parser.nextDouble());\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 345199320, 
        "hostName": "spirals-bears", 
        "totalMemory": 495452160, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:12:32 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/243199408/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            106
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 107
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:09:05 AM", 
      "totalDuration": 200
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 250, 
        "numberRunning": 251, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.StringIndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/243640798", 
      "failureDetails": [
        {
          "failureName": "java.lang.StringIndexOutOfBoundsException", 
          "detail": "String index out of range: -16", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/243870734", 
        "date": "Jun 17, 2017 2:06:04 AM", 
        "id": 243870734
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/243640798", 
        "date": "Jun 16, 2017 2:07:08 PM", 
        "id": 243640798
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/3f5122cbaf1710ae8d6c1c7ca9cf6a647f9a3f94", 
        "sha": "3f5122cbaf1710ae8d6c1c7ca9cf6a647f9a3f94", 
        "branchName": "master", 
        "date": "Jun 17, 2017 2:02:15 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/9f4e34dd799187b32226652fdea9868c4ef5ddb4", 
        "sha": "9f4e34dd799187b32226652fdea9868c4ef5ddb4", 
        "branchName": "master", 
        "date": "Jun 16, 2017 2:03:21 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-243640798-243870734", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 541, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 222, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 13, 
        "numberDeleted": 8
      }
    }, 
    "bugId": "Bears_119", 
    "diff": "diff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex b9b979c..aa3d476 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -377,14 +377,19 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             case \"*\":\n                 String sentence = buf.toString(StandardCharsets.US_ASCII);\n                 int typeStart = sentence.indexOf(',', sentence.indexOf(',') + 1) + 1;\n-                String type = sentence.substring(typeStart, sentence.indexOf(',', typeStart));\n-                switch (type) {\n-                    case \"NBR\":\n-                        return decodeLbs(sentence, channel, remoteAddress);\n-                    case \"LINK\":\n-                        return decodeLink(sentence, channel, remoteAddress);\n-                    default:\n-                        return decodeText(sentence, channel, remoteAddress);\n+                int typeEnd = sentence.indexOf(',', typeStart);\n+                if (typeEnd > 0) {\n+                    String type = sentence.substring(typeStart, typeEnd);\n+                    switch (type) {\n+                        case \"NBR\":\n+                            return decodeLbs(sentence, channel, remoteAddress);\n+                        case \"LINK\":\n+                            return decodeLink(sentence, channel, remoteAddress);\n+                        default:\n+                            return decodeText(sentence, channel, remoteAddress);\n+                    }\n+                } else {\n+                    return null;\n                 }\n             case \"$\":\n                 return decodeBinary(buf, channel, remoteAddress);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 348606408, 
        "hostName": "spirals-bears", 
        "totalMemory": 499122176, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 2:07:13 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/243640798/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 103
        }, 
        "testing": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 2:03:54 AM", 
      "totalDuration": 192
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 260, 
        "numberRunning": 261, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 5
      }, 
      "failingModule": "/root/workspace/traccar/traccar/248584369", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AplicomFrameDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.AplicomFrameDecoderTest", 
          "detail": "expected:<BigEndianHeapChannelBuffer(ridx=0, widx=163, cap=163)> but was:<null>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/248666173", 
        "date": "Jun 30, 2017 8:47:30 AM", 
        "id": 248666173
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/248584369", 
        "date": "Jun 30, 2017 1:38:00 AM", 
        "id": 248584369
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/64501f3f846c62527bbc224f3fb031b9f708475f", 
        "sha": "64501f3f846c62527bbc224f3fb031b9f708475f", 
        "branchName": "master", 
        "date": "Jun 30, 2017 8:44:26 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/2cf20c46afe59f6e98e629a6c88e74d7ab60b122", 
        "sha": "2cf20c46afe59f6e98e629a6c88e74d7ab60b122", 
        "branchName": "master", 
        "date": "Jun 29, 2017 4:36:07 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-248584369-248666173", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 544, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 226, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_120", 
    "diff": "diff --git a/src/org/traccar/protocol/AplicomFrameDecoder.java b/src/org/traccar/protocol/AplicomFrameDecoder.java\nindex 785d907..24d55f1 100644\n--- a/src/org/traccar/protocol/AplicomFrameDecoder.java\n+++ b/src/org/traccar/protocol/AplicomFrameDecoder.java\n@@ -26,6 +26,11 @@ public class AplicomFrameDecoder extends FrameDecoder {\n     protected Object decode(\r\n             ChannelHandlerContext ctx, Channel channel, ChannelBuffer buf) throws Exception {\r\n \r\n+        // Skip Alive message\r\n+        while (buf.readable() && Character.isDigit(buf.getByte(buf.readerIndex()))) {\r\n+            buf.readByte();\r\n+        }\r\n+\r\n         // Check minimum length\r\n         if (buf.readableBytes() < 11) {\r\n             return null;\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 339810800, 
        "hostName": "spirals-bears", 
        "totalMemory": 483393536, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:58:48 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/248584369/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            109
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 109
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:55:11 AM", 
      "totalDuration": 211
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 119, 
        "numberRunning": 264, 
        "numberFailing": 0, 
        "numberErroring": 145, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 145
          }
        ], 
        "numberSkipping": 6
      }, 
      "failingModule": "/root/workspace/traccar/traccar/255051210", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AplicomProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.HuaShengProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.PiligrimProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.NvsProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ThinkRaceProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TytanProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TopflytechProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.PretraceProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.M2mProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.NavisProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.FlexCommProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CalAmpProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tk103ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.OwnTracksProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AisProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.NavigilProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MtxProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Pt3000ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ArknavProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.KenjiProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ObdDongleProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SiwiProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.UlbotechProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AutoFonProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GnxProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Vt200ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.BceProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gt02ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MegastekProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.BlackKiteProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gt30ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AutoGradeProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Ardi01ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TrakMateProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GpsGateProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AlematicsProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Xt013ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.HunterProProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.WondexProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MaestroProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GpsMarkerProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.T800xProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.DmtProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.RaveonProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gps103ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.HomtecsProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GlobalSatProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tt8850ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.OigoProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AtrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TaipProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.T55ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.DishaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.PricolProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.JpKorjarProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CarscopProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.BoxProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CarTrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Stl060ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.XexunProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ManPowerProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MeiligaoProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.IntellitracProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MiniFinderProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.IdplProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AstraProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.FifotrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ArknavX8ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.UproProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.XirgoProtocolDecoderTest", 
          "testMethod": "testDecodeOld", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.T55ProtocolDecoderTest", 
          "testMethod": "testMaxonDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AdmProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TrvProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.RitiProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CityeasyProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "testMethod": "testDecodeStatus", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Jt600ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AuroProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.EelinkProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.OsmAndProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Xt2400ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GatorProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SmokeyProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.EnforaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.FoxProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tk102ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GalileoProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tr900ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gps056ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GpsmtaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.FreedomProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CastelProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Avl301ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TzoneProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GranitProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SanavProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.YwtProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.V680ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.AppelloProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TramigoProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.LaipacProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SkypatrolProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.HaicomProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.FlextrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.GotopProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Tr20ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.PathAwayProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.EasyTrackProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.KhdProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CellocatorProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.OrionProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.WialonProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.MxtProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TmgProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.CradlepointProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ArnaviProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.NoranProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gl100ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ExtremTracProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.HuabaoProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.SupermateProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Gl200BinaryProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.VisiontekProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.ProgressProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.TrackboxProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.RuptelaProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.DmtHttpProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.XirgoProtocolDecoderTest", 
          "testMethod": "testDecodeNew", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.traccar.protocol.VtfmsProtocolDecoderTest", 
          "testMethod": "testDecode", 
          "isError": true
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.PricolProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EnforaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gps056ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Pt3000ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.OsmAndProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tr20ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.VisiontekProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MaestroProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.IdplProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AquilaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.HomtecsProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.HuaShengProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GoSafeProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.LaipacProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EelinkProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SmokeyProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GlobalSatProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Xt013ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.YwtProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.UlbotechProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AdmProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TelicProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.XirgoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SiwiProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TytanProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GotopProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.PathAwayProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AutoGradeProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ObdDongleProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.RitiProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TaipProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.JpKorjarProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ArnaviProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.T55ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200BinaryProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.OigoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.OrionProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.BoxProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GalileoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AplicomProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SanavProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TrvProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SupermateProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.BlackKiteProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.HuabaoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.IntellitracProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tt8850ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TzoneProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CalAmpProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.StarLinkProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.M2mProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GnxProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.UproProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.FreedomProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SuntechProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AutoFonProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ExtremTracProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CradlepointProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GpsMarkerProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Vt200ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CityeasyProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tr900ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GpsGateProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.WatchProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AppelloProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.RuptelaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GpsmtaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TeltonikaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 1
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Avl301ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.KenjiProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TotemProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AuroProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TramigoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ProgressProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.FlexCommProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TmgProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.BceProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.L100ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.FlextrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ThinkRaceProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MxtProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.HunterProProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CastelProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MtxProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.T800xProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.GatorProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CguardProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl100ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tk103ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CarTrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gt02ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ArknavX8ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Pt502ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CarscopProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MegastekProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.DmtProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.PiligrimProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.SkypatrolProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TrackboxProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EasyTrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.FoxProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gps103ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.RaveonProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MiniFinderProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.NvsProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AlematicsProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AisProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AtrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.WondexProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Jt600ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.OwnTracksProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.NoranProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Xt2400ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.CellocatorProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeiligaoProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.FifotrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.V680ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.WialonProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.AstraProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ArknavProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gt30ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TopflytechProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.PretraceProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.HaicomProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.ManPowerProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tk102ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.DishaProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.GranitProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.VtfmsProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.NavigilProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Tlt2hProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.DmtHttpProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.XexunProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.NavisProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.KhdProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Ardi01ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TrakMateProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Stl060ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/255052458", 
        "date": "Jul 19, 2017 12:38:45 AM", 
        "id": 255052458
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/255051210", 
        "date": "Jul 19, 2017 12:32:39 AM", 
        "id": 255051210
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/aa921d5acca68b92f0200183eb1c4a786a5f4882", 
        "sha": "aa921d5acca68b92f0200183eb1c4a786a5f4882", 
        "branchName": "master", 
        "date": "Jul 18, 2017 3:35:28 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/df53571ab09afb15888462dbbed2c3d58759c55a", 
        "sha": "df53571ab09afb15888462dbbed2c3d58759c55a", 
        "branchName": "master", 
        "date": "Jul 18, 2017 3:30:38 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-255051210-255052458", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 558, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 229, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_121", 
    "diff": "diff --git a/src/org/traccar/BaseProtocolDecoder.java b/src/org/traccar/BaseProtocolDecoder.java\nindex 7a39372..cde8586 100644\n--- a/src/org/traccar/BaseProtocolDecoder.java\n+++ b/src/org/traccar/BaseProtocolDecoder.java\n@@ -106,7 +106,7 @@ public abstract class BaseProtocolDecoder extends ExtendedObjectDecoder {\n     }\n \n     public DeviceSession getDeviceSession(Channel channel, SocketAddress remoteAddress, String... uniqueIds) {\n-        if (channel.getPipeline().get(HttpRequestDecoder.class) != null\n+        if (channel != null && channel.getPipeline().get(HttpRequestDecoder.class) != null\n                 || Context.getConfig().getBoolean(\"decoder.ignoreSessionCache\")) {\n             long deviceId = findDeviceId(remoteAddress, uniqueIds);\n             if (deviceId != 0) {\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 325001592, 
        "hostName": "spirals-bears", 
        "totalMemory": 467664896, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:31:31 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/255051210/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            101
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 101
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:28:16 PM", 
      "totalDuration": 190
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 266, 
        "numberRunning": 267, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 6
      }, 
      "failingModule": "/root/workspace/traccar/traccar/262940348", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/263330667", 
        "date": "Aug 11, 2017 4:06:14 AM", 
        "id": 263330667
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/262940348", 
        "date": "Aug 10, 2017 6:32:56 AM", 
        "id": 262940348
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/3562e0d927d539a1e9730c48ed376ee84ebc2b25", 
        "sha": "3562e0d927d539a1e9730c48ed376ee84ebc2b25", 
        "branchName": "master", 
        "date": "Aug 10, 2017 7:03:26 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/b82be4f9f3b4d1d6c345bc41d5c26aca03e369cb", 
        "sha": "b82be4f9f3b4d1d6c345bc41d5c26aca03e369cb", 
        "branchName": "master", 
        "date": "Aug 10, 2017 6:30:37 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-262940348-263330667", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 549, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 231, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_122", 
    "diff": "diff --git a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\nindex 63adb1c..37793a6 100644\n--- a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n@@ -76,7 +76,7 @@ public class Gl200TextProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(?:d),\")                    // led\n             .number(\"(?:d)?,\")                   // gps on need\n             .number(\"(?:d)?,\")                   // gps antenna type\n-            .number(\"(?:d),\").optional()         // gps antenna state\n+            .number(\"(?:d)?,\").optional()        // gps antenna state\n             .number(\"d{14},\")                    // last fix time\n             .groupBegin()\n             .number(\"(d+),\")                     // battery percentage\n@@ -388,10 +388,6 @@ public class Gl200TextProtocolDecoder extends BaseProtocolDecoder {\n     }\n \n     private Object decodeInf(Channel channel, SocketAddress remoteAddress, String sentence) {\n-\n-        org.traccar.helper.PatternUtil.MatchResult matchResult =\n-                org.traccar.helper.PatternUtil.checkPattern(PATTERN_INF.pattern(), sentence);\n-\n         Parser parser = new Parser(PATTERN_INF, sentence);\n         Position position = initPosition(parser, channel, remoteAddress);\n         if (position == null) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 360294256, 
        "hostName": "spirals-bears", 
        "totalMemory": 508559360, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:14:03 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/262940348/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            108
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 109
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:10:30 PM", 
      "totalDuration": 206
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 269, 
        "numberRunning": 272, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 6
      }, 
      "failingModule": "/root/workspace/traccar/traccar/265439859", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<Fri Jan 01 01:24:00 CET 2016> but was:<Fri Jan 01 01:23:00 CET 2016>", 
          "isError": false, 
          "testMethod": "testDetectTripAndStopByGap", 
          "testClass": "org.traccar.reports.ReportUtilsTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<Fri Jan 01 01:09:00 CET 2016> but was:<Fri Jan 01 01:07:00 CET 2016>", 
          "isError": false, 
          "testMethod": "testDetectTripsWithFluctuation", 
          "testClass": "org.traccar.reports.ReportUtilsTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "isError": false, 
          "testClass": "org.traccar.reports.ReportUtilsTest", 
          "testMethod": "testDetectTripsSimpleWithIgnition"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 7, 
          "numberRunning": 10, 
          "testClass": "org.traccar.reports.ReportUtilsTest", 
          "numberFailing": 3, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/265542197", 
        "date": "Aug 17, 2017 1:51:35 PM", 
        "id": 265542197
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/265439859", 
        "date": "Aug 17, 2017 7:15:17 AM", 
        "id": 265439859
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/a1f7908769d296aed7766151340426e612883c6f", 
        "sha": "a1f7908769d296aed7766151340426e612883c6f", 
        "branchName": "master", 
        "date": "Aug 17, 2017 1:50:14 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/9e9f97ac34d882594e3d23e959775ce765447787", 
        "sha": "9e9f97ac34d882594e3d23e959775ce765447787", 
        "branchName": "master", 
        "date": "Aug 17, 2017 7:12:44 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-265439859-265542197", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 549, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 232, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 9, 
        "numberDeleted": 11
      }
    }, 
    "bugId": "Bears_123", 
    "diff": "diff --git a/src/org/traccar/reports/ReportUtils.java b/src/org/traccar/reports/ReportUtils.java\nindex 46aea075..74cdaf9b 100644\n--- a/src/org/traccar/reports/ReportUtils.java\n+++ b/src/org/traccar/reports/ReportUtils.java\n@@ -284,17 +284,21 @@ public final class ReportUtils {\n             for (int i = 0; i < positions.size(); i++) {\n                 Map<Event, Position> event = motionHandler.updateMotionState(deviceState, positions.get(i),\n                         isMoving(positions, i, tripsConfig, speedThreshold));\n-                if (deviceState.getMotionPosition() != null && startEventIndex == -1\n-                        && trips != deviceState.getMotionState()) {\n+                if (startEventIndex == -1\n+                        && (trips != deviceState.getMotionState() && deviceState.getMotionPosition() != null\n+                        || trips == deviceState.getMotionState() && event != null)) {\n                     startEventIndex = i;\n                     startNoEventIndex = -1;\n+                } else if (trips != deviceState.getMotionState() && startEventIndex != -1\n+                        && deviceState.getMotionPosition() == null && event == null) {\n+                    startEventIndex = -1;\n                 }\n-                if (trips == deviceState.getMotionState()) {\n-                    if (startNoEventIndex == -1) {\n-                        startNoEventIndex = i;\n-                    } else if (deviceState.getMotionPosition() == null) {\n-                        startNoEventIndex = -1;\n-                    }\n+                if (startNoEventIndex == -1\n+                        && (trips == deviceState.getMotionState() && deviceState.getMotionPosition() != null\n+                        || trips != deviceState.getMotionState() && event != null)) {\n+                    startNoEventIndex = i;\n+                } else if (startNoEventIndex != -1 && deviceState.getMotionPosition() == null && event == null) {\n+                    startNoEventIndex = -1;\n                 }\n                 if (startEventIndex != -1 && startNoEventIndex != -1 && event != null\n                         && trips != deviceState.getMotionState()) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 247040328, 
        "hostName": "spirals-bears", 
        "totalMemory": 441450496, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:10:14 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/265439859/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            108
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 109
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 1:06:42 PM", 
      "totalDuration": 207
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 273, 
        "numberRunning": 274, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/267146704", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EskyProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.EskyProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/267366528", 
        "date": "Aug 22, 2017 11:54:36 PM", 
        "id": 267366528
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/267146704", 
        "date": "Aug 22, 2017 1:35:46 PM", 
        "id": 267146704
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/ebd193d4d5a98f7b53cc229f1c7287d05465b13e", 
        "sha": "ebd193d4d5a98f7b53cc229f1c7287d05465b13e", 
        "branchName": "master", 
        "date": "Aug 22, 2017 2:51:38 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/10e801928c521456fa54019d878093dc0538de8a", 
        "sha": "10e801928c521456fa54019d878093dc0538de8a", 
        "branchName": "master", 
        "date": "Aug 22, 2017 1:33:42 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-267146704-267366528", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_124", 
    "diff": "diff --git a/src/org/traccar/protocol/EskyProtocolDecoder.java b/src/org/traccar/protocol/EskyProtocolDecoder.java\nindex 0d3dcafb..d524224a 100644\n--- a/src/org/traccar/protocol/EskyProtocolDecoder.java\n+++ b/src/org/traccar/protocol/EskyProtocolDecoder.java\n@@ -40,8 +40,8 @@ public class EskyProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+)\").text(\"+\")            // satellites\n             .number(\"(dd)(dd)(dd)\")              // date\n             .number(\"(dd)(dd)(dd)\").text(\"+\")    // time\n-            .number(\"(d+.d+)\").text(\"+\")         // latitude\n-            .number(\"(d+.d+)\").text(\"+\")         // longitude\n+            .number(\"(-?d+.d+)\").text(\"+\")       // latitude\n+            .number(\"(-?d+.d+)\").text(\"+\")       // longitude\n             .number(\"(d+.d+)\").text(\"+\")         // speed\n             .number(\"(d+)\").text(\"+\")            // course\n             .text(\"0x\").number(\"(d+)\").text(\"+\") // input\n", 
    "projectMetrics": {
      "numberSourceFiles": 552, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 234, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 225250848, 
        "hostName": "spirals-bears", 
        "totalMemory": 407896064, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:02:11 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/267146704/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            107
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 108
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:58:33 PM", 
      "totalDuration": 211
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 273, 
        "numberRunning": 274, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/267371558", 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "detail": "Value out of range. Value:\"FFAD\" Radix:16", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/268530427", 
        "date": "Aug 25, 2017 11:44:11 PM", 
        "id": 268530427
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/267371558", 
        "date": "Aug 23, 2017 12:10:59 AM", 
        "id": 267371558
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/819bca366f89f237f19e52b7a916895ed1761fb9", 
        "sha": "819bca366f89f237f19e52b7a916895ed1761fb9", 
        "branchName": "master", 
        "date": "Aug 25, 2017 11:41:37 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/d5ad3af86c6faa5d45b8724219bf06cdd58e3eed", 
        "sha": "d5ad3af86c6faa5d45b8724219bf06cdd58e3eed", 
        "branchName": "master", 
        "date": "Aug 22, 2017 3:07:21 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-267371558-268530427", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_125", 
    "diff": "diff --git a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\nindex 37793a6f..3bee39cc 100644\n--- a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n@@ -614,7 +614,7 @@ public class Gl200TextProtocolDecoder extends BaseProtocolDecoder {\n                 for (int i = 1; i <= deviceCount; i++) {\n                     index++; // id\n                     index++; // type\n-                    position.set(Position.PREFIX_TEMP + i, Short.parseShort(data[index++], 16) * 0.0625);\n+                    position.set(Position.PREFIX_TEMP + i, (short) Integer.parseInt(data[index++], 16) * 0.0625);\n                 }\n             }\n         }\n", 
    "projectMetrics": {
      "numberSourceFiles": 552, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 234, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 312004656, 
        "hostName": "spirals-bears", 
        "totalMemory": 487063552, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 1:02:06 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/267371558/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            109
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 110
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:58:28 PM", 
      "totalDuration": 211
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 273, 
        "numberRunning": 274, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/269449386", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "detail": "value too high", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/269490884", 
        "date": "Aug 29, 2017 10:34:59 AM", 
        "id": 269490884
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/269449386", 
        "date": "Aug 29, 2017 7:12:38 AM", 
        "id": 269449386
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/2ff8f21543727590a0f66adc9fc72b0dd6b5e2c9", 
        "sha": "2ff8f21543727590a0f66adc9fc72b0dd6b5e2c9", 
        "branchName": "master", 
        "date": "Aug 29, 2017 10:30:58 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6285adfbc85ada862b4d2d3f8a0621a2f32cb29f", 
        "sha": "6285adfbc85ada862b4d2d3f8a0621a2f32cb29f", 
        "branchName": "master", 
        "date": "Aug 29, 2017 7:11:18 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-269449386-269490884", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 552, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 234, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 6
      }
    }, 
    "bugId": "Bears_126", 
    "diff": "diff --git a/src/org/traccar/protocol/Gt06ProtocolDecoder.java b/src/org/traccar/protocol/Gt06ProtocolDecoder.java\nindex d8da7e6d..5c83f934 100644\n--- a/src/org/traccar/protocol/Gt06ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gt06ProtocolDecoder.java\n@@ -182,6 +182,9 @@ public class Gt06ProtocolDecoder extends BaseProtocolDecoder {\n         }\n \n         if (length > 0) {\n+            if (length > 12) {\n+                length = 12;\n+            }\n             buf.skipBytes(length - 12); // skip reserved\n         }\n \n@@ -202,7 +205,7 @@ public class Gt06ProtocolDecoder extends BaseProtocolDecoder {\n                 buf.readUnsignedShort(), buf.readUnsignedByte(), buf.readUnsignedShort(), buf.readUnsignedMedium())));\n \n         if (length > 0) {\n-            buf.skipBytes(length - 8);\n+            buf.skipBytes(length - (hasLength ? 9 : 8));\n         }\n \n         return true;\n@@ -462,6 +465,7 @@ public class Gt06ProtocolDecoder extends BaseProtocolDecoder {\n \n             if (hasLbs(type)) {\n                 decodeLbs(position, buf, hasStatus(type));\n+                buf.skipBytes(-1);\n             }\n \n             if (hasStatus(type)) {\n@@ -573,7 +577,9 @@ public class Gt06ProtocolDecoder extends BaseProtocolDecoder {\n                 getLastLocation(position, position.getDeviceTime());\n             }\n \n-            decodeLbs(position, buf, true);\n+            if (decodeLbs(position, buf, true)) {\n+                buf.skipBytes(1); //Extended data\n+            }\n \n             buf.skipBytes(buf.readUnsignedByte()); // additional cell towers\n             buf.skipBytes(buf.readUnsignedByte()); // wifi access point\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 334368408, 
        "hostName": "spirals-bears", 
        "totalMemory": 493355008, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:59:03 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/269449386/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            102
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 104
        }, 
        "testing": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:55:40 PM", 
      "totalDuration": 198
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 274, 
        "numberRunning": 275, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/273118899", 
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException", 
          "detail": "Not enough readable bytes - Need 2, maximum is 1", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.EelinkProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EelinkProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/273136493", 
        "date": "Sep 8, 2017 3:47:10 AM", 
        "id": 273136493
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/273118899", 
        "date": "Sep 8, 2017 2:15:19 AM", 
        "id": 273118899
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/3aebd92cc3781b417ded6260d1300434b1418e7e", 
        "sha": "3aebd92cc3781b417ded6260d1300434b1418e7e", 
        "branchName": "master", 
        "date": "Sep 7, 2017 6:45:40 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/5e481bfc1596de062093c5bc01cf168ed906aafc", 
        "sha": "5e481bfc1596de062093c5bc01cf168ed906aafc", 
        "branchName": "master", 
        "date": "Sep 8, 2017 2:13:53 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-273118899-273136493", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_127", 
    "diff": "diff --git a/src/org/traccar/protocol/EelinkProtocolDecoder.java b/src/org/traccar/protocol/EelinkProtocolDecoder.java\nindex 11d111e5..2526282b 100644\n--- a/src/org/traccar/protocol/EelinkProtocolDecoder.java\n+++ b/src/org/traccar/protocol/EelinkProtocolDecoder.java\n@@ -160,7 +160,9 @@ public class EelinkProtocolDecoder extends BaseProtocolDecoder {\n \n             if (statusType == 0x01 || statusType == 0x02 || statusType == 0x03) {\n                 buf.readUnsignedInt(); // device time\n-                decodeStatus(position, buf.readUnsignedShort());\n+                if (buf.readableBytes() >= 2) {\n+                    decodeStatus(position, buf.readUnsignedShort());\n+                }\n             }\n \n         }\n", 
    "projectMetrics": {
      "numberSourceFiles": 551, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 235, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 328784272, 
        "hostName": "spirals-bears", 
        "totalMemory": 488112128, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:53:08 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/273118899/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 103
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:49:46 PM", 
      "totalDuration": 195
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 274, 
        "numberRunning": 275, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/273236004", 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.H02ProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/273269445", 
        "date": "Sep 8, 2017 1:57:24 PM", 
        "id": 273269445
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/273236004", 
        "date": "Sep 8, 2017 11:58:51 AM", 
        "id": 273236004
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/12586966b63f58e5a008b17f8689110fcd3f5809", 
        "sha": "12586966b63f58e5a008b17f8689110fcd3f5809", 
        "branchName": "master", 
        "date": "Sep 8, 2017 1:56:00 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/2721bf4adc12eeacf19c00af30e266ae65e6a4a9", 
        "sha": "2721bf4adc12eeacf19c00af30e266ae65e6a4a9", 
        "branchName": "master", 
        "date": "Sep 8, 2017 11:56:44 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-273236004-273269445", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 551, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 235, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_128", 
    "diff": "diff --git a/src/org/traccar/protocol/H02ProtocolDecoder.java b/src/org/traccar/protocol/H02ProtocolDecoder.java\nindex c31f9ed..aea8f0b 100644\n--- a/src/org/traccar/protocol/H02ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/H02ProtocolDecoder.java\n@@ -152,7 +152,6 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d+),\")                     // imei\n             .groupBegin()\n             .text(\"VP1,\")\n-            .expression(\"[ABV],\")\n             .or()\n             .groupBegin()\n             .text(\"V1,\")\n@@ -164,7 +163,7 @@ public class H02ProtocolDecoder extends BaseProtocolDecoder {\n             .groupEnd()\n             .number(\"(?:(dd)(dd)(dd))?,\")        // time (hhmmss)\n             .groupEnd()\n-            .expression(\"([AV])?,\")              // validity\n+            .expression(\"([ABV])?,\")             // validity\n             .groupBegin()\n             .number(\"-(d+)-(d+.d+),\")            // latitude\n             .or()\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 270145352, 
        "hostName": "spirals-bears", 
        "totalMemory": 462422016, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:50:50 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/273236004/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            104
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 105
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:47:22 PM", 
      "totalDuration": 202
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 275, 
        "numberRunning": 276, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/274558862", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "position is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/274871026", 
        "date": "Sep 13, 2017 4:51:56 AM", 
        "id": 274871026
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/274558862", 
        "date": "Sep 12, 2017 1:15:32 PM", 
        "id": 274558862
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/e05f0b83a911c522123a5a2cd14d6c16bd2de027", 
        "sha": "e05f0b83a911c522123a5a2cd14d6c16bd2de027", 
        "branchName": "master", 
        "date": "Sep 13, 2017 4:49:58 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/195e7b5b45c08fa4fad4f9c8797f8807ded1dbea", 
        "sha": "195e7b5b45c08fa4fad4f9c8797f8807ded1dbea", 
        "branchName": "master", 
        "date": "Sep 12, 2017 1:13:03 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-274558862-274871026", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_129", 
    "diff": "diff --git a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\nindex 988fd71c..090e0281 100644\n--- a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n@@ -65,7 +65,7 @@ public class Gl200TextProtocolDecoder extends BaseProtocolDecoder {\n             .expression(\"(?:[0-9A-Z]{17},)?\")    // vin\n             .expression(\"(?:[^,]+)?,\")           // device name\n             .number(\"(xx),\")                     // state\n-            .expression(\"(?:[0-9F]{20})?,\")      // iccid\n+            .expression(\"(?:[0-9Ff]{20})?,\")     // iccid\n             .number(\"(d{1,2}),\")                 // rssi\n             .number(\"d{1,2},\")\n             .expression(\"[01],\")                 // external power\n", 
    "projectMetrics": {
      "numberSourceFiles": 552, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 236, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 255237072, 
        "hostName": "spirals-bears", 
        "totalMemory": 443547648, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:47:59 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/274558862/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            104
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 105
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:44:34 PM", 
      "totalDuration": 198
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 275, 
        "numberRunning": 276, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/275432141", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/275689407", 
        "date": "Sep 15, 2017 1:48:30 AM", 
        "id": 275689407
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/275432141", 
        "date": "Sep 14, 2017 1:44:45 PM", 
        "id": 275432141
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c82fd979ad17ecfb7dd8f3e366c067b66f4cdabc", 
        "sha": "c82fd979ad17ecfb7dd8f3e366c067b66f4cdabc", 
        "branchName": "master", 
        "date": "Sep 14, 2017 4:46:40 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/1e7d036f1f076f380dca358432bb4ab2b7be255f", 
        "sha": "1e7d036f1f076f380dca358432bb4ab2b7be255f", 
        "branchName": "master", 
        "date": "Sep 14, 2017 1:43:14 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-275432141-275689407", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 553, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 236, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_130", 
    "diff": "diff --git a/src/org/traccar/protocol/MeitrackProtocolDecoder.java b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\nindex 469ef3f7..2d0590f5 100644\n--- a/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n+++ b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n@@ -69,7 +69,7 @@ public class MeitrackProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(x+)?|\")                    // adc2\n             .number(\"(x+)?|\")                    // adc3\n             .number(\"(x+)|\")                     // battery\n-            .number(\"(x+),\")                     // power\n+            .number(\"(x+)?,\")                    // power\n             .groupBegin()\n             .expression(\"([^,]+)?,\")             // event specific\n             .expression(\"[^,]*,\")                // reserved\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 308068064, 
        "hostName": "spirals-bears", 
        "totalMemory": 474480640, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 12:47:04 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/275432141/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            104
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 104
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 12:43:37 PM", 
      "totalDuration": 200
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 275, 
        "numberRunning": 276, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NumberFormatException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/292295467", 
      "failureDetails": [
        {
          "failureName": "java.lang.NumberFormatException", 
          "detail": "Value out of range. Value:\"FB2E\" Radix:16", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/292405214", 
        "date": "Oct 25, 2017 4:36:29 AM", 
        "id": 292405214
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/292295467", 
        "date": "Oct 24, 2017 10:54:48 PM", 
        "id": 292295467
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/c72e261e92166c0f775ad2378637ee778e65564b", 
        "sha": "c72e261e92166c0f775ad2378637ee778e65564b", 
        "branchName": "master", 
        "date": "Oct 24, 2017 7:34:33 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/bf42fd74dc38459ffafcf4a329634504efc90d40", 
        "sha": "bf42fd74dc38459ffafcf4a329634504efc90d40", 
        "branchName": "master", 
        "date": "Oct 24, 2017 10:52:37 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-292295467-292405214", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_131", 
    "diff": "diff --git a/src/org/traccar/protocol/MeitrackProtocolDecoder.java b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\nindex efc9c24d..a74d5ca6 100644\n--- a/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n+++ b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n@@ -219,13 +219,13 @@ public class MeitrackProtocolDecoder extends BaseProtocolDecoder {\n \n         if (parser.hasNext()) {\n             for (String temp : parser.next().split(\"\\\\|\")) {\n-                int index = Integer.valueOf(temp.substring(0, 2), 16);\n+                int index = Integer.parseInt(temp.substring(0, 2), 16);\n                 if (protocol >= 3) {\n-                    double value = Short.valueOf(temp.substring(2), 16);\n+                    double value = (short) Integer.parseInt(temp.substring(2), 16);\n                     position.set(Position.PREFIX_TEMP + index, value * 0.01);\n                 } else {\n-                    double value = Byte.valueOf(temp.substring(2, 4), 16);\n-                    value += (value < 0 ? -0.01 : 0.01) * Integer.valueOf(temp.substring(4), 16);\n+                    double value = Byte.parseByte(temp.substring(2, 4), 16);\n+                    value += (value < 0 ? -0.01 : 0.01) * Integer.parseInt(temp.substring(4), 16);\n                     position.set(Position.PREFIX_TEMP + index, value);\n                 }\n             }\n", 
    "projectMetrics": {
      "numberSourceFiles": 552, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 236, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326542360, 
        "hostName": "spirals-bears", 
        "totalMemory": 481820672, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:22:36 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/292295467/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            102
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 103
        }, 
        "testing": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:19:16 AM", 
      "totalDuration": 196
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 281, 
        "numberRunning": 282, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/301176898", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gl200TextProtocolDecoderTest", 
          "detail": "not a list", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/301185806", 
        "date": "Nov 13, 2017 4:14:37 AM", 
        "id": 301185806
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/301176898", 
        "date": "Nov 13, 2017 3:39:48 AM", 
        "id": 301176898
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/0a8f30a572b1e64ff3e1d67281bf9fa3f40b9ccb", 
        "sha": "0a8f30a572b1e64ff3e1d67281bf9fa3f40b9ccb", 
        "branchName": "master", 
        "date": "Nov 12, 2017 7:12:24 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/395ed2c3845d20b0dbb25e39806dfdd37c2ec0d3", 
        "sha": "395ed2c3845d20b0dbb25e39806dfdd37c2ec0d3", 
        "branchName": "master", 
        "date": "Nov 12, 2017 6:37:14 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-301176898-301185806", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 563, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 241, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_132", 
    "diff": "diff --git a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\nindex 2f03cbb8..46a530ef 100644\n--- a/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gl200TextProtocolDecoder.java\n@@ -216,7 +216,7 @@ public class Gl200TextProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"(d{1,7}.d)?,\")              // odometer\n             .number(\"(d{5}:dd:dd)?,\")            // hour meter\n             .number(\"(x+)?,\")                    // adc 1\n-            .number(\"(x+)?,\")                    // adc 2\n+            .number(\"(x+)?,\").optional()         // adc 2\n             .number(\"(d{1,3})?,\")                // battery\n             .number(\"(?:(xx)(xx)(xx))?,\")        // device status\n             .expression(\"(.*)\")                  // additional data\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 263118408, 
        "hostName": "spirals-bears", 
        "totalMemory": 455081984, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:09:03 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/301176898/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            105
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 105
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 11, 2018 12:05:43 AM", 
      "totalDuration": 193
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 282, 
        "numberRunning": 283, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/305623200", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "buffer is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Jt600FrameDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Jt600FrameDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/305713931", 
        "date": "Nov 22, 2017 10:47:50 AM", 
        "id": 305713931
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/305623200", 
        "date": "Nov 22, 2017 5:39:12 AM", 
        "id": 305623200
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/6c0fe165f72a998d447d0983c94e234681a6b680", 
        "sha": "6c0fe165f72a998d447d0983c94e234681a6b680", 
        "branchName": "master", 
        "date": "Nov 22, 2017 10:46:13 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/43ffaf8c3bb0c4937f8d9185f47a95530d118931", 
        "sha": "43ffaf8c3bb0c4937f8d9185f47a95530d118931", 
        "branchName": "master", 
        "date": "Nov 21, 2017 8:37:20 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-305623200-305713931", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_133", 
    "diff": "diff --git a/src/org/traccar/protocol/Jt600FrameDecoder.java b/src/org/traccar/protocol/Jt600FrameDecoder.java\nindex 5606ae1f..261f46fe 100644\n--- a/src/org/traccar/protocol/Jt600FrameDecoder.java\n+++ b/src/org/traccar/protocol/Jt600FrameDecoder.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2012 - 2016 Anton Tananaev (anton@traccar.org)\n+ * Copyright 2012 - 2017 Anton Tananaev (anton@traccar.org)\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -37,7 +37,7 @@ public class Jt600FrameDecoder extends FrameDecoder {\n         if (type == '$') {\n             boolean longFormat = buf.getUnsignedByte(buf.readerIndex() + 1) == 0x75;\n             int length = buf.getUnsignedShort(buf.readerIndex() + (longFormat ? 8 : 7)) + 10;\n-            if (length >= buf.readableBytes()) {\n+            if (length <= buf.readableBytes()) {\n                 return buf.readBytes(length);\n             }\n         } else if (type == '(') {\n", 
    "projectMetrics": {
      "numberSourceFiles": 566, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 242, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 302340272, 
        "hostName": "spirals-bears", 
        "totalMemory": 471859200, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 11, 2018 12:01:22 AM", 
      "projectRootPomPath": "./workspace/traccar/traccar/305623200/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            101
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 101
        }, 
        "testing": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:57:59 PM", 
      "totalDuration": 195
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 283, 
        "numberRunning": 284, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/307668730", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TmgProtocolDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TmgProtocolDecoderTest", 
          "detail": "position is null", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/307760931", 
        "date": "Nov 27, 2017 8:14:07 AM", 
        "id": 307760931
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/307668730", 
        "date": "Nov 27, 2017 1:37:48 AM", 
        "id": 307668730
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/4f772b76b08d7515cf27c7bfda819612aeea26f9", 
        "sha": "4f772b76b08d7515cf27c7bfda819612aeea26f9", 
        "branchName": "master", 
        "date": "Nov 27, 2017 8:11:47 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/cef10080c6012f42823d616b55c6b24215cd9253", 
        "sha": "cef10080c6012f42823d616b55c6b24215cd9253", 
        "branchName": "master", 
        "date": "Nov 26, 2017 4:35:57 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-307668730-307760931", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 569, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 243, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_134", 
    "diff": "diff --git a/src/org/traccar/protocol/TmgProtocolDecoder.java b/src/org/traccar/protocol/TmgProtocolDecoder.java\nindex a7ca35f7..5e852aff 100644\n--- a/src/org/traccar/protocol/TmgProtocolDecoder.java\n+++ b/src/org/traccar/protocol/TmgProtocolDecoder.java\n@@ -70,7 +70,7 @@ public class TmgProtocolDecoder extends BaseProtocolDecoder {\n             .number(\"[^,]*,\")                    // cid\n             .number(\"(d+),\")                     // rssi\n             .number(\"(d+),\")                     // satellites\n-            .number(\"(d+),\")                     // battery level\n+            .number(\"[^,]*,\")                    // battery level\n             .expression(\"([01]),\")               // ignition\n             .expression(\"[LH]{4},\")              // input\n             .expression(\"[NT]{4},\")              // tamper status\n@@ -166,11 +166,10 @@ public class TmgProtocolDecoder extends BaseProtocolDecoder {\n \n         }\n \n-        if (parser.hasNext()) {\n+        if (parser.hasNext(6)) {\n \n             position.set(Position.KEY_RSSI, parser.nextInt());\n             position.set(Position.KEY_SATELLITES, parser.nextInt());\n-            position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());\n             position.set(Position.KEY_IGNITION, parser.nextInt() == 1);\n             position.set(Position.PREFIX_ADC + 1, parser.nextDouble());\n             position.set(Position.PREFIX_ADC + 2, parser.nextDouble());\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 320715144, 
        "hostName": "spirals-bears", 
        "totalMemory": 496500736, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:56:20 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/307668730/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            101
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 101
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:52:54 PM", 
      "totalDuration": 198
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 283, 
        "numberRunning": 284, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/308288525", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "buffer is null", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TmgFrameDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TmgFrameDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/308872339", 
        "date": "Nov 29, 2017 10:15:25 AM", 
        "id": 308872339
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/308288525", 
        "date": "Nov 28, 2017 8:10:06 AM", 
        "id": 308288525
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/e12632548a71345acc0349ba9db1321cfa628911", 
        "sha": "e12632548a71345acc0349ba9db1321cfa628911", 
        "branchName": "master", 
        "date": "Nov 29, 2017 10:13:45 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/0adacee61b3ddaacdbac7f47773e9dcbcf5b083c", 
        "sha": "0adacee61b3ddaacdbac7f47773e9dcbcf5b083c", 
        "branchName": "master", 
        "date": "Nov 28, 2017 8:07:51 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-308288525-308872339", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_135", 
    "diff": "diff --git a/src/org/traccar/protocol/TmgFrameDecoder.java b/src/org/traccar/protocol/TmgFrameDecoder.java\nindex 07b4162d..549c4246 100644\n--- a/src/org/traccar/protocol/TmgFrameDecoder.java\n+++ b/src/org/traccar/protocol/TmgFrameDecoder.java\n@@ -47,13 +47,13 @@ public class TmgFrameDecoder extends FrameDecoder {\n             }\n         });\n \n-        if (beginIndex > 0) {\n+        if (beginIndex >= 0) {\n \n             buf.readerIndex(beginIndex);\n \n             int endIndex = buf.indexOf(beginIndex, buf.writerIndex(), (byte) '\\n');\n \n-            if (endIndex > 0) {\n+            if (endIndex >= 0) {\n                 ChannelBuffer frame = buf.readBytes(endIndex - beginIndex);\n                 buf.readByte(); // delimiter\n                 return frame;\n", 
    "projectMetrics": {
      "numberSourceFiles": 569, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 243, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 246254968, 
        "hostName": "spirals-bears", 
        "totalMemory": 430440448, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:52:54 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/308288525/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 103
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:49:32 PM", 
      "totalDuration": 195
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 283, 
        "numberRunning": 284, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/309459456", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.EelinkProtocolEncoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testEncode", 
          "testClass": "org.traccar.protocol.EelinkProtocolEncoderTest", 
          "detail": "expected:<454c00[1e]b41a0123456789012345...> but was:<454c00[22]b41a0123456789012345...>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/309718203", 
        "date": "Nov 30, 2017 10:08:57 PM", 
        "id": 309718203
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/309459456", 
        "date": "Nov 30, 2017 12:20:47 PM", 
        "id": 309459456
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/56e496c728faede7a6b26a382e87081dec569f78", 
        "sha": "56e496c728faede7a6b26a382e87081dec569f78", 
        "branchName": "master", 
        "date": "Nov 30, 2017 1:07:03 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/8e567d133c3d342cebd505c6d2effe6b2a41cb7b", 
        "sha": "8e567d133c3d342cebd505c6d2effe6b2a41cb7b", 
        "branchName": "master", 
        "date": "Nov 30, 2017 12:18:57 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-309459456-309718203", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 569, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 243, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_136", 
    "diff": "diff --git a/src/org/traccar/protocol/EelinkProtocolEncoder.java b/src/org/traccar/protocol/EelinkProtocolEncoder.java\nindex 41d76b24..76865a03 100644\n--- a/src/org/traccar/protocol/EelinkProtocolEncoder.java\n+++ b/src/org/traccar/protocol/EelinkProtocolEncoder.java\n@@ -65,7 +65,7 @@ public class EelinkProtocolEncoder extends BaseProtocolEncoder {\n         if (connectionless) {\n             result.writeByte('E');\n             result.writeByte('L');\n-            result.writeShort(2 + 2 + 2 + buf.readableBytes()); // length\n+            result.writeShort(2 + buf.readableBytes()); // length\n             result.writeShort(checksum(buf.toByteBuffer()));\n         }\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 265845480, 
        "hostName": "spirals-bears", 
        "totalMemory": 456654848, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:51:23 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/309459456/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            106
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 106
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:47:59 PM", 
      "totalDuration": 197
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 295, 
        "numberRunning": 296, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/313257147", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[24243030363545363836313137323033353932363639357c3137303931323135333235372c2d37392e3337333835332c34332e3736353631392c302c302c7c3441]> but was:<[]>", 
          "isError": false, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.TotemFrameDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.TotemFrameDecoderTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/313260584", 
        "date": "Dec 8, 2017 2:01:45 AM", 
        "id": 313260584
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/313257147", 
        "date": "Dec 8, 2017 1:49:32 AM", 
        "id": 313257147
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/d3e39051984592f181b04256e38c2396d0cda78d", 
        "sha": "d3e39051984592f181b04256e38c2396d0cda78d", 
        "branchName": "master", 
        "date": "Dec 7, 2017 4:58:58 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/f839ca4c24d80dcd78b5ad1d65f10cdf534d94d8", 
        "sha": "f839ca4c24d80dcd78b5ad1d65f10cdf534d94d8", 
        "branchName": "master", 
        "date": "Dec 7, 2017 4:47:26 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-313257147-313260584", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_137", 
    "diff": "diff --git a/src/org/traccar/protocol/TotemFrameDecoder.java b/src/org/traccar/protocol/TotemFrameDecoder.java\nindex 6940d7b4..6c9b1455 100644\n--- a/src/org/traccar/protocol/TotemFrameDecoder.java\n+++ b/src/org/traccar/protocol/TotemFrameDecoder.java\n@@ -42,8 +42,8 @@ public class TotemFrameDecoder extends FrameDecoder {\n \n         int length;\n \n-        int flagIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), new StringFinder(\"AA\"));\n-        if (flagIndex != -1 && flagIndex - beginIndex == 6) {\n+        int separatorIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '|');\n+        if (separatorIndex > 0 && separatorIndex - beginIndex > 19) {\n             length = Integer.parseInt(buf.toString(buf.readerIndex() + 2, 4, StandardCharsets.US_ASCII));\n         } else {\n             length = Integer.parseInt(buf.toString(buf.readerIndex() + 2, 2, StandardCharsets.US_ASCII), 16);\n", 
    "projectMetrics": {
      "numberSourceFiles": 570, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 245, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 260820056, 
        "hostName": "spirals-bears", 
        "totalMemory": 447741952, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:42:18 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/313257147/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            103
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 104
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            12
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 12
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:38:59 PM", 
      "totalDuration": 192
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 297, 
        "numberRunning": 298, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/316227226", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.IndexOutOfBoundsException", 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.Gt06ProtocolDecoderTest", 
          "detail": "Not enough readable bytes - Need 6, maximum is 0", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/316639485", 
        "date": "Dec 14, 2017 10:39:07 PM", 
        "id": 316639485
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/316227226", 
        "date": "Dec 14, 2017 4:25:33 AM", 
        "id": 316227226
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/1771c22baca9c43556e5cfc4ec705d0a071a78e8", 
        "sha": "1771c22baca9c43556e5cfc4ec705d0a071a78e8", 
        "branchName": "master", 
        "date": "Dec 14, 2017 1:36:22 PM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/0c8bf8867456c55231f2aabf36970504d4e8cab7", 
        "sha": "0c8bf8867456c55231f2aabf36970504d4e8cab7", 
        "branchName": "master", 
        "date": "Dec 13, 2017 7:23:08 PM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-316227226-316639485", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 573, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 247, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_138", 
    "diff": "diff --git a/src/org/traccar/protocol/Gt06ProtocolDecoder.java b/src/org/traccar/protocol/Gt06ProtocolDecoder.java\nindex 0fdd5ba1..adce11ea 100644\n--- a/src/org/traccar/protocol/Gt06ProtocolDecoder.java\n+++ b/src/org/traccar/protocol/Gt06ProtocolDecoder.java\n@@ -554,14 +554,14 @@ public class Gt06ProtocolDecoder extends BaseProtocolDecoder {\n             getLastLocation(position, dateBuilder.getDate());\n \n             int mcc = buf.readUnsignedShort();\n-            int mnc = buf.readUnsignedByte();\n+            int mnc = BitUtil.check(mcc, 15) ? buf.readUnsignedShort() : buf.readUnsignedByte();\n             Network network = new Network();\n             for (int i = 0; i < 7; i++) {\n                 int lac = longFormat ? buf.readInt() : buf.readUnsignedShort();\n                 int cid = longFormat ? (int) buf.readLong() : buf.readUnsignedMedium();\n                 int rssi = -buf.readUnsignedByte();\n                 if (lac > 0) {\n-                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid, rssi));\n+                    network.addCellTower(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid, rssi));\n                 }\n             }\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 269192096, 
        "hostName": "spirals-bears", 
        "totalMemory": 456654848, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:37:27 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/316227226/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            107
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 107
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:34:02 PM", 
      "totalDuration": 198
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 298, 
        "numberRunning": 299, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.ArrayIndexOutOfBoundsException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/traccar/traccar/322427143", 
      "failureDetails": [
        {
          "failureName": "java.lang.ArrayIndexOutOfBoundsException", 
          "detail": "2", 
          "isError": true, 
          "testMethod": "testDecode", 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.traccar.protocol.MeitrackProtocolDecoderTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/322428590", 
        "date": "Dec 28, 2017 5:02:38 AM", 
        "id": 322428590
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/traccar/traccar/builds/322427143", 
        "date": "Dec 28, 2017 4:53:30 AM", 
        "id": 322427143
      }
    }, 
    "repository": {
      "name": "traccar-traccar", 
      "url": "https://github.com/traccar/traccar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4038949
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/traccar/traccar/commit/ee2fbc5cb8bb5dc017eed3db3785fb8c2166df67", 
        "sha": "ee2fbc5cb8bb5dc017eed3db3785fb8c2166df67", 
        "branchName": "master", 
        "date": "Dec 28, 2017 5:00:41 AM", 
        "repoName": "traccar/traccar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/traccar/traccar/commit/6e0be9857bc26c59936d4446ef15488bd90f5150", 
        "sha": "6e0be9857bc26c59936d4446ef15488bd90f5150", 
        "branchName": "master", 
        "date": "Dec 28, 2017 4:51:41 AM", 
        "repoName": "traccar/traccar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/traccar-traccar-322427143-322428590", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_139", 
    "diff": "diff --git a/src/org/traccar/protocol/MeitrackProtocolDecoder.java b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\nindex 1fd1bb3a..259283c1 100644\n--- a/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n+++ b/src/org/traccar/protocol/MeitrackProtocolDecoder.java\n@@ -259,7 +259,7 @@ public class MeitrackProtocolDecoder extends BaseProtocolDecoder {\n             boolean started = data[0].charAt(0) == '0';\n             position.set(\"taximeterOn\", started);\n             position.set(\"taximeterStart\", data[1]);\n-            if (!started) {\n+            if (data.length > 2) {\n                 position.set(\"taximeterEnd\", data[2]);\n                 position.set(\"taximeterDistance\", Integer.parseInt(data[3]));\n                 position.set(\"taximeterFare\", Integer.parseInt(data[4]));\n", 
    "projectMetrics": {
      "numberSourceFiles": 575, 
      "numberLibrariesFailingModule": 96, 
      "numberTestFiles": 248, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 277785928, 
        "hostName": "spirals-bears", 
        "totalMemory": 461897728, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Dec 10, 2018 11:32:24 PM", 
      "projectRootPomPath": "./workspace/traccar/traccar/322427143/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            110
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 111
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            13
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 13
        }
      }, 
      "reproductionDateBeginning": "Dec 10, 2018 11:28:50 PM", 
      "totalDuration": 209
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 80, 
        "numberRunning": 83, 
        "numberFailing": 0, 
        "numberErroring": 3, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/2018swecapstone/h2ms/356638992", 
      "failingClasses": [
        {
          "numberPassing": 79, 
          "numberRunning": 82, 
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest", 
          "numberFailing": 0, 
          "numberErroring": 3, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "test_format_quarter_invalid_values_result_in_nulls", 
          "isError": true, 
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "test_format_month_invalid_values_result_in_null", 
          "isError": true, 
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "test_format_week_invalid_values_result_in_null", 
          "isError": true, 
          "testClass": "edu.harvard.h2ms.web.init.H2msRestUtilsTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/356666847", 
        "date": "Mar 22, 2018 2:42:47 AM", 
        "id": 356666847
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/356638992", 
        "date": "Mar 22, 2018 1:07:15 AM", 
        "id": 356638992
      }
    }, 
    "repository": {
      "name": "2018swecapstone-h2ms", 
      "url": "https://github.com/2018swecapstone/h2ms", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 121564633
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/05577a3f1105af6c6ed55d1e05258de01a3d7d7b", 
        "sha": "05577a3f1105af6c6ed55d1e05258de01a3d7d7b", 
        "branchName": "backend", 
        "date": "Mar 22, 2018 2:39:46 AM", 
        "repoName": "2018swecapstone/h2ms"
      }, 
      "buggyBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/fb8ebc2c2ecc8aba60da852a48e076ff1312c9eb", 
        "sha": "fb8ebc2c2ecc8aba60da852a48e076ff1312c9eb", 
        "branchName": "backend", 
        "date": "Mar 22, 2018 1:04:15 AM", 
        "repoName": "2018swecapstone/h2ms"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/2018swecapstone-h2ms-356638992-356666847", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 100, 
      "numberLibrariesFailingModule": 123, 
      "numberTestFiles": 4, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 13, 
        "numberDeleted": 24
      }
    }, 
    "bugId": "Bears_140", 
    "diff": "diff --git a/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java b/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\nindex e6056ecf..ab44c78f 100644\n--- a/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n+++ b/src/main/java/edu/harvard/h2ms/service/utils/H2msRestUtils.java\n@@ -19,7 +19,8 @@ public class H2msRestUtils {\n      *      \"2018-03-21T17:58:05.742+0000\"  --> \"March (2018)\"\n      * @param events\n      * @param timeframe\n-     * @return\n+     * @return - when events are emptys a null string list is returned\n+     *         - when timeframe is not a valid value a null string list is returned\n      */\n     public static List<String> extractParsedTimestamps(List<Event> events, String timeframe){\n         if(events.isEmpty()) {\n@@ -49,6 +50,15 @@ public class H2msRestUtils {\n     }\n \n     public static String formatMonth(Integer month, Integer year){\n+        // Null cases\n+        if (month == null || year == null)\n+            return null;\n+\n+        // Invalid value cases\n+        if(month < 0 || month > 11 || year < 1)\n+            return null;\n+\n+        // Format Month\n         if(month.equals(0)){\n             return \"January \" + \"(\" + year + \")\";\n         } else if(month.equals(1)){\n@@ -71,20 +81,29 @@ public class H2msRestUtils {\n             return \"October \" + \"(\" + year + \")\";\n         } else if(month.equals(10)){\n             return \"November \" + \"(\" + year + \")\";\n-        } else if(month.equals(11)){\n+        } else if (month.equals(11)){\n             return \"December \" + \"(\" + year + \")\";\n         } else {\n-            return \"\";\n+            return null;\n         }\n \n     }\n \n     public static String formatWeek(Integer week, Integer year){\n \n-        // Special cases (ie. 11, 12, 13 are postfixed with 'th')\n+        // Null cases\n+        if(week == null || year == null)\n+                return null;\n+\n+        // Invalid value cases\n+        if(week < 1 || week > 52 || year < 1)\n+            return null;\n+\n+        // Format Week for special cases (ie. 11, 12, 13 are postfixed with 'th')\n         if(week == 11 || week == 12 || week == 13)\n             return String.valueOf(week) + \"th (\" + year + \")\";\n \n+        // Format Week\n         char digit;\n         if(week.toString().length() == 2){\n             digit = week.toString().charAt(1);\n@@ -103,6 +122,16 @@ public class H2msRestUtils {\n     }\n \n     public static String formatQuarter(Integer month, Integer year){\n+\n+        // Null cases\n+        if(month == null || year == null)\n+             return null;\n+\n+        // Invalid value cases\n+        if(month < 0 || month > 11 || year < 1)\n+            return null;\n+\n+        // Format month\n         if (month == 0 || month == 1 || month == 2 ) {\n             return \"Q1 (\" + year + \")\";\n         } else if (month == 3 || month == 4 || month == 5 ) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239707528, 
        "hostName": "spirals-bears", 
        "totalMemory": 392691712, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 1, 2018 7:33:47 AM", 
      "projectRootPomPath": "./workspace/2018swecapstone/h2ms/356638992/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            62
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 64
        }, 
        "testing": {
          "stepDurations": [
            30
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 30
        }, 
        "cloning": {
          "stepDurations": [
            3
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 3
        }
      }, 
      "reproductionDateBeginning": "Sep 1, 2018 7:31:16 AM", 
      "totalDuration": 145
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 102, 
        "numberRunning": 104, 
        "numberFailing": 1, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "org.springframework.security.core.userdetails.UsernameNotFoundException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/2018swecapstone/h2ms/363210218", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is \"jqadams@h2ms.org\"\n     but: was \"JqAdAmS@h2Ms.OrG\"", 
          "isError": false, 
          "testMethod": "testEmailIsLowerCase", 
          "testClass": "edu.harvard.h2ms.domain.core.UserTest"
        }, 
        {
          "failureName": "org.springframework.security.core.userdetails.UsernameNotFoundException", 
          "detail": "Unknown user: JqAdAmS@h2Ms.oRg", 
          "isError": true, 
          "testMethod": "testLoadUserByUsernameIsCaseInsensitive", 
          "testClass": "edu.harvard.h2ms.service.UserDetailsServiceTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "edu.harvard.h2ms.service.UserDetailsServiceTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "edu.harvard.h2ms.domain.core.UserTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/363627522", 
        "date": "Apr 8, 2018 1:46:48 AM", 
        "id": 363627522
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/363210218", 
        "date": "Apr 6, 2018 7:14:25 PM", 
        "id": 363210218
      }
    }, 
    "repository": {
      "name": "2018swecapstone-h2ms", 
      "url": "https://github.com/2018swecapstone/h2ms", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 121564633
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/ef42b1078bd7f6699a5c47d01627360e03fc1705", 
        "sha": "ef42b1078bd7f6699a5c47d01627360e03fc1705", 
        "branchName": "master", 
        "date": "Apr 8, 2018 1:43:06 AM", 
        "repoName": "2018swecapstone/h2ms"
      }, 
      "buggyBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/f5e7c88086227b56f4eee5c7e456fd1acc1a4f95", 
        "sha": "f5e7c88086227b56f4eee5c7e456fd1acc1a4f95", 
        "branchName": "master", 
        "date": "Apr 6, 2018 7:10:41 PM", 
        "repoName": "2018swecapstone/h2ms"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/2018swecapstone-h2ms-363210218-363627522", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_141", 
    "diff": "diff --git a/src/main/java/edu/harvard/h2ms/domain/core/User.java b/src/main/java/edu/harvard/h2ms/domain/core/User.java\nindex db6f76aa..ff0d57fd 100644\n--- a/src/main/java/edu/harvard/h2ms/domain/core/User.java\n+++ b/src/main/java/edu/harvard/h2ms/domain/core/User.java\n@@ -94,7 +94,7 @@ public class User implements UserDetails {\n         this.firstName = firstName;\r\n         this.middleName = middleName;\r\n         this.lastName = lastName;\r\n-        this.email = email;\r\n+        setEmail(email);\r\n         this.type = type;\r\n         setPassword(password);\r\n     }\r\n@@ -147,7 +147,8 @@ public class User implements UserDetails {\n     }\r\n \r\n     public void setEmail(String email) {\r\n-        this.email = email;\r\n+    \tif(email != null)\r\n+    \t\tthis.email = email.toLowerCase();\r\n     }\r\n \r\n     public String getNotificationFrequency() {\r\ndiff --git a/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java b/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\nindex 66f61f30..7288dfa3 100644\n--- a/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\n+++ b/src/main/java/edu/harvard/h2ms/service/UserDetailsServiceImpl.java\n@@ -16,7 +16,7 @@ public class UserDetailsServiceImpl implements UserDetailsService {\n \r\n     @Override\r\n     public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\r\n-        User user = userRepository.findOneByEmail(username);\r\n+        User user = userRepository.findOneByEmail(username.toLowerCase());\r\n         \r\n         if (user == null) {\r\n             throw new UsernameNotFoundException(String.format(\"Unknown user: %s\", username));\r\n", 
    "projectMetrics": {
      "numberSourceFiles": 100, 
      "numberLibrariesFailingModule": 131, 
      "numberTestFiles": 20, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326080760, 
        "hostName": "spirals-bears", 
        "totalMemory": 408944640, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 1:52:24 PM", 
      "projectRootPomPath": "./workspace/2018swecapstone/h2ms/363210218/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            64
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 65
        }, 
        "testing": {
          "stepDurations": [
            73
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 73
        }, 
        "cloning": {
          "stepDurations": [
            5
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 5
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 1:48:17 PM", 
      "totalDuration": 242
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1949, 
        "numberRunning": 1952, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/Activiti/Activiti/357660134/modules/activiti-engine", 
      "failingClasses": [
        {
          "numberPassing": 34, 
          "numberRunning": 35, 
          "testClass": "org.activiti.engine.test.bpmn.event.signal.SignalEventTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 9, 
          "numberRunning": 10, 
          "testClass": "org.activiti.engine.test.bpmn.event.message.MessageBoundaryEventTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testTimerOnUserTask", 
          "testClass": "org.activiti.engine.test.bpmn.event.timer.BoundaryTimerNonInterruptingEventTest", 
          "detail": "Activity should have not ended yet", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testSignalOnUserTask", 
          "testClass": "org.activiti.engine.test.bpmn.event.signal.SignalEventTest", 
          "detail": "Activity should have not ended yet", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "testMessageOnUserTask", 
          "testClass": "org.activiti.engine.test.bpmn.event.message.MessageBoundaryEventTest", 
          "detail": "Activity should have not ended yet", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/Activiti/Activiti/builds/359342518", 
        "date": "Mar 28, 2018 2:35:48 PM", 
        "id": 359342518
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/Activiti/Activiti/builds/357660134", 
        "date": "Mar 24, 2018 2:24:22 AM", 
        "id": 357660134
      }
    }, 
    "repository": {
      "name": "Activiti-Activiti", 
      "url": "https://github.com/Activiti/Activiti", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 5793738
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/Activiti/Activiti/commit/78b6b5f380d0bee2864b71cb5d2b65ec6536943a", 
        "sha": "78b6b5f380d0bee2864b71cb5d2b65ec6536943a", 
        "branchName": "5.x", 
        "date": "Mar 28, 2018 2:33:35 PM", 
        "repoName": "Activiti/Activiti"
      }, 
      "buggyBuild": {
        "url": "http://github.com/Activiti/Activiti/commit/8ddd177b8f70f6e25af810096aa43aaf87d28af2", 
        "sha": "8ddd177b8f70f6e25af810096aa43aaf87d28af2", 
        "branchName": "5.x", 
        "date": "Mar 24, 2018 2:22:12 AM", 
        "repoName": "Activiti/Activiti"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/Activiti-Activiti-357660134-359342518", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1286, 
      "numberLibrariesFailingModule": 61, 
      "numberTestFiles": 482, 
      "numberModules": 8
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 24
      }
    }, 
    "bugId": "Bears_142", 
    "diff": "diff --git a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\nindex 3828d899..8ca8dcad 100644\n--- a/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\n+++ b/modules/activiti-engine/src/main/java/org/activiti/engine/impl/history/handler/ActivityInstanceEndHandler.java\n@@ -15,17 +15,36 @@ package org.activiti.engine.impl.history.handler;\n \n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.delegate.ExecutionListener;\n+import org.activiti.engine.impl.bpmn.behavior.BoundaryEventActivityBehavior;\n import org.activiti.engine.impl.context.Context;\n import org.activiti.engine.impl.persistence.entity.ExecutionEntity;\n+import org.activiti.engine.impl.pvm.delegate.ActivityBehavior;\n+import org.activiti.engine.impl.pvm.process.TransitionImpl;\n+import org.activiti.engine.impl.pvm.runtime.InterpretableExecution;\n \n \n /**\n  * @author Tom Baeyens\n  */\n public class ActivityInstanceEndHandler implements ExecutionListener {\n-\n-  public void notify(DelegateExecution execution) {\n-    Context.getCommandContext().getHistoryManager()\n-      .recordActivityEnd((ExecutionEntity) execution);\n-  }\n+    \n+    public void notify(DelegateExecution execution) {\n+        if (!isSourceTransitionNotExecutionActivityAndNonInterrupting((ExecutionEntity) execution)) {\n+            Context.getCommandContext().getHistoryManager()\n+                    .recordActivityEnd((ExecutionEntity) execution);\n+        }\n+    }\n+    \n+    private boolean isSourceTransitionNotExecutionActivityAndNonInterrupting(InterpretableExecution execution) {\n+        TransitionImpl transition = execution.getTransition();\n+        if (transition != null) {\n+            ActivityBehavior activityBehavior = transition.getSource().getActivityBehavior();\n+        \n+            return (!(execution.getActivity().getId().equals(execution.getTransition().getSource().getId())) &&\n+                    activityBehavior instanceof BoundaryEventActivityBehavior &&\n+                    !(((BoundaryEventActivityBehavior) activityBehavior).isInterrupting()));\n+        }\n+        return false;\n+    }\n }\n+\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 150557096, 
        "hostName": "spirals-bears", 
        "totalMemory": 588775424, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 1, 2018 8:02:39 AM", 
      "projectRootPomPath": "./workspace/Activiti/Activiti/357660134/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            4, 
            3, 
            0, 
            1, 
            59
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 67
        }, 
        "testing": {
          "stepDurations": [
            345
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 345
        }, 
        "cloning": {
          "stepDurations": [
            31
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 31
        }
      }, 
      "reproductionDateBeginning": "Sep 1, 2018 7:48:25 AM", 
      "totalDuration": 847
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 111, 
        "numberRunning": 112, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "org.springframework.web.util.NestedServletException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/2018swecapstone/h2ms/369561147", 
      "failureDetails": [
        {
          "failureName": "org.springframework.web.util.NestedServletException", 
          "detail": "Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [edu.harvard.h2ms.domain.core.User] during persist time for groups [javax.validation.groups.Default, ]\nList of constraint violations:[\n ConstraintViolationImpl{interpolatedMessage='may not be null', propertyPath=firstName, rootBeanClass=class edu.harvard.h2ms.domain.core.User, messageTemplate='{javax.validation.constraints.NotNull.message}'}\n]", 
          "isError": true, 
          "testMethod": "test_register_passwordController_registerUserByEmail", 
          "testClass": "edu.harvard.h2ms.controllers.PasswordControllerTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "edu.harvard.h2ms.controllers.PasswordControllerTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/369563262", 
        "date": "Apr 21, 2018 8:37:48 PM", 
        "id": 369563262
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/2018swecapstone/h2ms/builds/369561147", 
        "date": "Apr 21, 2018 8:30:12 PM", 
        "id": 369561147
      }
    }, 
    "repository": {
      "name": "2018swecapstone-h2ms", 
      "url": "https://github.com/2018swecapstone/h2ms", 
      "isFork": false, 
      "pullRequestId": 95, 
      "isPullRequest": true, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 121564633
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/eccf147acb76d3b9dd9fc17f022cfc6b58cb52d7", 
        "sha": "eccf147acb76d3b9dd9fc17f022cfc6b58cb52d7", 
        "branchName": "master", 
        "date": "Apr 21, 2018 8:34:07 PM", 
        "repoName": "2018swecapstone/h2ms"
      }, 
      "fixerBuildBaseRepo": {
        "url": "https://github.com/2018swecapstone/h2ms/commit/8a10eb685b9853a646dcf76b325635ee7bb44b3e", 
        "sha": "8a10eb685b9853a646dcf76b325635ee7bb44b3e", 
        "branchName": "master", 
        "date": "Apr 20, 2018 6:12:31 PM", 
        "repoName": "2018swecapstone/h2ms"
      }, 
      "fixerBuildForkRepo": {
        "url": "https://github.com/shinwachi/h2ms/commit/48411b105afda985655abc7226ac1b6cc3831575", 
        "sha": "48411b105afda985655abc7226ac1b6cc3831575", 
        "branchName": "user_unsubscribe_backend", 
        "date": "Apr 21, 2018 8:34:07 PM", 
        "repoName": "shinwachi/h2ms"
      }, 
      "buggyBuildForkRepo": {
        "url": "https://github.com/shinwachi/h2ms/commit/48411b105afda985655abc7226ac1b6cc3831575", 
        "sha": "48411b105afda985655abc7226ac1b6cc3831575", 
        "branchName": "user_unsubscribe_backend", 
        "date": "Apr 21, 2018 8:34:07 PM", 
        "repoName": "shinwachi/h2ms"
      }, 
      "buggyBuild": {
        "url": "http://github.com/2018swecapstone/h2ms/commit/af499c715d6c5039470372e7316866d16ad752ad", 
        "sha": "af499c715d6c5039470372e7316866d16ad752ad", 
        "branchName": "master", 
        "date": "Apr 21, 2018 8:26:11 PM", 
        "repoName": "2018swecapstone/h2ms"
      }, 
      "buggyBuildBaseRepo": {
        "url": "https://github.com/2018swecapstone/h2ms/commit/8a10eb685b9853a646dcf76b325635ee7bb44b3e", 
        "sha": "8a10eb685b9853a646dcf76b325635ee7bb44b3e", 
        "branchName": "master", 
        "date": "Apr 20, 2018 6:12:31 PM", 
        "repoName": "2018swecapstone/h2ms"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/2018swecapstone-h2ms-369561147-369563262", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 110, 
      "numberLibrariesFailingModule": 135, 
      "numberTestFiles": 26, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_143", 
    "diff": "diff --git a/src/main/java/edu/harvard/h2ms/domain/core/User.java b/src/main/java/edu/harvard/h2ms/domain/core/User.java\nindex 2b574b8e..0facfd47 100644\n--- a/src/main/java/edu/harvard/h2ms/domain/core/User.java\n+++ b/src/main/java/edu/harvard/h2ms/domain/core/User.java\n@@ -36,7 +36,7 @@ public class User implements UserDetails {\n   @Column(name = \"ID\")\r\n   private Long id;\r\n \r\n-  @NotNull @Column @JsonIgnore private String firstName;\r\n+  @NotNull @Column private String firstName;\r\n \r\n   @Column private String middleName;\r\n \r\n@@ -50,7 +50,7 @@ public class User implements UserDetails {\n \r\n   @NotNull @Column private String type;\r\n \r\n-  @NotNull @Column private String password;\r\n+  @NotNull @JsonIgnore @Column private String password;\r\n \r\n   @ManyToMany\r\n   @JoinTable(\r\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239815552, 
        "hostName": "spirals-bears", 
        "totalMemory": 405798912, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 9:53:50 PM", 
      "projectRootPomPath": "./workspace/2018swecapstone/h2ms/369561147/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            3, 
            72
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 75
        }, 
        "testing": {
          "stepDurations": [
            110
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 110
        }, 
        "cloning": {
          "stepDurations": [
            3
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 3
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 9:48:26 PM", 
      "totalDuration": 319
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 383, 
        "numberRunning": 384, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/aicis/fresco/330883035/tools/ot", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "dk.alexandra.fresco.tools.cointossing.TestCoinTossing", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testDoubleInit", 
          "testClass": "dk.alexandra.fresco.tools.cointossing.TestCoinTossing", 
          "detail": "expected:<Already initialized> but was:<null>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/330923179", 
        "date": "Jan 19, 2018 7:08:10 PM", 
        "id": 330923179
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/330883035", 
        "date": "Jan 19, 2018 5:12:33 PM", 
        "id": 330883035
      }
    }, 
    "repository": {
      "name": "aicis-fresco", 
      "url": "https://github.com/aicis/fresco", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 46789213
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/5f1d1d639b0f90445b6e2d34efc175e5f698a77f", 
        "sha": "5f1d1d639b0f90445b6e2d34efc175e5f698a77f", 
        "branchName": "mascot-preprocessing", 
        "date": "Jan 19, 2018 6:48:10 PM", 
        "repoName": "aicis/fresco"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/cb5ed623b9d9af706ffaf30f2f17163832f0836e", 
        "sha": "cb5ed623b9d9af706ffaf30f2f17163832f0836e", 
        "branchName": "mascot-preprocessing", 
        "date": "Jan 19, 2018 5:06:20 PM", 
        "repoName": "aicis/fresco"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aicis-fresco-330883035-330923179", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 378, 
      "numberLibrariesFailingModule": 15, 
      "numberTestFiles": 205, 
      "numberModules": 15
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_144", 
    "diff": "diff --git a/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java b/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\nindex 5bb446fc..fd63832e 100644\n--- a/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\n+++ b/core/src/main/java/dk/alexandra/fresco/framework/util/StrictBitVector.java\n@@ -114,7 +114,8 @@ public class StrictBitVector implements BitVector {\n    */\n   @Override\n   public byte[] toByteArray() {\n-    return bits;\n+    // TODO when we return bits directly we run into correlation errors in TestParallelMascots.\n+    return bits.clone();\n   }\n \n   /**\n@@ -215,4 +216,4 @@ public class StrictBitVector implements BitVector {\n       throw new IndexOutOfBoundsException(\"Index out of bounds\");\n     }\n   }\n-}\n\\ No newline at end of file\n+}\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 380455280, 
        "hostName": "spirals-bears", 
        "totalMemory": 424673280, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 19, 2018 10:30:35 AM", 
      "projectRootPomPath": "./workspace/aicis/fresco/330883035/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            97
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 97
        }, 
        "testing": {
          "stepDurations": [
            347
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 347
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 19, 2018 9:59:32 AM", 
      "totalDuration": 1857
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 645, 
        "numberRunning": 646, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/aicis/fresco/335666803/suite/spdz", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<247> but was:<48>", 
          "isError": false, 
          "testMethod": "testGetNextTriple", 
          "testClass": "dk.alexandra.fresco.suite.spdz.storage.TestSpdzConfigurableDataSupplier"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "dk.alexandra.fresco.suite.spdz.storage.TestSpdzConfigurableDataSupplier", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/335692003", 
        "date": "Jan 31, 2018 5:22:45 PM", 
        "id": 335692003
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/335666803", 
        "date": "Jan 31, 2018 4:33:31 PM", 
        "id": 335666803
      }
    }, 
    "repository": {
      "name": "aicis-fresco", 
      "url": "https://github.com/aicis/fresco", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 46789213
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/84f3c14ca7daf9105c4ca89c90a2ebb276b0be40", 
        "sha": "84f3c14ca7daf9105c4ca89c90a2ebb276b0be40", 
        "branchName": "226-dummy-supplier", 
        "date": "Jan 31, 2018 5:04:21 PM", 
        "repoName": "aicis/fresco"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/b523ab08e6af2e7423111f61e2cb938b0cc64cdd", 
        "sha": "b523ab08e6af2e7423111f61e2cb938b0cc64cdd", 
        "branchName": "226-dummy-supplier", 
        "date": "Jan 31, 2018 4:14:00 PM", 
        "repoName": "aicis/fresco"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aicis-fresco-335666803-335692003", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_145", 
    "diff": "diff --git a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\nindex 2065314d..cf22740f 100644\n--- a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\n+++ b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzConfigurableDataSupplier.java\n@@ -27,8 +27,8 @@ public class SpdzConfigurableDataSupplier implements SpdzDataSupplier {\n     MultiplicationTripleShares rawTriple = supplier.getMultiplicationTripleShares();\n     return new SpdzTriple(\n         toSpdzElement(rawTriple.getLeft()),\n-        toSpdzElement(rawTriple.getLeft()),\n-        toSpdzElement(rawTriple.getRight()));\n+        toSpdzElement(rawTriple.getRight()),\n+        toSpdzElement(rawTriple.getProduct()));\n   }\n \n   @Override\n", 
    "projectMetrics": {
      "numberSourceFiles": 380, 
      "numberLibrariesFailingModule": 18, 
      "numberTestFiles": 209, 
      "numberModules": 15
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 432103040, 
        "hostName": "spirals-bears", 
        "totalMemory": 495452160, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 21, 2018 8:28:22 PM", 
      "projectRootPomPath": "./workspace/aicis/fresco/335666803/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            87
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 87
        }, 
        "testing": {
          "stepDurations": [
            1252
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 1252
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 21, 2018 7:42:49 PM", 
      "totalDuration": 2726
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 753, 
        "numberRunning": 755, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "dk.alexandra.fresco.framework.TestFrameworkException", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/aicis/fresco/363993941/suite/spdz", 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic3Parties", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 14, 
          "numberRunning": 15, 
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic2Parties", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 1
        }
      ], 
      "failureDetails": [
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException", 
          "testMethod": "testInputFromAllMascot", 
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic3Parties", 
          "detail": "TestThread(dk.alexandra.fresco.suite.spdz.SpdzResourcePoolImpl@34fb81bf) threw exception in test (see stderr)", 
          "isError": true
        }, 
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException", 
          "testMethod": "testInputFromAllMascot", 
          "testClass": "dk.alexandra.fresco.suite.spdz.TestSpdzBasicArithmetic2Parties", 
          "detail": "TestThread(dk.alexandra.fresco.suite.spdz.SpdzResourcePoolImpl@4430ab63) threw exception in test (see stderr)", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/363994940", 
        "date": "Apr 9, 2018 9:54:40 AM", 
        "id": 363994940
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/363993941", 
        "date": "Apr 9, 2018 9:48:28 AM", 
        "id": 363993941
      }
    }, 
    "repository": {
      "name": "aicis-fresco", 
      "url": "https://github.com/aicis/fresco", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 46789213
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/fbce6a5211e49ee99af4da440bcf79653eba8f29", 
        "sha": "fbce6a5211e49ee99af4da440bcf79653eba8f29", 
        "branchName": "266-mascot-input-mask-fix", 
        "date": "Apr 9, 2018 9:37:34 AM", 
        "repoName": "aicis/fresco"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/88b105ae0b512a28c957b5478b57021efaa6f4d0", 
        "sha": "88b105ae0b512a28c957b5478b57021efaa6f4d0", 
        "branchName": "266-mascot-input-mask-fix", 
        "date": "Apr 9, 2018 9:32:55 AM", 
        "repoName": "aicis/fresco"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aicis-fresco-363993941-363994940", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 10, 
        "numberDeleted": 7
      }
    }, 
    "type": "failing_passing", 
    "bugId": "Bears_146", 
    "diff": "diff --git a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\nindex 13fe3ba2..66c7dbf3 100644\n--- a/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\n+++ b/suite/spdz/src/main/java/dk/alexandra/fresco/suite/spdz/storage/SpdzMascotDataSupplier.java\n@@ -4,8 +4,8 @@ import dk.alexandra.fresco.framework.network.Network;\n import dk.alexandra.fresco.framework.util.Drbg;\n import dk.alexandra.fresco.framework.util.PaddingAesCtrDrbg;\n import dk.alexandra.fresco.framework.util.StrictBitVector;\n-import dk.alexandra.fresco.suite.spdz.datatypes.SpdzInputMask;\n import dk.alexandra.fresco.suite.spdz.datatypes.SpdzSInt;\n+import dk.alexandra.fresco.suite.spdz.datatypes.SpdzInputMask;\n import dk.alexandra.fresco.suite.spdz.datatypes.SpdzTriple;\n import dk.alexandra.fresco.suite.spdz.preprocessing.MascotFormatConverter;\n import dk.alexandra.fresco.tools.mascot.Mascot;\n@@ -21,6 +21,7 @@ import dk.alexandra.fresco.tools.ot.otextension.RotList;\n import java.math.BigInteger;\n import java.security.SecureRandom;\n import java.util.ArrayDeque;\n+import java.util.HashMap;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.function.Supplier;\n@@ -42,7 +43,7 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n   private final FieldElement ssk;\n \n   private final ArrayDeque<MultiplicationTriple> triples;\n-  private final ArrayDeque<InputMask> masks;\n+  private final Map<Integer, ArrayDeque<InputMask>> masks;\n   private final ArrayDeque<AuthenticatedElement> randomElements;\n   private final ArrayDeque<AuthenticatedElement> randomBits;\n   private final int prgSeedLength;\n@@ -79,7 +80,10 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n     this.modulus = modulus;\n     this.preprocessedValues = preprocessedValues;\n     this.triples = new ArrayDeque<>();\n-    this.masks = new ArrayDeque<>();\n+    this.masks = new HashMap<>();\n+    for (int partyId = 1; partyId <= numberOfPlayers; partyId++) {\n+      masks.put(partyId, new ArrayDeque<>());\n+    }\n     this.randomElements = new ArrayDeque<>();\n     this.randomBits = new ArrayDeque<>();\n     this.prgSeedLength = prgSeedLength;\n@@ -147,12 +151,13 @@ public class SpdzMascotDataSupplier implements SpdzDataSupplier {\n   @Override\n   public SpdzInputMask getNextInputMask(int towardPlayerID) {\n     ensureInitialized();\n-    if (masks.isEmpty()) {\n+    ArrayDeque<InputMask> inputMasks = masks.get(towardPlayerID);\n+    if (inputMasks.isEmpty()) {\n       logger.trace(\"Getting another mask batch\");\n-      masks.addAll(mascot.getInputMasks(towardPlayerID, batchSize));\n+      inputMasks.addAll(mascot.getInputMasks(towardPlayerID, batchSize));\n       logger.trace(\"Got another mask batch\");\n     }\n-    return MascotFormatConverter.toSpdzInputMask(masks.pop());\n+    return MascotFormatConverter.toSpdzInputMask(inputMasks.pop());\n   }\n \n   @Override\n", 
    "projectMetrics": {
      "numberSourceFiles": 439, 
      "numberLibrariesFailingModule": 16, 
      "numberTestFiles": 240, 
      "numberModules": 15
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 307066856, 
        "hostName": "spirals-bears", 
        "totalMemory": 432013312, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 2, 2018 10:42:30 PM", 
      "projectRootPomPath": "./workspace/aicis/fresco/363993941/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            113
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 113
        }, 
        "testing": {
          "stepDurations": [
            1085
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 1085
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Sep 2, 2018 10:00:11 PM", 
      "totalDuration": 2533
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 452, 
        "numberRunning": 454, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "org.junit.runners.model.TestTimedOutException", 
            "isError": true, 
            "occurrences": 1
          }, 
          {
            "failureName": "dk.alexandra.fresco.framework.TestFrameworkException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/aicis/fresco/370467437/core", 
      "failureDetails": [
        {
          "failureName": "dk.alexandra.fresco.framework.TestFrameworkException", 
          "detail": "TestThread(dk.alexandra.fresco.suite.dummy.arithmetic.DummyArithmeticResourcePoolImpl@226b70b3) threw exception in test (see stderr)", 
          "isError": true, 
          "testMethod": "testGenerateRandomBitMask", 
          "testClass": "dk.alexandra.fresco.suite.dummy.arithmetic.TestDummyArithmeticProtocolSuite"
        }, 
        {
          "failureName": "org.junit.runners.model.TestTimedOutException", 
          "detail": "test timed out after 120000 milliseconds", 
          "isError": true, 
          "testMethod": "testReceiveAfterClose", 
          "testClass": "dk.alexandra.fresco.framework.network.async.TestAsyncNetwork"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 25, 
          "numberRunning": 26, 
          "testClass": "dk.alexandra.fresco.framework.network.async.TestAsyncNetwork", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 138, 
          "numberRunning": 139, 
          "testClass": "dk.alexandra.fresco.suite.dummy.arithmetic.TestDummyArithmeticProtocolSuite", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370477490", 
        "date": "Apr 24, 2018 11:24:16 AM", 
        "id": 370477490
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370467437", 
        "date": "Apr 24, 2018 10:54:54 AM", 
        "id": 370467437
      }
    }, 
    "repository": {
      "name": "aicis-fresco", 
      "url": "https://github.com/aicis/fresco", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 46789213
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/7a0fc3391f36c444a2a1215f43144f39c923a3f1", 
        "sha": "7a0fc3391f36c444a2a1215f43144f39c923a3f1", 
        "branchName": "spdz2k-less-than", 
        "date": "Apr 24, 2018 11:05:38 AM", 
        "repoName": "aicis/fresco"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/35049205806bf206f79ed969cd2456bcd9ff6e4c", 
        "sha": "35049205806bf206f79ed969cd2456bcd9ff6e4c", 
        "branchName": "spdz2k-less-than", 
        "date": "Apr 24, 2018 10:37:53 AM", 
        "repoName": "aicis/fresco"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aicis-fresco-370467437-370477490", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 454, 
      "numberLibrariesFailingModule": 12, 
      "numberTestFiles": 248, 
      "numberModules": 15
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_147", 
    "diff": "diff --git a/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java b/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\nindex f0f0e4ec..6878f56f 100644\n--- a/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\n+++ b/core/src/main/java/dk/alexandra/fresco/framework/value/BigIntegerOIntArithmetic.java\n@@ -18,7 +18,8 @@ public class BigIntegerOIntArithmetic implements OIntArithmetic {\n \n   public BigIntegerOIntArithmetic(OIntFactory factory) {\n     this.factory = factory;\n-    this.twoPowersList = new ArrayList<>();\n+    twoPowersList = new ArrayList<>(1);\n+    twoPowersList.add(() -> new BigIntegerOInt(BigInteger.ONE));\n   }\n \n   @Override\n@@ -41,7 +42,7 @@ public class BigIntegerOIntArithmetic implements OIntArithmetic {\n     if (maxPower > currentLength) {\n       ArrayList<DRes<OInt>> newTwoPowersList = new ArrayList<>(maxPower);\n       newTwoPowersList.addAll(twoPowersList);\n-      BigInteger currentValue = ((BigIntegerOInt) newTwoPowersList.get(currentLength - 1))\n+      BigInteger currentValue = ((BigIntegerOInt) newTwoPowersList.get(currentLength - 1).out())\n           .getValue();\n       while (maxPower > newTwoPowersList.size()) {\n         currentValue = currentValue.shiftLeft(1);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 290623912, 
        "hostName": "spirals-bears", 
        "totalMemory": 472907776, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 6, 2018 4:08:08 AM", 
      "projectRootPomPath": "./workspace/aicis/fresco/370467437/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            93
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 93
        }, 
        "testing": {
          "stepDurations": [
            377
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 377
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Sep 6, 2018 3:37:32 AM", 
      "totalDuration": 1827
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 898, 
        "numberRunning": 899, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 2
      }, 
      "failingModule": "/root/workspace/aicis/fresco/370628089/suite/spdz2k", 
      "failingClasses": [
        {
          "numberPassing": 12, 
          "numberRunning": 13, 
          "testClass": "dk.alexandra.fresco.suite.spdz2k.datatypes.TestCompUInt96", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testConstruct", 
          "testClass": "dk.alexandra.fresco.suite.spdz2k.datatypes.TestCompUInt96", 
          "detail": "expected:<79228162514264337593543950335> but was:<255>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370634151", 
        "date": "Apr 24, 2018 5:58:03 PM", 
        "id": 370634151
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aicis/fresco/builds/370628089", 
        "date": "Apr 24, 2018 5:40:51 PM", 
        "id": 370628089
      }
    }, 
    "repository": {
      "name": "aicis-fresco", 
      "url": "https://github.com/aicis/fresco", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 46789213
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aicis/fresco/commit/fffbc2b8962ba94740c6850a1698e6e86fb8a9c1", 
        "sha": "fffbc2b8962ba94740c6850a1698e6e86fb8a9c1", 
        "branchName": "spdz2k-less-than", 
        "date": "Apr 24, 2018 5:39:03 PM", 
        "repoName": "aicis/fresco"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aicis/fresco/commit/09e537392bd7bf76f6a22e007da6c48d59bac1c7", 
        "sha": "09e537392bd7bf76f6a22e007da6c48d59bac1c7", 
        "branchName": "spdz2k-less-than", 
        "date": "Apr 24, 2018 5:24:47 PM", 
        "repoName": "aicis/fresco"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aicis-fresco-370628089-370634151", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 457, 
      "numberLibrariesFailingModule": 13, 
      "numberTestFiles": 248, 
      "numberModules": 15
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 4, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 8
      }
    }, 
    "bugId": "Bears_148", 
    "diff": "diff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\nindex 8f16046e..4a69b358 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt128.java\n@@ -49,7 +49,6 @@ public class CompUInt128 implements CompUInt<UInt64, UInt64, CompUInt128> {\n    */\n   public CompUInt128(BigInteger value) {\n     this(value.shiftRight(64).longValue(), value.shiftRight(32).intValue(), value.intValue());\n-//    this(value.toByteArray(), true);\n   }\n \n   CompUInt128(long high, int mid, int low) {\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\nindex d9c15a87..338f6dc1 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96.java\n@@ -33,7 +33,7 @@ public class CompUInt96 implements CompUInt<UInt64, UInt32, CompUInt96> {\n   }\n \n   CompUInt96(BigInteger value) {\n-    this(value.toByteArray());\n+    this(value.shiftRight(64).intValue(), value.shiftRight(32).intValue(), value.intValue());\n   }\n \n   CompUInt96(UInt64 value) {\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\nindex 1ae2a2c4..db3eea4c 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUInt96Factory.java\n@@ -2,6 +2,7 @@ package dk.alexandra.fresco.suite.spdz2k.datatypes;\n \n import dk.alexandra.fresco.framework.network.serializers.ByteSerializer;\n import dk.alexandra.fresco.suite.spdz2k.util.UIntSerializer;\n+import java.math.BigInteger;\n import java.security.SecureRandom;\n \n public class CompUInt96Factory implements CompUIntFactory<CompUInt96> {\n@@ -13,6 +14,11 @@ public class CompUInt96Factory implements CompUIntFactory<CompUInt96> {\n     return new CompUInt96(bytes);\n   }\n \n+  @Override\n+  public CompUInt96 createFromBigInteger(BigInteger value) {\n+    return value == null ? null : new CompUInt96(value);\n+  }\n+\n   @Override\n   public CompUInt96 createRandom() {\n     byte[] bytes = new byte[12];\ndiff --git a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\nindex dae78427..0bb6c0c1 100644\n--- a/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\n+++ b/suite/spdz2k/src/main/java/dk/alexandra/fresco/suite/spdz2k/datatypes/CompUIntFactory.java\n@@ -92,7 +92,7 @@ public interface CompUIntFactory<CompT extends CompUInt<?, ?, CompT>> extends OI\n    * Creates element whose value is zero.\n    */\n   default CompT zero() {\n-    return createFromBytes(new byte[getCompositeBitLength() / Byte.SIZE]);\n+    return createFromBigInteger(BigInteger.ZERO);\n   }\n \n   default CompT one() {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 237633784, 
        "hostName": "spirals-bears", 
        "totalMemory": 424148992, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 6, 2018 3:56:19 AM", 
      "projectRootPomPath": "./workspace/aicis/fresco/370628089/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            97
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 97
        }, 
        "testing": {
          "stepDurations": [
            1134
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 1134
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Sep 6, 2018 3:13:37 AM", 
      "totalDuration": 2554
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1158, 
        "numberRunning": 1159, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 103
      }, 
      "failingModule": "/root/workspace/apache/incubator-dubbo/329355311/dubbo-cluster", 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "detail": "expected:<1> but was:<0>", 
          "isError": false, 
          "testMethod": "testRoute_matchFilter", 
          "testClass": "com.alibaba.dubbo.rpc.cluster.router.condition.ConditionRouterTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 11, 
          "numberRunning": 12, 
          "testClass": "com.alibaba.dubbo.rpc.cluster.router.condition.ConditionRouterTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/329773929", 
        "date": "Jan 17, 2018 11:28:17 AM", 
        "id": 329773929
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/329355311", 
        "date": "Jan 16, 2018 9:14:48 AM", 
        "id": 329355311
      }
    }, 
    "repository": {
      "name": "apache-incubator-dubbo", 
      "url": "https://github.com/apache/incubator-dubbo", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4710920
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/5af18786003e832b0abb280b6f57322b4e7e9784", 
        "sha": "5af18786003e832b0abb280b6f57322b4e7e9784", 
        "branchName": "2.5.x", 
        "date": "Jan 17, 2018 9:16:40 AM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/b309f792f8b5ebfea16b4cc13720e35306d94b38", 
        "sha": "b309f792f8b5ebfea16b4cc13720e35306d94b38", 
        "branchName": "2.5.x", 
        "date": "Jan 16, 2018 8:43:22 AM", 
        "repoName": "apache/incubator-dubbo"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-dubbo-329355311-329773929", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_149", 
    "diff": "diff --git a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\nindex 0e88557c..c3b58452 100644\n--- a/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\n+++ b/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/router/condition/ConditionRouter.java\n@@ -204,6 +204,9 @@ public class ConditionRouter implements Router, Comparable<Router> {\n                 sampleValue = invocation.getMethodName();\r\n             } else {\r\n                 sampleValue = sample.get(key);\r\n+                if (sampleValue == null) {\r\n+                    sampleValue = sample.get(Constants.DEFAULT_KEY_PREFIX + key);\r\n+                }\r\n             }\r\n             if (sampleValue != null) {\r\n                 if (!matchPair.getValue().isMatch(sampleValue, param)) {\r\n", 
    "projectMetrics": {
      "numberSourceFiles": 927, 
      "numberLibrariesFailingModule": 12, 
      "numberTestFiles": 399, 
      "numberModules": 61
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 238348728, 
        "hostName": "spirals-bears", 
        "totalMemory": 473432064, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 19, 2018 10:26:29 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/329355311/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            255
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 257
        }, 
        "testing": {
          "stepDurations": [
            110
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 110
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 19, 2018 10:16:38 PM", 
      "totalDuration": 583
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 31, 
        "numberRunning": 33, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/apache/incubator-dubbo/347256120/hessian-lite", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "hessian2", 
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest", 
          "detail": "expected:<zh-hant_CN> but was:<zh_HANT_CN>", 
          "isError": false
        }, 
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "hessian1", 
          "testClass": "com.alibaba.com.caucho.hessian.io.LocaleSerializerTest", 
          "detail": "expected:<zh-hant_CN> but was:<zh_HANT_CN>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/347634018", 
        "date": "Mar 1, 2018 8:20:29 AM", 
        "id": 347634018
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/347256120", 
        "date": "Feb 28, 2018 2:09:27 PM", 
        "id": 347256120
      }
    }, 
    "repository": {
      "name": "apache-incubator-dubbo", 
      "url": "https://github.com/apache/incubator-dubbo", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4710920
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/0423219d839404186b8a5ec7dec37f6addeb58d9", 
        "sha": "0423219d839404186b8a5ec7dec37f6addeb58d9", 
        "branchName": "master", 
        "date": "Mar 1, 2018 7:58:01 AM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/3be23d9ac55407e2e2bda49570f7f76943a3b382", 
        "sha": "3be23d9ac55407e2e2bda49570f7f76943a3b382", 
        "branchName": "master", 
        "date": "Feb 27, 2018 1:22:47 PM", 
        "repoName": "apache/incubator-dubbo"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-dubbo-347256120-347634018", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 733, 
      "numberLibrariesFailingModule": 6, 
      "numberTestFiles": 404, 
      "numberModules": 53
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 60, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_150", 
    "diff": "diff --git a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\nindex 3b1a547d..60181846 100644\n--- a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\n+++ b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleHandle.java\n@@ -54,64 +54,17 @@ import java.util.Locale;\n  * Handle for a locale object.\n  */\n public class LocaleHandle implements java.io.Serializable, HessianHandle {\n-    private String value;\n-\n-    public LocaleHandle(String locale) {\n-        this.value = locale;\n+    private String language;\n+    private String country;\n+    private String variant;\n+\n+    public LocaleHandle(String language, String country, String variant) {\n+        this.language = language;\n+        this.country = country;\n+        this.variant = variant;\n     }\n \n     private Object readResolve() {\n-        String s = this.value;\n-\n-        if (s == null)\n-            return null;\n-\n-        int len = s.length();\n-        char ch = ' ';\n-\n-        int i = 0;\n-        for (;\n-             i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                     || 'A' <= ch && ch <= 'Z'\n-                     || '0' <= ch && ch <= '9');\n-             i++) {\n-        }\n-\n-        String language = s.substring(0, i);\n-        String country = null;\n-        String var = null;\n-\n-        if (ch == '-' || ch == '_') {\n-            int head = ++i;\n-\n-            for (;\n-                 i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                         || 'A' <= ch && ch <= 'Z'\n-                         || '0' <= ch && ch <= '9');\n-                 i++) {\n-            }\n-\n-            country = s.substring(head, i);\n-        }\n-\n-        if (ch == '-' || ch == '_') {\n-            int head = ++i;\n-\n-            for (;\n-                 i < len && ('a' <= (ch = s.charAt(i)) && ch <= 'z'\n-                         || 'A' <= ch && ch <= 'Z'\n-                         || '0' <= ch && ch <= '9');\n-                 i++) {\n-            }\n-\n-            var = s.substring(head, i);\n-        }\n-\n-        if (var != null)\n-            return new Locale(language, country, var);\n-        else if (country != null)\n-            return new Locale(language, country);\n-        else\n-            return new Locale(language);\n+        return new Locale(language, country, variant);\n     }\n }\ndiff --git a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\nindex 86f6cb0f..6555e4a6 100644\n--- a/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\n+++ b/hessian-lite/src/main/java/com/alibaba/com/caucho/hessian/io/LocaleSerializer.java\n@@ -68,7 +68,7 @@ public class LocaleSerializer extends AbstractSerializer {\n         else {\n             Locale locale = (Locale) obj;\n \n-            out.writeObject(new LocaleHandle(locale.toString()));\n+            out.writeObject(new LocaleHandle(locale.getLanguage(), locale.getCountry(), locale.getVariant()));\n         }\n     }\n }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 272759880, 
        "hostName": "spirals-bears", 
        "totalMemory": 498597888, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 28, 2018 3:55:04 AM", 
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/347256120/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            2, 
            0, 
            0, 
            338
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 341
        }, 
        "testing": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 28, 2018 3:43:06 AM", 
      "totalDuration": 710
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1265, 
        "numberRunning": 1266, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 105
      }, 
      "failingModule": "/root/workspace/apache/incubator-dubbo/352635276/dubbo-config/dubbo-config-spring", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<{name=Mercy, age=31}> but was:<{name=Mercy}>", 
          "isError": false, 
          "testMethod": "testGetSubProperties", 
          "testClass": "com.alibaba.dubbo.config.spring.util.PropertySourcesUtilsTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.alibaba.dubbo.config.spring.util.PropertySourcesUtilsTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/352657297", 
        "date": "Mar 13, 2018 4:54:34 AM", 
        "id": 352657297
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/352635276", 
        "date": "Mar 13, 2018 2:59:15 AM", 
        "id": 352635276
      }
    }, 
    "repository": {
      "name": "apache-incubator-dubbo", 
      "url": "https://github.com/apache/incubator-dubbo", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4710920
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/109d064d14260d9b71be1f1fbd3a385053d5fffb", 
        "sha": "109d064d14260d9b71be1f1fbd3a385053d5fffb", 
        "branchName": "2.5.x", 
        "date": "Mar 13, 2018 4:30:22 AM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/04576ff4ffdd5872e738b4e10e3905fe513109d2", 
        "sha": "04576ff4ffdd5872e738b4e10e3905fe513109d2", 
        "branchName": "2.5.x", 
        "date": "Mar 13, 2018 2:42:10 AM", 
        "repoName": "apache/incubator-dubbo"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-dubbo-352635276-352657297", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 929, 
      "numberLibrariesFailingModule": 39, 
      "numberTestFiles": 410, 
      "numberModules": 61
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_151", 
    "diff": "diff --git a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\nindex c4bc848e..fe1c61bb 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/util/PropertySourcesUtils.java\n@@ -52,9 +52,7 @@ public abstract class PropertySourcesUtils {\n                     if (name.startsWith(normalizedPrefix)) {\n                         String subName = name.substring(normalizedPrefix.length());\n                         Object value = source.getProperty(name);\n-                        if (value instanceof String) {\n-                            subProperties.put(subName, String.valueOf(value));\n-                        }\n+                        subProperties.put(subName, String.valueOf(value));\n                     }\n                 }\n             }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 255741432, 
        "hostName": "spirals-bears", 
        "totalMemory": 496500736, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 29, 2018 10:20:25 AM", 
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/352635276/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            244
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 246
        }, 
        "testing": {
          "stepDurations": [
            169
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 169
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 29, 2018 10:09:20 AM", 
      "totalDuration": 658
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 753, 
        "numberRunning": 754, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.AssertionFailedError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/apache/incubator-dubbo/370383941/dubbo-rpc/dubbo-rpc-dubbo", 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 5, 
          "testClass": "com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "junit.framework.AssertionFailedError", 
          "testMethod": "test_normal_channel_close_wait_gracefully", 
          "isError": false, 
          "testClass": "com.alibaba.dubbo.rpc.protocol.dubbo.DubboInvokerAvilableTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/370422750", 
        "date": "Apr 24, 2018 8:26:37 AM", 
        "id": 370422750
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/370383941", 
        "date": "Apr 24, 2018 4:41:13 AM", 
        "id": 370383941
      }
    }, 
    "repository": {
      "name": "apache-incubator-dubbo", 
      "url": "https://github.com/apache/incubator-dubbo", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4710920
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/d29052904765d59e549286fc8545bf5b0e760048", 
        "sha": "d29052904765d59e549286fc8545bf5b0e760048", 
        "branchName": "master", 
        "date": "Apr 24, 2018 8:00:32 AM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/d07c64f809361ec629b738ca223c7e89d08c03f4", 
        "sha": "d07c64f809361ec629b738ca223c7e89d08c03f4", 
        "branchName": "master", 
        "date": "Apr 24, 2018 4:21:04 AM", 
        "repoName": "apache/incubator-dubbo"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-dubbo-370383941-370422750", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 733, 
      "numberLibrariesFailingModule": 31, 
      "numberTestFiles": 480, 
      "numberModules": 60
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 29, 
        "numberDeleted": 9
      }
    }, 
    "bugId": "Bears_152", 
    "diff": "diff --git a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\nindex 13000a77..0e7a5243 100644\n--- a/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\n+++ b/dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ProtocolConfig.java\n@@ -20,7 +20,6 @@ import com.alibaba.dubbo.common.extension.ExtensionLoader;\n import com.alibaba.dubbo.common.serialize.Serialization;\r\n import com.alibaba.dubbo.common.status.StatusChecker;\r\n import com.alibaba.dubbo.common.threadpool.ThreadPool;\r\n-import com.alibaba.dubbo.common.utils.ConfigUtils;\r\n import com.alibaba.dubbo.config.support.Parameter;\r\n import com.alibaba.dubbo.registry.support.AbstractRegistryFactory;\r\n import com.alibaba.dubbo.remoting.Codec;\r\n@@ -155,14 +154,8 @@ public class ProtocolConfig extends AbstractConfig {\n         if (!destroyed.compareAndSet(false, true)) {\r\n             return;\r\n         }\r\n-        AbstractRegistryFactory.destroyAll();\r\n \r\n-        // Wait for registry notification\r\n-        try {\r\n-            Thread.sleep(ConfigUtils.getServerShutdownTimeout());\r\n-        } catch (InterruptedException e) {\r\n-            logger.warn(\"Interrupted unexpectedly when waiting for registry notification during shutdown process!\");\r\n-        }\r\n+        AbstractRegistryFactory.destroyAll();\r\n \r\n         ExtensionLoader<Protocol> loader = ExtensionLoader.getExtensionLoader(Protocol.class);\r\n         for (String protocolName : loader.getLoadedExtensions()) {\r\ndiff --git a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\nindex e14fc4b9..bbb75d9e 100644\n--- a/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\n+++ b/dubbo-config/dubbo-config-spring/src/main/java/com/alibaba/dubbo/config/spring/AnnotationBean.java\n@@ -111,13 +111,18 @@ public class AnnotationBean extends AbstractConfig implements DisposableBean, Be\n \r\n     @Override\r\n     public void destroy() throws Exception {\r\n-        for (ServiceConfig<?> serviceConfig : serviceConfigs) {\r\n-            try {\r\n-                serviceConfig.unexport();\r\n-            } catch (Throwable e) {\r\n-                logger.error(e.getMessage(), e);\r\n-            }\r\n-        }\r\n+\r\n+        //  This will only be called for singleton scope bean, and expected to be called by spring shutdown hook when BeanFactory/ApplicationContext destroys.\r\n+        //  We will guarantee dubbo related resources being released with dubbo shutdown hook.\r\n+\r\n+        //  for (ServiceConfig<?> serviceConfig : serviceConfigs) {\r\n+        //      try {\r\n+        //          serviceConfig.unexport();\r\n+        //      } catch (Throwable e) {\r\n+        //          logger.error(e.getMessage(), e);\r\n+        //      }\r\n+        //  }\r\n+\r\n         for (ReferenceConfig<?> referenceConfig : referenceConfigs.values()) {\r\n             try {\r\n                 referenceConfig.destroy();\r\ndiff --git a/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java b/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\nindex 2a09c5de..2ab32f00 100644\n--- a/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\n+++ b/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/header/HeaderExchangeServer.java\n@@ -29,8 +29,6 @@ import com.alibaba.dubbo.remoting.Server;\n import com.alibaba.dubbo.remoting.exchange.ExchangeChannel;\r\n import com.alibaba.dubbo.remoting.exchange.ExchangeServer;\r\n import com.alibaba.dubbo.remoting.exchange.Request;\r\n-import com.alibaba.dubbo.remoting.exchange.support.DefaultFuture;\r\n-\r\n import java.net.InetSocketAddress;\r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n@@ -85,7 +83,13 @@ public class HeaderExchangeServer implements ExchangeServer {\n     private boolean isRunning() {\r\n         Collection<Channel> channels = getChannels();\r\n         for (Channel channel : channels) {\r\n-            if (DefaultFuture.hasFuture(channel)) {\r\n+\r\n+            /**\r\n+             *  If there are any client connections,\r\n+             *  our server should be running.\r\n+             */\r\n+\r\n+            if (channel.isConnected()) {\r\n                 return true;\r\n             }\r\n         }\r\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 348655224, 
        "hostName": "spirals-bears", 
        "totalMemory": 462946304, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 5, 2018 11:46:36 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/370383941/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            2, 
            2, 
            0, 
            1, 
            741
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 746
        }, 
        "testing": {
          "stepDurations": [
            137
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 137
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Sep 5, 2018 11:23:26 PM", 
      "totalDuration": 1382
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 631, 
        "numberRunning": 635, 
        "numberFailing": 0, 
        "numberErroring": 4, 
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException", 
            "isError": true, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/apache/incubator-servicecomb-java-chassis/330826674/service-registry", 
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)", 
          "isError": true, 
          "testMethod": "testSetDescription", 
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory"
        }, 
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)", 
          "isError": true, 
          "testMethod": "testSetDescriptionOnEmptyDescription", 
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory"
        }, 
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)", 
          "isError": true, 
          "testMethod": "testSetDescriptionOnBlankDescription", 
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory"
        }, 
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "detail": "No compatible method found: setDescription(org.apache.commons.configuration.Configuration$$EnhancerByMockitoWithCGLIB$$b8e33db, org.apache.servicecomb.serviceregistry.api.registry.Microservice)", 
          "isError": true, 
          "testMethod": "testSetDescriptionOnNullDescription", 
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 6, 
          "testClass": "org.apache.servicecomb.serviceregistry.api.registry.TestMicroserviceFactory", 
          "numberFailing": 0, 
          "numberErroring": 4, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/331080091", 
        "date": "Jan 20, 2018 6:41:22 AM", 
        "id": 331080091
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/330826674", 
        "date": "Jan 20, 2018 12:54:12 AM", 
        "id": 330826674
      }
    }, 
    "repository": {
      "name": "apache-incubator-servicecomb-java-chassis", 
      "url": "https://github.com/apache/incubator-servicecomb-java-chassis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 91674936
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/cf527379812576622834d1651423b8ec1beec6a7", 
        "sha": "cf527379812576622834d1651423b8ec1beec6a7", 
        "branchName": "master", 
        "date": "Jan 20, 2018 3:32:02 AM", 
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/462f2790bd24ce6cfd84e0c8862caff5db0a784a", 
        "sha": "462f2790bd24ce6cfd84e0c8862caff5db0a784a", 
        "branchName": "master", 
        "date": "Jan 19, 2018 3:10:54 PM", 
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-servicecomb-java-chassis-330826674-331080091", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 19
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_153", 
    "diff": "diff --git a/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java b/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\nindex 295592d3..fad8bf99 100644\n--- a/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\n+++ b/service-registry/src/main/java/org/apache/servicecomb/serviceregistry/api/registry/MicroserviceFactory.java\n@@ -56,7 +56,7 @@ public class MicroserviceFactory {\n     microservice.setAppId(configuration.getString(CONFIG_APPLICATION_ID_KEY, DEFAULT_APPLICATION_ID));\n     microservice.setVersion(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_VERSION_KEY,\n         DEFAULT_MICROSERVICE_VERSION));\n-    microservice.setDescription(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_DESCRIPTION_KEY, \"\"));\n+    setDescription(configuration, microservice);\n     microservice.setLevel(configuration.getString(CONFIG_QUALIFIED_MICROSERVICE_ROLE_KEY, \"FRONT\"));\n     microservice.setPaths(ConfigurePropertyUtils.getMicroservicePaths(configuration));\n     Map<String, String> propertiesMap = MicroservicePropertiesLoader.INSTANCE.loadProperties(configuration);\n@@ -78,6 +78,24 @@ public class MicroserviceFactory {\n     return microservice;\n   }\n \n+  /**\n+   * {@code service_description.description} is split by {@code ,},\n+   * need to combine the description array to raw description.\n+   */\n+  private void setDescription(Configuration configuration, Microservice microservice) {\n+    String[] descriptionArray = configuration.getStringArray(CONFIG_QUALIFIED_MICROSERVICE_DESCRIPTION_KEY);\n+    if (null == descriptionArray || descriptionArray.length < 1) {\n+      return;\n+    }\n+\n+    StringBuilder rawDescriptionBuilder = new StringBuilder();\n+    for (String desc : descriptionArray) {\n+      rawDescriptionBuilder.append(desc).append(\",\");\n+    }\n+\n+    microservice.setDescription(rawDescriptionBuilder.substring(0, rawDescriptionBuilder.length() - 1));\n+  }\n+\n   private boolean allowCrossApp(Map<String, String> propertiesMap) {\n     return Boolean.valueOf(propertiesMap.get(CONFIG_ALLOW_CROSS_APP_KEY));\n   }\n", 
    "projectMetrics": {
      "numberSourceFiles": 870, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 510, 
      "numberModules": 64
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 630563936, 
        "hostName": "spirals-bears", 
        "totalMemory": 813170688, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 19, 2018 5:57:44 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-servicecomb-java-chassis/330826674/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            5, 
            1, 
            0, 
            126
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 133
        }, 
        "testing": {
          "stepDurations": [
            59
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 59
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 19, 2018 5:47:39 PM", 
      "totalDuration": 596
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 143, 
        "numberRunning": 144, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/apache/incubator-servicecomb-java-chassis/371353019/foundations/foundation-config", 
      "failingClasses": [
        {
          "numberPassing": 13, 
          "numberRunning": 14, 
          "testClass": "org.apache.servicecomb.config.TestConfigUtil", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "testCreateLocalConfigWithExtraConfig", 
          "testClass": "org.apache.servicecomb.config.TestConfigUtil", 
          "detail": "expected:<[higher_priority]> but was:<[value]>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/371886679", 
        "date": "Apr 27, 2018 8:49:26 AM", 
        "id": 371886679
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-servicecomb-java-chassis/builds/371353019", 
        "date": "Apr 26, 2018 4:32:23 AM", 
        "id": 371353019
      }
    }, 
    "repository": {
      "name": "apache-incubator-servicecomb-java-chassis", 
      "url": "https://github.com/apache/incubator-servicecomb-java-chassis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 91674936
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/122a4865de381986700705eb8d7dcf286b294007", 
        "sha": "122a4865de381986700705eb8d7dcf286b294007", 
        "branchName": "master", 
        "date": "Apr 27, 2018 8:10:59 AM", 
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-servicecomb-java-chassis/commit/5348393b977f5e6a8eac87016dd1f969a7a1e6df", 
        "sha": "5348393b977f5e6a8eac87016dd1f969a7a1e6df", 
        "branchName": "master", 
        "date": "Apr 26, 2018 3:53:33 AM", 
        "repoName": "apache/incubator-servicecomb-java-chassis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-servicecomb-java-chassis-371353019-371886679", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 867, 
      "numberLibrariesFailingModule": 74, 
      "numberTestFiles": 530, 
      "numberModules": 64
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_154", 
    "diff": "diff --git a/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java b/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\nindex a5ff2e61..bb3b4132 100644\n--- a/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\n+++ b/foundations/foundation-config/src/main/java/org/apache/servicecomb/config/ConfigUtil.java\n@@ -130,17 +130,17 @@ public final class ConfigUtil {\n     duplicateServiceCombConfigToCse(config,\n         convertEnvVariable(new ConcurrentMapConfiguration(new EnvironmentConfiguration())),\n         \"configFromEnvironment\");\n-    duplicateServiceCombConfigToCse(config,\n-        new DynamicConfiguration(\n-            new MicroserviceConfigurationSource(configModelList), new NeverStartPollingScheduler()),\n-        \"configFromYamlFile\");\n-    // If there is extra configurations, add it into config. Extra config has lowest priority.\n+    // If there is extra configurations, add it into config.\n     EXTRA_CONFIG_MAP.entrySet().stream()\n         .filter(mapEntry -> !mapEntry.getValue().isEmpty())\n         .forEachOrdered(configMapEntry ->\n             duplicateServiceCombConfigToCse(config,\n                 new ConcurrentMapConfiguration(configMapEntry.getValue()),\n                 configMapEntry.getKey()));\n+    duplicateServiceCombConfigToCse(config,\n+        new DynamicConfiguration(\n+            new MicroserviceConfigurationSource(configModelList), new NeverStartPollingScheduler()),\n+        \"configFromYamlFile\");\n \n     return config;\n   }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 235782768, 
        "hostName": "spirals-bears", 
        "totalMemory": 924319744, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 5, 2018 6:39:09 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-servicecomb-java-chassis/371353019/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            5, 
            1, 
            0, 
            208
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 215
        }, 
        "testing": {
          "stepDurations": [
            28
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 28
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Sep 5, 2018 6:25:08 PM", 
      "totalDuration": 832
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 2398, 
        "numberRunning": 2399, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 126
      }, 
      "failingModule": "/root/workspace/apache/jackrabbit-oak/344414751/oak-core", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": " Expected: every item is is <301>      but: an item was <94>", 
          "isError": false, 
          "testMethod": "backgroundWrite", 
          "testClass": "org.apache.jackrabbit.oak.plugins.document.DisableBranchesTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.apache.jackrabbit.oak.plugins.document.DisableBranchesTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/jackrabbit-oak/builds/344705279", 
        "date": "Feb 22, 2018 10:58:07 AM", 
        "id": 344705279
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/jackrabbit-oak/builds/344414751", 
        "date": "Feb 21, 2018 6:39:41 PM", 
        "id": 344414751
      }
    }, 
    "repository": {
      "name": "apache-jackrabbit-oak", 
      "url": "https://github.com/apache/jackrabbit-oak", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3657930
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/jackrabbit-oak/commit/17ca8c41ad6873f51f34db9a4cd2e9299dbd4b94", 
        "sha": "17ca8c41ad6873f51f34db9a4cd2e9299dbd4b94", 
        "branchName": "1.0", 
        "date": "Feb 22, 2018 10:02:21 AM", 
        "repoName": "apache/jackrabbit-oak"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/jackrabbit-oak/commit/22c2719798a3b0c2cc47161c2f1f105829477fe0", 
        "sha": "22c2719798a3b0c2cc47161c2f1f105829477fe0", 
        "branchName": "1.0", 
        "date": "Feb 21, 2018 5:56:02 PM", 
        "repoName": "apache/jackrabbit-oak"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-jackrabbit-oak-344414751-344705279", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1396, 
      "numberLibrariesFailingModule": 67, 
      "numberTestFiles": 723, 
      "numberModules": 21
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 17, 
        "numberDeleted": 13
      }
    }, 
    "bugId": "Bears_155", 
    "diff": "diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\nindex 9812fa80..55247b72 100644\n--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/DocumentNodeStore.java\n@@ -669,7 +669,13 @@ public final class DocumentNodeStore\n             }\n         } else {\n             // branch commit\n-            c.applyToCache(c.getBaseRevision(), isBranch);\n+            try {\n+                c.applyToCache(c.getBaseRevision(), isBranch);\n+            } finally {\n+                if (isDisableBranches()) {\n+                    backgroundOperationLock.readLock().unlock();\n+                }\n+            }\n         }\n     }\n \n@@ -680,6 +686,17 @@ public final class DocumentNodeStore\n             } finally {\n                 backgroundOperationLock.readLock().unlock();\n             }\n+        } else {\n+            try {\n+                Branch b = branches.getBranch(c.getBaseRevision());\n+                if (b != null) {\n+                    b.removeCommit(c.getRevision().asBranchRevision());\n+                }\n+            } finally {\n+                if (isDisableBranches()) {\n+                    backgroundOperationLock.readLock().unlock();\n+                }\n+            }\n         }\n     }\n \n@@ -1982,7 +1999,16 @@ public final class DocumentNodeStore\n                 \"base must be a branch revision: \" + base);\n \n         checkOpen();\n-        return new Commit(this, newRevision(), base, branch);\n+        Commit c = new Commit(this, newRevision(), base, branch);\n+        if (isDisableBranches()) {\n+            // Regular branch commits do not need to acquire the background\n+            // operation lock because the head is not updated and no pending\n+            // lastRev updates are done on trunk. When branches are disabled,\n+            // a branch commit becomes a pseudo trunk commit and the lock\n+            // must be acquired.\n+            backgroundOperationLock.readLock().lock();\n+        }\n+        return c;\n     }\n \n     /**\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 439960960, 
        "hostName": "spirals-bears", 
        "totalMemory": 824180736, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 26, 2018 11:04:50 AM", 
      "projectRootPomPath": "./workspace/apache/jackrabbit-oak/344414751/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            2, 
            1, 
            0, 
            0, 
            163
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 166
        }, 
        "testing": {
          "stepDurations": [
            636
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 636
        }, 
        "cloning": {
          "stepDurations": [
            36
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 36
        }
      }, 
      "reproductionDateBeginning": "Aug 26, 2018 10:16:03 AM", 
      "totalDuration": 2919
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1787, 
        "numberRunning": 1788, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 171
      }, 
      "failingModule": "/root/workspace/Blazebit/blaze-persistence/351937208/core/testsuite", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.blazebit.persistence.testsuite.Issue519Test", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "com.blazebit.persistence.testsuite.Issue519Test", 
          "testMethod": "subselectEntityTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/Blazebit/blaze-persistence/builds/352045689", 
        "date": "Mar 11, 2018 11:10:08 PM", 
        "id": 352045689
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/Blazebit/blaze-persistence/builds/351937208", 
        "date": "Mar 11, 2018 2:09:41 PM", 
        "id": 351937208
      }
    }, 
    "repository": {
      "name": "Blazebit-blaze-persistence", 
      "url": "https://github.com/Blazebit/blaze-persistence", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 21765334
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/Blazebit/blaze-persistence/commit/48d2963a45ed8210b651008a0c5c1ba98e375ba5", 
        "sha": "48d2963a45ed8210b651008a0c5c1ba98e375ba5", 
        "branchName": "master", 
        "date": "Mar 11, 2018 7:40:24 PM", 
        "repoName": "Blazebit/blaze-persistence"
      }, 
      "buggyBuild": {
        "url": "http://github.com/Blazebit/blaze-persistence/commit/70a7a962e7e2f90137f1ae2432aa8b2846de383a", 
        "sha": "70a7a962e7e2f90137f1ae2432aa8b2846de383a", 
        "branchName": "master", 
        "date": "Mar 11, 2018 11:45:06 AM", 
        "repoName": "Blazebit/blaze-persistence"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/Blazebit-blaze-persistence-351937208-352045689", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_156", 
    "diff": "diff --git a/integration/hibernate-base/src/main/java/com/blazebit/persistence/integration/hibernate/base/HibernateJpaProvider.java b/integration/hibernate-base/src/main/java/com/blazebit/persistence/integration/hibernate/base/HibernateJpaProvider.java\nindex 5d811850..d5880011 100644\n--- a/integration/hibernate-base/src/main/java/com/blazebit/persistence/integration/hibernate/base/HibernateJpaProvider.java\n+++ b/integration/hibernate-base/src/main/java/com/blazebit/persistence/integration/hibernate/base/HibernateJpaProvider.java\n@@ -506,12 +506,19 @@ public class HibernateJpaProvider implements JpaProvider {\n         }\n \n         // In this case, the property might represent a formula\n-        if (columnNames.length == 1 && columnNames[0] == null) {\n+        boolean isFormula = columnNames.length == 1 && columnNames[0] == null;\n+        boolean isSubselect = tables.length == 1 && tables[0] == null;\n+\n+        if (isFormula || isSubselect) {\n             Type propertyType = entityPersister.getPropertyType(attributeName);\n             long length;\n             int precision;\n             int scale;\n             try {\n+                if (propertyType instanceof org.hibernate.type.EntityType) {\n+                    propertyType = ((org.hibernate.type.EntityType) propertyType).getIdentifierOrUniqueKeyType(sfi);\n+                }\n+\n                 Method m = Type.class.getMethod(\"dictatedSizes\", Mapping.class);\n                 Object size = ((Object[]) m.invoke(propertyType, sfi))[0];\n                 length =    (long) size.getClass().getMethod(\"getLength\").invoke(size);\n", 
    "projectMetrics": {
      "numberSourceFiles": 1760, 
      "numberLibrariesFailingModule": 48, 
      "numberTestFiles": 755, 
      "numberModules": 67
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 262728712, 
        "hostName": "spirals-bears", 
        "totalMemory": 521142272, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 29, 2018 2:55:32 PM", 
      "projectRootPomPath": "./workspace/Blazebit/blaze-persistence/351937208/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            3, 
            0, 
            1, 
            167
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 172
        }, 
        "testing": {
          "stepDurations": [
            322
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 322
        }, 
        "cloning": {
          "stepDurations": [
            11
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 11
        }
      }, 
      "reproductionDateBeginning": "Aug 29, 2018 2:28:48 PM", 
      "totalDuration": 1596
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 490, 
        "numberRunning": 491, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/CorfuDB/CorfuDB/330246430/test", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<[tru]e> but was:<[fals]e>", 
          "isError": false, 
          "testMethod": "testStringWithIdIsEqual", 
          "testClass": "org.corfudb.runtime.utils.NodeLocatorTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 7, 
          "testClass": "org.corfudb.runtime.utils.NodeLocatorTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/CorfuDB/CorfuDB/builds/330267605", 
        "date": "Jan 18, 2018 10:46:00 AM", 
        "id": 330267605
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/CorfuDB/CorfuDB/builds/330246430", 
        "date": "Jan 18, 2018 9:29:20 AM", 
        "id": 330246430
      }
    }, 
    "repository": {
      "name": "CorfuDB-CorfuDB", 
      "url": "https://github.com/CorfuDB/CorfuDB", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 12960439
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/CorfuDB/CorfuDB/commit/2ddc9ce680e726f8f8485c1b3c317fe665cda42d", 
        "sha": "2ddc9ce680e726f8f8485c1b3c317fe665cda42d", 
        "branchName": "nodeLocatorEquality", 
        "date": "Jan 18, 2018 10:19:19 AM", 
        "repoName": "CorfuDB/CorfuDB"
      }, 
      "buggyBuild": {
        "url": "http://github.com/CorfuDB/CorfuDB/commit/49b3ef96623130164fa1f88c00431ed5a473add0", 
        "sha": "49b3ef96623130164fa1f88c00431ed5a473add0", 
        "branchName": "nodeLocatorEquality", 
        "date": "Jan 18, 2018 9:09:26 AM", 
        "repoName": "CorfuDB/CorfuDB"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/CorfuDB-CorfuDB-330246430-330267605", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 301, 
      "numberLibrariesFailingModule": 97, 
      "numberTestFiles": 112, 
      "numberModules": 11
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_157", 
    "diff": "diff --git a/runtime/src/main/java/org/corfudb/util/NodeLocator.java b/runtime/src/main/java/org/corfudb/util/NodeLocator.java\nindex ea9b8058..d9efcd53 100644\n--- a/runtime/src/main/java/org/corfudb/util/NodeLocator.java\n+++ b/runtime/src/main/java/org/corfudb/util/NodeLocator.java\n@@ -142,9 +142,9 @@ public class NodeLocator implements Serializable {\n         if (otherNode.getNodeId() != null && otherNode.getNodeId().equals(getNodeId())) {\n             return true;\n         } else {\n-            // Otherwise, the other node must not have a node ID set\n+            // Otherwise, the both node IDs must not be set\n             // and must match by host and port.\n-            return otherNode.getNodeId() == null\n+            return !(otherNode.getNodeId() == null && getNodeId() != null)\n                 && otherNode.getHost().equals(getHost())\n                 && otherNode.getPort() == getPort();\n         }\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 1157019376, 
        "hostName": "spirals-bears", 
        "totalMemory": 1872232448, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 19, 2018 9:18:42 AM", 
      "projectRootPomPath": "./workspace/CorfuDB/CorfuDB/330246430/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            180
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 180
        }, 
        "testing": {
          "stepDurations": [
            606
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 606
        }, 
        "cloning": {
          "stepDurations": [
            311
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 311
        }
      }, 
      "reproductionDateBeginning": "Aug 19, 2018 8:48:25 AM", 
      "totalDuration": 1812
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 429, 
        "numberRunning": 430, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.UnsupportedOperationException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/cpesch/RouteConverter/331125693/navigation-formats", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "slash.navigation.csv.ExcelFormatTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.UnsupportedOperationException", 
          "testMethod": "testSetAndGetTime", 
          "isError": true, 
          "testClass": "slash.navigation.csv.ExcelFormatTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/331749933", 
        "date": "Jan 22, 2018 11:53:38 AM", 
        "id": 331749933
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/cpesch/RouteConverter/builds/331125693", 
        "date": "Jan 20, 2018 8:53:18 AM", 
        "id": 331125693
      }
    }, 
    "repository": {
      "name": "cpesch-RouteConverter", 
      "url": "https://github.com/cpesch/RouteConverter", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1271699
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/81710d9c624fb24dfa08e5bbfe853972b00ba71b", 
        "sha": "81710d9c624fb24dfa08e5bbfe853972b00ba71b", 
        "branchName": "master", 
        "date": "Jan 22, 2018 11:47:15 AM", 
        "repoName": "cpesch/RouteConverter"
      }, 
      "buggyBuild": {
        "url": "http://github.com/cpesch/RouteConverter/commit/6776ddcd18f883f1f37810b50e824fcc70e534e6", 
        "sha": "6776ddcd18f883f1f37810b50e824fcc70e534e6", 
        "branchName": "master", 
        "date": "Jan 20, 2018 8:26:26 AM", 
        "repoName": "cpesch/RouteConverter"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/cpesch-RouteConverter-331125693-331749933", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1411, 
      "numberLibrariesFailingModule": 43, 
      "numberTestFiles": 165, 
      "numberModules": 46
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 10, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_158", 
    "diff": "diff --git a/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java b/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\nindex eca92fcc..762d4a29 100644\n--- a/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\n+++ b/navigation-formats/src/main/java/slash/navigation/csv/ExcelPosition.java\n@@ -20,6 +20,7 @@\n \n package slash.navigation.csv;\n \n+import org.apache.poi.hssf.usermodel.HSSFWorkbook;\n import org.apache.poi.ss.usermodel.*;\n import slash.common.type.CompactCalendar;\n import slash.navigation.base.BaseNavigationPosition;\n@@ -43,7 +44,15 @@ public class ExcelPosition extends BaseNavigationPosition {\n     }\n \n     public ExcelPosition(Double longitude, Double latitude, Double elevation, Double speed, CompactCalendar time, String description) {\n-        throw new UnsupportedOperationException();\n+        Workbook workbook = new HSSFWorkbook();\n+        Sheet sheet = workbook.createSheet(\"new sheet\");\n+        this.row = sheet.createRow(0);\n+        setLongitude(longitude);\n+        setLatitude(latitude);\n+        setElevation(elevation);\n+        setSpeed(speed);\n+        setTime(time);\n+        setDescription(description);\n     }\n \n     Row getRow() {\n@@ -105,7 +114,7 @@ public class ExcelPosition extends BaseNavigationPosition {\n         Cell cell = getOrCreateCell(type);\n         if (cell != null) {\n             if (value != null)\n-                cell.setCellValue(value.getCalendar());\n+                cell.setCellValue(value.getTime());\n             else\n                 cell.setCellValue(0);\n         }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 294795312, 
        "hostName": "spirals-bears", 
        "totalMemory": 548405248, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 21, 2018 11:23:27 PM", 
      "projectRootPomPath": "./workspace/cpesch/RouteConverter/331125693/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            0, 
            158
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 159
        }, 
        "testing": {
          "stepDurations": [
            34
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 34
        }, 
        "cloning": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }
      }, 
      "reproductionDateBeginning": "Aug 21, 2018 11:17:00 PM", 
      "totalDuration": 380
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 484, 
        "numberRunning": 485, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "org.apache.kafka.connect.errors.ConnectException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/324021438/debezium-connector-postgres", 
      "failureDetails": [
        {
          "failureName": "org.apache.kafka.connect.errors.ConnectException", 
          "detail": "java.time.format.DateTimeParseException: Text '2016-11-04 13:51:30.123' could not be parsed, unparsed text found at index 19", 
          "isError": true, 
          "testMethod": "testTimestamp", 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 5, 
          "numberRunning": 6, 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/324040188", 
        "date": "Jan 2, 2018 9:00:02 AM", 
        "id": 324040188
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/324021438", 
        "date": "Jan 2, 2018 8:34:08 AM", 
        "id": 324021438
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/24e305ad578c0418d7ce3a8197e16efde2abe041", 
        "sha": "24e305ad578c0418d7ce3a8197e16efde2abe041", 
        "branchName": "master", 
        "date": "Jan 2, 2018 8:52:27 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/5f3902d2401460112728962d0f64718f33afc6a1", 
        "sha": "5f3902d2401460112728962d0f64718f33afc6a1", 
        "branchName": "master", 
        "date": "Jan 2, 2018 7:00:03 AM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-324021438-324040188", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 2
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_159", 
    "diff": "diff --git a/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java b/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\nindex 8b2f946d..ad70f228 100644\n--- a/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\n+++ b/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\n@@ -43,8 +43,11 @@ public static DateTimeFormat get() {\n     public static class ISODateTimeFormat implements DateTimeFormat {\n         private static final Logger LOGGER = LoggerFactory.getLogger(ISODateTimeFormat.class);\n \n-        private static final String TS_FORMAT_PATTERN = \"yyyy-MM-dd HH:mm:ss\";\n-        private static final DateTimeFormatter TS_FORMAT = DateTimeFormatter.ofPattern(TS_FORMAT_PATTERN);\n+        private static final String TS_FORMAT_PATTERN = \"yyyy-MM-dd HH:mm:ss[.S]\";\n+        private static final DateTimeFormatter TS_FORMAT = new DateTimeFormatterBuilder()\n+                .appendPattern(\"yyyy-MM-dd HH:mm:ss\")\n+                .appendFraction(ChronoField.MICRO_OF_SECOND, 0, 6, true)\n+                .toFormatter();\n \n         private static final String TS_TZ_FORMAT_PATTERN = \"yyyy-MM-dd HH:mm:ss[.S]X\";\n         private static final DateTimeFormatter TS_TZ_FORMAT = new DateTimeFormatterBuilder()\n", 
    "projectMetrics": {
      "numberSourceFiles": 224, 
      "numberLibrariesFailingModule": 76, 
      "numberTestFiles": 121, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 409737072, 
        "hostName": "spirals-bears", 
        "totalMemory": 452460544, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 17, 2018 8:47:25 PM", 
      "projectRootPomPath": "./workspace/debezium/debezium/324021438/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            142
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 142
        }, 
        "testing": {
          "stepDurations": [
            47
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 47
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 17, 2018 8:42:47 PM", 
      "totalDuration": 271
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 477, 
        "numberRunning": 478, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "io.debezium.text.ParsingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/324040188/debezium-connector-mysql", 
      "failingClasses": [
        {
          "numberPassing": 81, 
          "numberRunning": 82, 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "io.debezium.text.ParsingException", 
          "testMethod": "shouldParseAlterTableStatementWithColumnNamedColumnWithColumnWord", 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "detail": "Expecting token type 128 at line 1, column 80 but found 'RESTRICT': i`, DROP COLUMN jkl  ===>> RESTRICT", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/324047191", 
        "date": "Jan 2, 2018 9:34:20 AM", 
        "id": 324047191
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/324040188", 
        "date": "Jan 2, 2018 9:00:02 AM", 
        "id": 324040188
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/42991d260f37a0e1cbffbbf2107945976803e4ed", 
        "sha": "42991d260f37a0e1cbffbbf2107945976803e4ed", 
        "branchName": "master", 
        "date": "Jan 2, 2018 9:26:07 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/24e305ad578c0418d7ce3a8197e16efde2abe041", 
        "sha": "24e305ad578c0418d7ce3a8197e16efde2abe041", 
        "branchName": "master", 
        "date": "Jan 2, 2018 8:52:27 AM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-324040188-324047191", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_160", 
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex 350d0c5d..c5dd9599 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -1225,6 +1225,7 @@ protected void parseAlterSpecification(Marker start, TableEditor table, Consumer\n                 }\n                 String columnName = parseColumnName();\n                 table.removeColumn(columnName);\n+                tokens.canConsume(\"RESTRICT\");\n             }\n         } else if (tokens.canConsume(\"ALTER\")) {\n             if (!isNextTokenQuotedIdentifier()) {\n", 
    "projectMetrics": {
      "numberSourceFiles": 224, 
      "numberLibrariesFailingModule": 77, 
      "numberTestFiles": 121, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 262022288, 
        "hostName": "spirals-bears", 
        "totalMemory": 487587840, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 17, 2018 8:47:21 PM", 
      "projectRootPomPath": "./workspace/debezium/debezium/324040188/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            142
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 142
        }, 
        "testing": {
          "stepDurations": [
            40
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 40
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 17, 2018 8:42:47 PM", 
      "totalDuration": 266
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 478, 
        "numberRunning": 479, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "io.debezium.text.ParsingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/325431120/debezium-connector-mysql", 
      "failureDetails": [
        {
          "failureName": "io.debezium.text.ParsingException", 
          "detail": "Expecting ')' at line 1, column 221 but found ',':  THAN ('2018-01-17') ===>> , PARTITION p_2018_0", 
          "isError": true, 
          "testMethod": "parsePartitionReorganize", 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 82, 
          "numberRunning": 83, 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/326310450", 
        "date": "Jan 8, 2018 12:06:15 PM", 
        "id": 326310450
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/325431120", 
        "date": "Jan 5, 2018 2:00:25 PM", 
        "id": 325431120
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/3d7cc6a7e3491c2e3a44c636d15276f55b09133d", 
        "sha": "3d7cc6a7e3491c2e3a44c636d15276f55b09133d", 
        "branchName": "master", 
        "date": "Jan 8, 2018 11:58:09 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/a629591f1ff60ec0a70fa00b26c6acbac0a6387a", 
        "sha": "a629591f1ff60ec0a70fa00b26c6acbac0a6387a", 
        "branchName": "master", 
        "date": "Jan 5, 2018 1:52:19 PM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-325431120-326310450", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_161", 
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex c5dd9599..b2a8e136 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -1297,7 +1297,9 @@ protected void parseAlterSpecification(Marker start, TableEditor table, Consumer\n         } else if (tokens.canConsume(\"REORGANIZE\", \"PARTITION\")) {\n             parsePartitionNames(start);\n             tokens.consume(\"INTO\", \"(\");\n-            parsePartitionDefinition(start, table);\n+            do {\n+                parsePartitionDefinition(start, table);\n+            } while (tokens.canConsume(','));\n             tokens.consume(')');\n         } else if (tokens.canConsume(\"EXCHANGE\", \"PARTITION\")) {\n             tokens.consume(); // partition name\n", 
    "projectMetrics": {
      "numberSourceFiles": 224, 
      "numberLibrariesFailingModule": 77, 
      "numberTestFiles": 123, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 246919464, 
        "hostName": "spirals-bears", 
        "totalMemory": 424673280, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 19, 2018 2:52:43 AM", 
      "projectRootPomPath": "./workspace/debezium/debezium/325431120/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            94
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 94
        }, 
        "testing": {
          "stepDurations": [
            38
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 38
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 19, 2018 2:49:11 AM", 
      "totalDuration": 208
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 488, 
        "numberRunning": 490, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/343712961/debezium-connector-mysql", 
      "failingClasses": [
        {
          "numberPassing": 82, 
          "numberRunning": 84, 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "parseDdlForUnscaledDecAndFixed", 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "detail": "expected:<[10]> but was:<[-1]>", 
          "isError": false
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "testMethod": "parseDdlForDecAndFixed", 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "detail": "expected:<[0]> but was:<[-1]>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/343714390", 
        "date": "Feb 20, 2018 9:05:48 AM", 
        "id": 343714390
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/343712961", 
        "date": "Feb 20, 2018 8:59:08 AM", 
        "id": 343712961
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/a08a00d46e8cadf8eac802699afe9b3396a6fa0c", 
        "sha": "a08a00d46e8cadf8eac802699afe9b3396a6fa0c", 
        "branchName": "master", 
        "date": "Feb 20, 2018 8:54:28 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/6e00924ee95f0624fac66d1a2b666dbda2fa8ea7", 
        "sha": "6e00924ee95f0624fac66d1a2b666dbda2fa8ea7", 
        "branchName": "master", 
        "date": "Feb 20, 2018 8:47:43 AM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-343712961-343714390", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 241, 
      "numberLibrariesFailingModule": 77, 
      "numberTestFiles": 128, 
      "numberModules": 7
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 9
      }
    }, 
    "bugId": "Bears_162", 
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex add493eb..7ee9d21e 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -834,6 +834,15 @@ protected void parseColumnDefinition(Marker start, String columnName, TokenStrea\n             column.charsetName(\"utf8\");\n         }\n \n+        if (Types.DECIMAL == dataType.jdbcType()) {\n+            if (dataType.length() == -1) {\n+                column.length(10);\n+            }\n+            if (dataType.scale() == -1) {\n+                column.scale(0);\n+            }\n+        }\n+\n         if (tokens.canConsume(\"CHARSET\") || tokens.canConsume(\"CHARACTER\", \"SET\")) {\n             String charsetName = tokens.consume();\n             if (!\"DEFAULT\".equalsIgnoreCase(charsetName)) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 371192192, 
        "hostName": "spirals-bears", 
        "totalMemory": 407896064, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 25, 2018 1:30:05 PM", 
      "projectRootPomPath": "./workspace/debezium/debezium/343712961/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            93
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 93
        }, 
        "testing": {
          "stepDurations": [
            42
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 42
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 25, 2018 1:26:18 PM", 
      "totalDuration": 220
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 486, 
        "numberRunning": 487, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "io.debezium.text.ParsingException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/351465554/debezium-connector-mysql", 
      "failureDetails": [
        {
          "failureName": "io.debezium.text.ParsingException", 
          "detail": "Failed to parse statement 'ALTER TABLE t ADD CONSTRAINT UNIQUE KEY col_key ('col1');'", 
          "isError": true, 
          "testMethod": "shouldParseAlterTableStatementAddConstraintUniqueKey", 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 85, 
          "numberRunning": 86, 
          "testClass": "io.debezium.connector.mysql.MySqlDdlParserTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/354212780", 
        "date": "Mar 16, 2018 9:57:38 AM", 
        "id": 354212780
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/351465554", 
        "date": "Mar 9, 2018 8:56:23 PM", 
        "id": 351465554
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/469199350f4efac568ab0b384ad31b5bb24f4b19", 
        "sha": "469199350f4efac568ab0b384ad31b5bb24f4b19", 
        "branchName": "master", 
        "date": "Mar 16, 2018 9:44:47 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/2a35eae1789ccbcfa58ba97843974e8003f6513d", 
        "sha": "2a35eae1789ccbcfa58ba97843974e8003f6513d", 
        "branchName": "master", 
        "date": "Mar 9, 2018 8:43:57 PM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-351465554-354212780", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 244, 
      "numberLibrariesFailingModule": 77, 
      "numberTestFiles": 128, 
      "numberModules": 7
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_163", 
    "diff": "diff --git a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\nindex 41099952..56e9de09 100644\n--- a/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n+++ b/debezium-connector-mysql/src/main/java/io/debezium/connector/mysql/MySqlDdlParser.java\n@@ -622,7 +622,9 @@ protected void parseCreateDefinition(Marker start, TableEditor table, boolean is\n                     tokens.rewind(defnStart);\n                 }\n             }\n-            if (tokens.canConsume(\"CONSTRAINT\", TokenStream.ANY_VALUE, \"UNIQUE\") || tokens.canConsume(\"UNIQUE\")) {\n+            if (tokens.canConsume(\"CONSTRAINT\", TokenStream.ANY_VALUE, \"UNIQUE\")\n+                    || tokens.canConsume(\"CONSTRAINT\", \"UNIQUE\")\n+                    || tokens.canConsume(\"UNIQUE\")) {\n                 tokens.canConsumeAnyOf(\"KEY\", \"INDEX\");\n                 try {\n                     if (!tokens.matches('(')) {\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 276331152, 
        "hostName": "spirals-bears", 
        "totalMemory": 495452160, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 30, 2018 5:09:03 PM", 
      "projectRootPomPath": "./workspace/debezium/debezium/351465554/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            120
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 120
        }, 
        "testing": {
          "stepDurations": [
            45
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 45
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 30, 2018 5:04:45 PM", 
      "totalDuration": 251
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 496, 
        "numberRunning": 500, 
        "numberFailing": 0, 
        "numberErroring": 4, 
        "failures": [
          {
            "failureName": "org.apache.kafka.connect.errors.ConnectException", 
            "isError": true, 
            "occurrences": 4
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/debezium/debezium/356786658/debezium-connector-postgres", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 6, 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "numberFailing": 0, 
          "numberErroring": 4, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.apache.kafka.connect.errors.ConnectException", 
          "testMethod": "testDate", 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "detail": "java.time.format.DateTimeParseException: Text '2016-11-04 BC' could not be parsed, unparsed text found at index 10", 
          "isError": true
        }, 
        {
          "failureName": "org.apache.kafka.connect.errors.ConnectException", 
          "testMethod": "testSystemTimestamp", 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "detail": "java.time.format.DateTimeParseException: Text '2018-03-22 12:30:56.824452+05:30' could not be parsed, unparsed text found at index 29", 
          "isError": true
        }, 
        {
          "failureName": "org.apache.kafka.connect.errors.ConnectException", 
          "testMethod": "testTimestamp", 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "detail": "java.time.format.DateTimeParseException: Text '0002-12-01 17:00:00 BC' could not be parsed, unparsed text found at index 19", 
          "isError": true
        }, 
        {
          "failureName": "org.apache.kafka.connect.errors.ConnectException", 
          "testMethod": "testTimestampWithTimeZone", 
          "testClass": "io.debezium.connector.postgresql.connection.wal2json.ISODateTimeFormatTest", 
          "detail": "java.time.format.DateTimeParseException: Text '2016-11-04 13:51:30.123789+02:30' could not be parsed, unparsed text found at index 29", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/357274631", 
        "date": "Mar 23, 2018 9:08:23 AM", 
        "id": 357274631
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/debezium/debezium/builds/356786658", 
        "date": "Mar 22, 2018 10:59:37 AM", 
        "id": 356786658
      }
    }, 
    "repository": {
      "name": "debezium-debezium", 
      "url": "https://github.com/debezium/debezium", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 50205233
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/debezium/debezium/commit/0743467102e9c17677f46b235fe4a42759e15c73", 
        "sha": "0743467102e9c17677f46b235fe4a42759e15c73", 
        "branchName": "master", 
        "date": "Mar 23, 2018 8:55:24 AM", 
        "repoName": "debezium/debezium"
      }, 
      "buggyBuild": {
        "url": "http://github.com/debezium/debezium/commit/b1ae5afd69858b3a5a9f4810e11d674e6b58da19", 
        "sha": "b1ae5afd69858b3a5a9f4810e11d674e6b58da19", 
        "branchName": "master", 
        "date": "Mar 22, 2018 10:46:50 AM", 
        "repoName": "debezium/debezium"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/debezium-debezium-356786658-357274631", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 11, 
        "numberDeleted": 8
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_164", 
    "diff": "diff --git a/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java b/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\nindex ad70f228..42ec6a7b 100644\n--- a/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\n+++ b/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/wal2json/DateTimeFormat.java\n@@ -14,6 +14,7 @@\n import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.time.format.DateTimeParseException;\n+import java.time.format.TextStyle;\n import java.time.temporal.ChronoField;\n import java.util.function.Supplier;\n \n@@ -47,23 +48,35 @@ public static DateTimeFormat get() {\n         private static final DateTimeFormatter TS_FORMAT = new DateTimeFormatterBuilder()\n                 .appendPattern(\"yyyy-MM-dd HH:mm:ss\")\n                 .appendFraction(ChronoField.MICRO_OF_SECOND, 0, 6, true)\n+                .optionalStart()\n+                .appendLiteral(\" \")\n+                .appendText(ChronoField.ERA, TextStyle.SHORT)\n+                .optionalEnd()\n                 .toFormatter();\n \n         private static final String TS_TZ_FORMAT_PATTERN = \"yyyy-MM-dd HH:mm:ss[.S]X\";\n         private static final DateTimeFormatter TS_TZ_FORMAT = new DateTimeFormatterBuilder()\n                 .appendPattern(\"yyyy-MM-dd HH:mm:ss\")\n                 .appendFraction(ChronoField.MICRO_OF_SECOND, 0, 6, true)\n-                .appendOffset(\"+HH\", \"\")\n+                .appendOffset(\"+HH:mm\", \"\")\n+                .optionalStart()\n+                .appendLiteral(\" \")\n+                .appendText(ChronoField.ERA, TextStyle.SHORT)\n+                .optionalEnd()\n                 .toFormatter();\n \n         private static final String SYSTEM_TS_FORMAT_PATTERN = \"yyyy-MM-dd HH:mm:ss.SSSSSSX\";\n         private static final DateTimeFormatter SYSTEM_TS_FORMAT = new DateTimeFormatterBuilder()\n                 .appendPattern(\"yyyy-MM-dd HH:mm:ss\")\n                 .appendFraction(ChronoField.MICRO_OF_SECOND, 0, 6, true)\n-                .appendOffset(\"+HH\", \"Z\")\n+                .appendOffset(\"+HH:mm\", \"Z\")\n+                .optionalStart()\n+                .appendLiteral(\" \")\n+                .appendText(ChronoField.ERA, TextStyle.SHORT)\n+                .optionalEnd()\n                 .toFormatter();\n \n-        private static final String DATE_FORMAT_PATTERN = \"yyyy-MM-dd\";\n+        private static final String DATE_FORMAT_PATTERN = \"yyyy-MM-dd[ GG]\";\n         private static final DateTimeFormatter DATE_FORMAT = DateTimeFormatter.ofPattern(DATE_FORMAT_PATTERN);\n \n         private static final String TIME_FORMAT_PATTERN = \"HH:mm:ss\";\n", 
    "projectMetrics": {
      "numberSourceFiles": 244, 
      "numberLibrariesFailingModule": 76, 
      "numberTestFiles": 129, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 251041488, 
        "hostName": "spirals-bears", 
        "totalMemory": 493355008, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 1, 2018 7:23:46 AM", 
      "projectRootPomPath": "./workspace/debezium/debezium/356786658/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            93
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 94
        }, 
        "testing": {
          "stepDurations": [
            48
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 48
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Sep 1, 2018 7:19:58 AM", 
      "totalDuration": 223
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 324, 
        "numberRunning": 326, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/dhis2/dhis2-core/365246679/dhis-2/dhis-api", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected:<10> but was:<5>", 
          "isError": false, 
          "testMethod": "testHashCode", 
          "testClass": "org.hisp.dhis.dataelement.OperandTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Values should be different. Actual: {\"class\":\"class org.hisp.dhis.dataelement.DataElementOperand\", \"id\":\"0\", \"uid\":\"null\", \"dataElement\":{\"class\":\"class org.hisp.dhis.dataelement.DataElement\", \"hashCode\":\"-58940749\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"DataElement A\", \"shortName\":\"null\", \"description\":\"null\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptionCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryOptionCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"categoryCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"CategoryCombo B\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptions\":[]}\"attributeOptionCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryOptionCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"categoryCombo\":{\"class\":\"class org.hisp.dhis.dataelement.DataElementCategoryCombo\", \"id\":\"0\", \"uid\":\"null\", \"code\":\"null\", \"name\":\"CategoryCombo B\", \"created\":\"null\", \"lastUpdated\":\"null\" }, \"categoryOptions\":[]}}", 
          "isError": false, 
          "testMethod": "testEquals", 
          "testClass": "org.hisp.dhis.dataelement.OperandTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "org.hisp.dhis.dataelement.OperandTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/dhis2/dhis2-core/builds/365386294", 
        "date": "Apr 12, 2018 2:35:25 AM", 
        "id": 365386294
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/dhis2/dhis2-core/builds/365246679", 
        "date": "Apr 11, 2018 8:19:44 PM", 
        "id": 365246679
      }
    }, 
    "repository": {
      "name": "dhis2-dhis2-core", 
      "url": "https://github.com/dhis2/dhis2-core", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 66940520
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/dhis2/dhis2-core/commit/24b5733682bc55f7f0d8fdd5678da07c40c90650", 
        "sha": "24b5733682bc55f7f0d8fdd5678da07c40c90650", 
        "branchName": "2.29", 
        "date": "Apr 11, 2018 11:17:18 PM", 
        "repoName": "dhis2/dhis2-core"
      }, 
      "buggyBuild": {
        "url": "http://github.com/dhis2/dhis2-core/commit/7b28e043518901956c411e69565d1ca4662d4858", 
        "sha": "7b28e043518901956c411e69565d1ca4662d4858", 
        "branchName": "2.29", 
        "date": "Apr 11, 2018 8:05:26 PM", 
        "repoName": "dhis2/dhis2-core"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/dhis2-dhis2-core-365246679-365386294", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 62
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_165", 
    "diff": "diff --git a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\nindex 918a7946..46919878 100644\n--- a/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\n+++ b/dhis-2/dhis-api/src/main/java/org/hisp/dhis/dataelement/DataElementOperand.java\n@@ -317,9 +317,70 @@ public class DataElementOperand\n     }\r\n \r\n     // -------------------------------------------------------------------------\r\n-    // toString, mergeWith\r\n+    // hashCode, equals and toString\r\n     // -------------------------------------------------------------------------\r\n \r\n+    @Override\r\n+    public int hashCode()\r\n+    {\r\n+        int result = dataElement.hashCode();\r\n+        result = 31 * result + (categoryOptionCombo != null ? categoryOptionCombo.hashCode() : 0);\r\n+        result = 31 * result + (attributeOptionCombo != null ? attributeOptionCombo.hashCode() : 0);\r\n+        return result;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean equals( Object object )\r\n+    {\r\n+        if ( this == object )\r\n+        {\r\n+            return true;\r\n+        }\r\n+\r\n+        if ( object == null )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( getClass() != object.getClass() )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        DataElementOperand other = (DataElementOperand) object;\r\n+\r\n+        if ( !dataElement.equals( other.dataElement ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( categoryOptionCombo == null )\r\n+        {\r\n+            if ( other.categoryOptionCombo != null )\r\n+            {\r\n+                return false;\r\n+            }\r\n+        }\r\n+        else if ( !categoryOptionCombo.equals( other.categoryOptionCombo ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        if ( attributeOptionCombo == null )\r\n+        {\r\n+            if ( other.attributeOptionCombo != null )\r\n+            {\r\n+                return false;\r\n+            }\r\n+        }\r\n+        else if ( !attributeOptionCombo.equals( other.attributeOptionCombo ) )\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        return true;\r\n+    }\r\n+\r\n     @Override\r\n     public String toString()\r\n     {\r\n", 
    "projectMetrics": {
      "numberSourceFiles": 1986, 
      "numberLibrariesFailingModule": 72, 
      "numberTestFiles": 318, 
      "numberModules": 15
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 324154968, 
        "hostName": "spirals-bears", 
        "totalMemory": 709885952, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 1:26:33 PM", 
      "projectRootPomPath": "./workspace/dhis2/dhis2-core/365246679/dhis-2/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            180
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 182
        }, 
        "testing": {
          "stepDurations": [
            15
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 15
        }, 
        "cloning": {
          "stepDurations": [
            22
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 22
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 1:15:30 PM", 
      "totalDuration": 654
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 17, 
        "numberRunning": 18, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/EnMasseProject/enmasse/344863667/address-model-lib", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "io.enmasse.address.model.v1.address.AddressTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testCopy", 
          "testClass": "io.enmasse.address.model.v1.address.AddressTest", 
          "detail": "\nExpected: is <Active>\n     but: was <Pending>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344945686", 
        "date": "Feb 22, 2018 9:15:58 PM", 
        "id": 344945686
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344863667", 
        "date": "Feb 22, 2018 6:02:11 PM", 
        "id": 344863667
      }
    }, 
    "repository": {
      "name": "EnMasseProject-enmasse", 
      "url": "https://github.com/EnMasseProject/enmasse", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 62793144
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/4c2be71c8acee0dc24f6c1ab91fb9215d843ec15", 
        "sha": "4c2be71c8acee0dc24f6c1ab91fb9215d843ec15", 
        "branchName": "master", 
        "date": "Feb 22, 2018 8:33:37 PM", 
        "repoName": "EnMasseProject/enmasse"
      }, 
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/054f3e1a2fab574bc70ccee8e7e67cfe21658c5f", 
        "sha": "054f3e1a2fab574bc70ccee8e7e67cfe21658c5f", 
        "branchName": "master", 
        "date": "Feb 22, 2018 5:19:09 PM", 
        "repoName": "EnMasseProject/enmasse"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/EnMasseProject-enmasse-344863667-344945686", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 307, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 123, 
      "numberModules": 19
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_166", 
    "diff": "diff --git a/address-model-lib/src/main/java/io/enmasse/address/model/Status.java b/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\nindex 7745f9e6..66e89f0a 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/Status.java\n@@ -21,6 +21,7 @@ public class Status {\n \n     public Status(io.enmasse.address.model.Status other) {\n         this.isReady = other.isReady();\n+        this.phase = other.getPhase();\n         this.messages.addAll(other.getMessages());\n     }\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 540545608, 
        "hostName": "spirals-bears", 
        "totalMemory": 619184128, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 26, 2018 4:14:11 AM", 
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/344863667/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            1, 
            87
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 90
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            31
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 31
        }
      }, 
      "reproductionDateBeginning": "Aug 26, 2018 4:08:53 AM", 
      "totalDuration": 311
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 124, 
        "numberRunning": 126, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/EnMasseProject/enmasse/344945686/address-controller", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Expected exception for duplicate address", 
          "isError": false, 
          "testMethod": "testDuplicateAddresses", 
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest"
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "Expected exception for duplicate address", 
          "isError": false, 
          "testMethod": "testDuplicateAddressesInRequest", 
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 3, 
          "testClass": "io.enmasse.controller.api.v1.AddressApiHelperTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344976598", 
        "date": "Feb 22, 2018 10:26:37 PM", 
        "id": 344976598
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/344945686", 
        "date": "Feb 22, 2018 9:15:58 PM", 
        "id": 344945686
      }
    }, 
    "repository": {
      "name": "EnMasseProject-enmasse", 
      "url": "https://github.com/EnMasseProject/enmasse", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 62793144
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/d4e7465f33c9335d7e6d26c15972e6c8912cfad7", 
        "sha": "d4e7465f33c9335d7e6d26c15972e6c8912cfad7", 
        "branchName": "master", 
        "date": "Feb 22, 2018 9:47:10 PM", 
        "repoName": "EnMasseProject/enmasse"
      }, 
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/4c2be71c8acee0dc24f6c1ab91fb9215d843ec15", 
        "sha": "4c2be71c8acee0dc24f6c1ab91fb9215d843ec15", 
        "branchName": "master", 
        "date": "Feb 22, 2018 8:33:37 PM", 
        "repoName": "EnMasseProject/enmasse"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/EnMasseProject-enmasse-344945686-344976598", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 14
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_167", 
    "diff": "diff --git a/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java b/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\nindex 7bd7d5874..28274271d 100644\n--- a/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\n+++ b/address-controller/src/main/java/io/enmasse/controller/api/v1/AddressApiHelper.java\n@@ -9,6 +9,7 @@ import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n \n+import javax.ws.rs.BadRequestException;\n import javax.ws.rs.NotFoundException;\n import javax.ws.rs.core.SecurityContext;\n \n@@ -19,6 +20,7 @@ import io.enmasse.controller.api.ResourceVerb;\n import io.enmasse.controller.api.osb.v2.OSBExceptions;\n import io.enmasse.k8s.api.AddressApi;\n import io.enmasse.k8s.api.AddressSpaceApi;\n+\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -68,8 +70,20 @@ public class AddressApiHelper {\n         AddressSpaceType type = schema.findAddressSpaceType(addressSpace.getType()).orElseThrow(() -> new UnresolvedAddressSpaceException(\"Unable to resolve address space type \" + addressSpace.getType()));\n \n         AddressResolver addressResolver = new AddressResolver(schema, type);\n+        Set<Address> existingAddresses = addressSpaceApi.withAddressSpace(addressSpace).listAddresses();\n         for (Address address : addressList) {\n             addressResolver.validate(address);\n+            for (Address existing : existingAddresses) {\n+                if (address.getAddress().equals(existing.getAddress()) && !address.getName().equals(existing.getName())) {\n+                    throw new BadRequestException(\"Address '\" + address.getAddress() + \"' already exists with resource name '\" + existing.getName() + \"'\");\n+                }\n+            }\n+\n+            for (Address b : addressList) {\n+                if (address.getAddress().equals(b.getAddress()) && !address.getName().equals(b.getName())) {\n+                    throw new BadRequestException(\"Address '\" + address.getAddress() + \"' defined in resource names '\" + address.getName() + \"' and '\" + b.getName() + \"'\");\n+                }\n+            }\n         }\n     }\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 307, 
      "numberLibrariesFailingModule": 65, 
      "numberTestFiles": 123, 
      "numberModules": 19
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 392729544, 
        "hostName": "spirals-bears", 
        "totalMemory": 505937920, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 26, 2018 4:14:57 AM", 
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/344945686/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            2, 
            0, 
            2, 
            85
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 90
        }, 
        "testing": {
          "stepDurations": [
            82
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 82
        }, 
        "cloning": {
          "stepDurations": [
            30
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 30
        }
      }, 
      "reproductionDateBeginning": "Aug 26, 2018 4:08:34 AM", 
      "totalDuration": 379
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 18, 
        "numberRunning": 20, 
        "numberFailing": 0, 
        "numberErroring": 2, 
        "failures": [
          {
            "failureName": "java.lang.Exception", 
            "isError": true, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/EnMasseProject/enmasse/357424637/address-model-lib", 
      "failingClasses": [
        {
          "numberPassing": 14, 
          "numberRunning": 16, 
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.Exception", 
          "testMethod": "testDeserializeAddressSpaceMissingDefaults", 
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest", 
          "detail": "Unexpected exception, expected<io.enmasse.address.model.v1.DeserializeException> but was<java.lang.NullPointerException>", 
          "isError": true
        }, 
        {
          "failureName": "java.lang.Exception", 
          "testMethod": "testDeserializeAddressMissingDefaults", 
          "testClass": "io.enmasse.address.model.v1.address.SerializationTest", 
          "detail": "Unexpected exception, expected<io.enmasse.address.model.v1.DeserializeException> but was<java.lang.NullPointerException>", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/357457887", 
        "date": "Mar 23, 2018 5:27:59 PM", 
        "id": 357457887
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/EnMasseProject/enmasse/builds/357424637", 
        "date": "Mar 23, 2018 4:19:02 PM", 
        "id": 357424637
      }
    }, 
    "repository": {
      "name": "EnMasseProject-enmasse", 
      "url": "https://github.com/EnMasseProject/enmasse", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 62793144
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/161942d39310aa78cc89350d5155a7a41fc341af", 
        "sha": "161942d39310aa78cc89350d5155a7a41fc341af", 
        "branchName": "master", 
        "date": "Mar 23, 2018 4:49:59 PM", 
        "repoName": "EnMasseProject/enmasse"
      }, 
      "buggyBuild": {
        "url": "http://github.com/EnMasseProject/enmasse/commit/3f99a77cf84ce80b55fe67c3461e0ccf1f198aab", 
        "sha": "3f99a77cf84ce80b55fe67c3461e0ccf1f198aab", 
        "branchName": "master", 
        "date": "Mar 23, 2018 3:42:39 PM", 
        "repoName": "EnMasseProject/enmasse"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/EnMasseProject-enmasse-357424637-357457887", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 64
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_168", 
    "diff": "diff --git a/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java b/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\nindex ef45c560..1d8d40d3 100644\n--- a/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\n+++ b/address-controller/src/main/java/io/enmasse/controller/api/DefaultExceptionMapper.java\n@@ -11,6 +11,7 @@ import javax.ws.rs.ext.Provider;\n \n import io.enmasse.address.model.UnresolvedAddressException;\n import io.enmasse.address.model.UnresolvedAddressSpaceException;\n+import io.enmasse.address.model.v1.DeserializeException;\n import io.enmasse.controller.common.exceptionmapping.ErrorResponse;\n import okhttp3.ResponseBody;\n import org.slf4j.Logger;\n@@ -28,7 +29,7 @@ public class DefaultExceptionMapper implements ExceptionMapper<Exception> {\n             WebApplicationException webApplicationException = (WebApplicationException) exception;\n             status = Response.Status.fromStatusCode(webApplicationException.getResponse().getStatus());\n             response = webApplicationException.getResponse();\n-        } else if (exception instanceof UnresolvedAddressException || exception instanceof UnresolvedAddressSpaceException) {\n+        } else if (exception instanceof UnresolvedAddressException || exception instanceof UnresolvedAddressSpaceException || exception instanceof DeserializeException) {\n             status = Response.Status.BAD_REQUEST;\n             response = Response.status(status)\n                     .entity(new ErrorResponse(null, exception.getMessage()))\ndiff --git a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\nindex c0fafac2..b5e07005 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressSpaceV1Deserializer.java\n@@ -35,6 +35,7 @@ class AddressSpaceV1Deserializer extends JsonDeserializer<AddressSpace> {\n     }\n \n     AddressSpace deserialize(ObjectNode root) {\n+        validate(root);\n \n         ObjectNode metadata = (ObjectNode) root.get(Fields.METADATA);\n         ObjectNode spec = (ObjectNode) root.get(Fields.SPEC);\n@@ -147,6 +148,42 @@ class AddressSpaceV1Deserializer extends JsonDeserializer<AddressSpace> {\n         return builder.build();\n     }\n \n+    private void validate(ObjectNode root) {\n+        validateMetadata(root);\n+        validateSpec(root);\n+    }\n+\n+    private void validateMetadata(ObjectNode root) {\n+        JsonNode node = root.get(Fields.METADATA);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'metadata' object field\");\n+        }\n+\n+        ObjectNode metadata = (ObjectNode) node;\n+        JsonNode name = metadata.get(Fields.NAME);\n+        if (name == null || !name.isTextual()) {\n+            throw new DeserializeException(\"Missing 'name' string field in 'metadata'\");\n+        }\n+    }\n+\n+    private void validateSpec(ObjectNode root) {\n+        JsonNode node = root.get(Fields.SPEC);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'spec' object field\");\n+        }\n+\n+        ObjectNode spec = (ObjectNode) node;\n+        JsonNode type = spec.get(Fields.TYPE);\n+        if (type == null || !type.isTextual()) {\n+            throw new DeserializeException(\"Missing 'type' string field in 'spec'\");\n+        }\n+\n+        JsonNode plan = spec.get(Fields.PLAN);\n+        if (plan == null || !plan.isTextual()) {\n+            throw new DeserializeException(\"Missing 'plan' string field in 'spec'\");\n+        }\n+    }\n+\n     static class TypeConverter {\n         private static final Map<Class, Function<JsonNode, Object>> converterMap = new HashMap<>();\n \ndiff --git a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\nindex 93877799..a59850e8 100644\n--- a/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\n+++ b/address-model-lib/src/main/java/io/enmasse/address/model/v1/AddressV1Deserializer.java\n@@ -7,6 +7,7 @@ package io.enmasse.address.model.v1;\n import com.fasterxml.jackson.core.JsonParser;\n import com.fasterxml.jackson.databind.DeserializationContext;\n import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n@@ -29,6 +30,7 @@ class AddressV1Deserializer extends JsonDeserializer<Address> {\n     }\n \n     Address deserialize(ObjectNode root) {\n+        validate(root);\n         ObjectNode metadata = (ObjectNode) root.get(Fields.METADATA);\n         ObjectNode spec = (ObjectNode) root.get(Fields.SPEC);\n         ObjectNode status = (ObjectNode) root.get(Fields.STATUS);\n@@ -83,4 +85,27 @@ class AddressV1Deserializer extends JsonDeserializer<Address> {\n \n         return builder.build();\n     }\n+\n+    private void validate(ObjectNode root) {\n+        JsonNode node = root.get(Fields.SPEC);\n+        if (node == null || !node.isObject()) {\n+            throw new DeserializeException(\"Missing 'spec' object field\");\n+        }\n+\n+        ObjectNode spec = (ObjectNode) node;\n+        JsonNode address = spec.get(Fields.ADDRESS);\n+        if (address == null || !address.isTextual()) {\n+            throw new DeserializeException(\"Missing 'address' string field in 'spec'\");\n+        }\n+\n+        JsonNode type = spec.get(Fields.TYPE);\n+        if (type == null || !type.isTextual()) {\n+            throw new DeserializeException(\"Missing 'type' string field in 'spec'\");\n+        }\n+\n+        JsonNode plan = spec.get(Fields.PLAN);\n+        if (plan == null || !plan.isTextual()) {\n+            throw new DeserializeException(\"Missing 'plan' string field in 'spec'\");\n+        }\n+    }\n }\n", 
    "projectMetrics": {
      "numberSourceFiles": 339, 
      "numberLibrariesFailingModule": 9, 
      "numberTestFiles": 132, 
      "numberModules": 19
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 356415400, 
        "hostName": "spirals-bears", 
        "totalMemory": 517472256, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 31, 2018 5:46:54 PM", 
      "projectRootPomPath": "./workspace/EnMasseProject/enmasse/357424637/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            1, 
            94
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 97
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            28
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 28
        }
      }, 
      "reproductionDateBeginning": "Aug 31, 2018 5:41:18 PM", 
      "totalDuration": 329
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 620, 
        "numberRunning": 621, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/linkedin/pinot/342188288/pinot-core", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManagerTest", 
          "testMethod": "testSegmentBuildException", 
          "isError": false
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 12, 
          "numberRunning": 13, 
          "testClass": "com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManagerTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/linkedin/pinot/builds/342446553", 
        "date": "Feb 16, 2018 6:54:39 PM", 
        "id": 342446553
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/linkedin/pinot/builds/342188288", 
        "date": "Feb 16, 2018 5:09:49 AM", 
        "id": 342188288
      }
    }, 
    "repository": {
      "name": "linkedin-pinot", 
      "url": "https://github.com/linkedin/pinot", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 19961085
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/linkedin/pinot/commit/5cb7839f5f8978eaae2a9c31aba72234bad6660e", 
        "sha": "5cb7839f5f8978eaae2a9c31aba72234bad6660e", 
        "branchName": "master", 
        "date": "Feb 16, 2018 6:30:08 PM", 
        "repoName": "linkedin/pinot"
      }, 
      "buggyBuild": {
        "url": "http://github.com/linkedin/pinot/commit/ccaa9f5ed02bcd26af78ffc1d4c1126b180566ad", 
        "sha": "ccaa9f5ed02bcd26af78ffc1d4c1126b180566ad", 
        "branchName": "master", 
        "date": "Feb 16, 2018 4:53:41 AM", 
        "repoName": "linkedin/pinot"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/linkedin-pinot-342188288-342446553", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_169", 
    "diff": "diff --git a/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java b/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\nindex b2c25a8f9..ebb23717f 100644\n--- a/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\n+++ b/pinot-core/src/main/java/com/linkedin/pinot/core/data/manager/realtime/LLRealtimeSegmentDataManager.java\n@@ -139,7 +139,11 @@ public class LLRealtimeSegmentDataManager extends RealtimeSegmentDataManager {\n     }\n \n     public void deleteSegmentFile() {\n-      FileUtils.deleteQuietly(new File(_segmentFile));\n+      // If segment build fails with an exception then we will not be able to create a segment file and\n+      // the file name will be null.\n+      if (_segmentFile != null) {\n+        FileUtils.deleteQuietly(new File(_segmentFile));\n+      }\n     }\n   }\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 1112, 
      "numberLibrariesFailingModule": 69, 
      "numberTestFiles": 274, 
      "numberModules": 13
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 176378872, 
        "hostName": "spirals-bears", 
        "totalMemory": 580386816, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 25, 2018 7:43:03 AM", 
      "projectRootPomPath": "./workspace/linkedin/pinot/342188288/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            2, 
            0, 
            0, 
            1, 
            422
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 425
        }, 
        "testing": {
          "stepDurations": [
            845
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 845
        }, 
        "cloning": {
          "stepDurations": [
            57
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 57
        }
      }, 
      "reproductionDateBeginning": "Aug 25, 2018 6:19:24 AM", 
      "totalDuration": 5011
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 3435, 
        "numberRunning": 3437, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "org.testng.TestException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/336061452/molgenis-semantic-mapper", 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 10, 
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.testng.TestException", 
          "testMethod": "testApplyWithInvalidScript", 
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest", 
          "detail": "\nExpected exception org.molgenis.script.core.ScriptException but got java.lang.NullPointerException", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testApplyAlgorithmWitInvalidScript", 
          "testClass": "org.molgenis.semanticmapper.service.impl.AlgorithmServiceImplTest", 
          "detail": "expected [algorithm is not defined] but found [Applying an algorithm on a null source value caused an exception. Is the target attribute required?]", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/336065127", 
        "date": "Feb 1, 2018 1:44:00 PM", 
        "id": 336065127
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/336061452", 
        "date": "Feb 1, 2018 1:19:09 PM", 
        "id": 336061452
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/ad7d5e36da0a5e88be6acaf281c2f74e6f50d796", 
        "sha": "ad7d5e36da0a5e88be6acaf281c2f74e6f50d796", 
        "branchName": "6.0", 
        "date": "Feb 1, 2018 12:55:08 PM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/bcdf56e5d7f1f49fad793871dbd0cb6ac1f3ad1b", 
        "sha": "bcdf56e5d7f1f49fad793871dbd0cb6ac1f3ad1b", 
        "branchName": "6.0", 
        "date": "Feb 1, 2018 12:45:11 PM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-336061452-336065127", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1205, 
      "numberLibrariesFailingModule": 203, 
      "numberTestFiles": 515, 
      "numberModules": 56
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 12, 
        "numberDeleted": 12
      }
    }, 
    "bugId": "Bears_170", 
    "diff": "diff --git a/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java b/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\nindex 14fa4535e..9246b3049 100644\n--- a/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\n+++ b/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/service/impl/AlgorithmServiceImpl.java\n@@ -10,6 +10,7 @@ import org.molgenis.data.meta.model.EntityType;\n import org.molgenis.data.semantic.Relation;\n import org.molgenis.js.magma.JsMagmaScriptEvaluator;\n import org.molgenis.ontology.core.model.OntologyTerm;\n+import org.molgenis.script.core.ScriptException;\n import org.molgenis.security.core.runas.RunAsSystem;\n import org.molgenis.semanticmapper.algorithmgenerator.bean.GeneratedAlgorithm;\n import org.molgenis.semanticmapper.algorithmgenerator.service.AlgorithmGeneratorService;\n@@ -104,14 +105,21 @@ public class AlgorithmServiceImpl implements AlgorithmService\n \tpublic Iterable<AlgorithmEvaluation> applyAlgorithm(Attribute targetAttribute, String algorithm,\n \t\t\tIterable<Entity> sourceEntities)\n \t{\n-\t\treturn stream(sourceEntities.spliterator(), false).map(entity ->\n-\t\t{\n+\t\treturn stream(sourceEntities.spliterator(), false).map(entity -> {\n \t\t\tAlgorithmEvaluation algorithmResult = new AlgorithmEvaluation(entity);\n \t\t\tObject derivedValue;\n \n \t\t\ttry\n \t\t\t{\n \t\t\t\tObject result = jsMagmaScriptEvaluator.eval(algorithm, entity);\n+\n+\t\t\t\t// jsMagmaScriptEvaluator.eval() catches and returns the error instead of throwing it\n+\t\t\t\t// so check instance of result object here\n+\t\t\t\tif (result instanceof ScriptException)\n+\t\t\t\t{\n+\t\t\t\t\treturn algorithmResult.errorMessage(((ScriptException) result).getMessage());\n+\t\t\t\t}\n+\n \t\t\t\tderivedValue = convert(result, targetAttribute);\n \t\t\t}\n \t\t\tcatch (RuntimeException e)\n@@ -135,8 +143,16 @@ public class AlgorithmServiceImpl implements AlgorithmService\n \t\t{\n \t\t\treturn null;\n \t\t}\n-\t\tObject value = jsMagmaScriptEvaluator.eval(algorithm, sourceEntity);\n-\t\treturn convert(value, attributeMapping.getTargetAttribute());\n+\t\tObject result = jsMagmaScriptEvaluator.eval(algorithm, sourceEntity);\n+\n+\t\t// jsMagmaScriptEvaluator.eval() catches and returns the error instead of throwing it\n+\t\t// so check instance of result object here\n+\t\tif (result instanceof ScriptException)\n+\t\t{\n+\t\t\tthrow new ScriptException(((ScriptException) result).getMessage(), ((ScriptException) result).getCause());\n+\t\t}\n+\n+\t\treturn convert(result, attributeMapping.getTargetAttribute());\n \t}\n \n \t@Override\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 756121952, 
        "hostName": "spirals-bears", 
        "totalMemory": 1293942784, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 22, 2018 11:26:33 PM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/336061452/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            497
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 499
        }, 
        "testing": {
          "stepDurations": [
            541
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 541
        }, 
        "cloning": {
          "stepDurations": [
            48
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 48
        }
      }, 
      "reproductionDateBeginning": "Aug 22, 2018 10:46:36 PM", 
      "totalDuration": 2388
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1697, 
        "numberRunning": 1699, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.testng.TestException", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/361210220/molgenis-data-csv", 
      "failureDetails": [
        {
          "failureName": "org.testng.TestException", 
          "detail": "\nMethod CsvIteratorTest.testIteratorValueHeaderMismatchOneNonEmptyValue()[pri:0, instance:org.molgenis.data.csv.CsvIteratorTest@6c4ce583] should have thrown an exception of class org.molgenis.data.MolgenisDataException", 
          "isError": false, 
          "testMethod": "testIteratorValueHeaderMismatchOneNonEmptyValue", 
          "testClass": "org.molgenis.data.csv.CsvIteratorTest"
        }, 
        {
          "failureName": "org.testng.TestException", 
          "detail": "\nMethod CsvIteratorTest.testIteratorValueHeaderMismatch()[pri:0, instance:org.molgenis.data.csv.CsvIteratorTest@6c4ce583] should have thrown an exception of class org.molgenis.data.MolgenisDataException", 
          "isError": false, 
          "testMethod": "testIteratorValueHeaderMismatch", 
          "testClass": "org.molgenis.data.csv.CsvIteratorTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 8, 
          "testClass": "org.molgenis.data.csv.CsvIteratorTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361993202", 
        "date": "Apr 4, 2018 9:17:34 AM", 
        "id": 361993202
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361210220", 
        "date": "Apr 2, 2018 5:20:08 PM", 
        "id": 361210220
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f", 
        "sha": "9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f", 
        "branchName": "master", 
        "date": "Apr 4, 2018 8:55:06 AM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/1e3ddabf51bfa351fda75ec10f06ffda85c0e1f9", 
        "sha": "1e3ddabf51bfa351fda75ec10f06ffda85c0e1f9", 
        "branchName": "master", 
        "date": "Mar 30, 2018 2:10:11 PM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-361210220-361993202", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1243, 
      "numberLibrariesFailingModule": 56, 
      "numberTestFiles": 518, 
      "numberModules": 57
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 10
      }
    }, 
    "bugId": "Bears_171", 
    "diff": "diff --git a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\nindex e4a5fccc5..a87ffa655 100644\n--- a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n+++ b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n@@ -21,6 +21,8 @@ import java.util.zip.ZipFile;\n \n import static java.lang.String.format;\n import static java.nio.charset.StandardCharsets.UTF_8;\n+import static java.util.Arrays.stream;\n+import static java.util.stream.Collectors.joining;\n import static org.molgenis.data.csv.CsvRepositoryCollection.MAC_ZIP;\n \n public class CsvIterator implements CloseableIterator<Entity>\n@@ -130,7 +132,7 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\t\t{\n \t\t\t\tString[] values = csvReader.readNext();\n \n-\t\t\t\tif ((values != null) && (values.length >= colNamesMap.size()))\n+\t\t\t\tif (values != null && values.length == colNamesMap.size())\n \t\t\t\t{\n \t\t\t\t\tList<String> valueList = Arrays.asList(values);\n \t\t\t\t\tfor (int i = 0; i < values.length; ++i)\n@@ -149,6 +151,13 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\t\t\t\t\tnext.set(name, valueList.get(colNamesMap.get(name)));\n \t\t\t\t\t}\n \t\t\t\t}\n+\t\t\t\telse if (values != null && (values.length > 1 || (values.length == 1 && values[0].length() > 0))\n+\t\t\t\t\t\t&& values.length < colNamesMap.size())\n+\t\t\t\t{\n+\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\tformat(\"Number of values (%d) doesn't match the number of headers (%d): [%s]\",\n+\t\t\t\t\t\t\t\t\tvalues.length, colNamesMap.size(), stream(values).collect(joining(\",\"))));\n+\t\t\t\t}\n \t\t\t\telse\n \t\t\t\t{\n \t\t\t\t\tnext = null;\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 138580368, 
        "hostName": "spirals-bears", 
        "totalMemory": 722993152, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 2, 2018 7:53:09 AM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/361210220/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            2, 
            0, 
            1, 
            735
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 739
        }, 
        "testing": {
          "stepDurations": [
            210
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 210
        }, 
        "cloning": {
          "stepDurations": [
            45
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 45
        }
      }, 
      "reproductionDateBeginning": "Sep 2, 2018 6:59:37 AM", 
      "totalDuration": 3204
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 953, 
        "numberRunning": 955, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }, 
          {
            "failureName": "org.mockito.exceptions.misusing.UnnecessaryStubbingException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 454
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/361993202/molgenis-data-security", 
      "failingClasses": [
        {
          "numberPassing": 24, 
          "numberRunning": 26, 
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 70
        }
      ], 
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.misusing.UnnecessaryStubbingException", 
          "testMethod": "tearDownAfterMethod", 
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest", 
          "detail": "\nUnnecessary stubbings detected.\nClean & maintainable test code requires zero unnecessary code.\nFollowing stubbings are unnecessary (click to navigate to relevant line of code):\n  1. -> at org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest.testFindOne(RowLevelSecurityRepositoryDecoratorTest.java:334)\n  2. -> at org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest.testFindOne(RowLevelSecurityRepositoryDecoratorTest.java:336)\nPlease remove unnecessary stubbings or use 'silent' option. More info: javadoc for UnnecessaryStubbingException class.", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testFindOne", 
          "testClass": "org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecoratorTest", 
          "detail": "expected [null] but found [Mock for Entity, hashCode: 1448517199]", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362486982", 
        "date": "Apr 5, 2018 9:30:49 AM", 
        "id": 362486982
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/361993202", 
        "date": "Apr 4, 2018 9:17:34 AM", 
        "id": 361993202
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9553cdd759451ff1977d50a9384efd41ff941146", 
        "sha": "9553cdd759451ff1977d50a9384efd41ff941146", 
        "branchName": "master", 
        "date": "Apr 5, 2018 9:07:25 AM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f", 
        "sha": "9d8d11a5aaa94a08d07ea865d4566d3f7e2b816f", 
        "branchName": "master", 
        "date": "Apr 4, 2018 8:55:06 AM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-361993202-362486982", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1243, 
      "numberLibrariesFailingModule": 52, 
      "numberTestFiles": 518, 
      "numberModules": 57
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 8, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_172", 
    "diff": "diff --git a/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java b/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\nindex d85df4bcc..908e2b52d 100644\n--- a/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\n+++ b/molgenis-data-security/src/main/java/org/molgenis/data/security/owned/AbstractRowLevelSecurityRepositoryDecorator.java\n@@ -75,14 +75,7 @@ public abstract class AbstractRowLevelSecurityRepositoryDecorator<E extends Enti\n \t@Override\n \tpublic E findOne(Query<E> q)\n \t{\n-\t\tE entity = delegate().findOne(q);\n-\n-\t\tif (entity != null && !isOperationPermitted(entity, Action.READ))\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\treturn entity;\n+\t\treturn findAllPermitted(q, Action.READ).findFirst().orElse(null);\n \t}\n \n \t@Override\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 616997576, 
        "hostName": "spirals-bears", 
        "totalMemory": 862978048, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 2, 2018 7:41:27 AM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/361993202/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            1, 
            801
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 804
        }, 
        "testing": {
          "stepDurations": [
            75
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 75
        }, 
        "cloning": {
          "stepDurations": [
            38
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 38
        }
      }, 
      "reproductionDateBeginning": "Sep 2, 2018 6:49:50 AM", 
      "totalDuration": 3089
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1672, 
        "numberRunning": 1673, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.testng.TestException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/362517584/molgenis-data-excel", 
      "failureDetails": [
        {
          "failureName": "org.testng.TestException", 
          "detail": "\nMethod ExcelRepositoryTest.iteratorDuplicateSheetHeader()[pri:0, instance:org.molgenis.data.excel.ExcelRepositoryTest@18ffca6c] should have thrown an exception of class org.molgenis.data.MolgenisDataException", 
          "isError": false, 
          "testMethod": "iteratorDuplicateSheetHeader", 
          "testClass": "org.molgenis.data.excel.ExcelRepositoryTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 14, 
          "numberRunning": 15, 
          "testClass": "org.molgenis.data.excel.ExcelRepositoryTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362989296", 
        "date": "Apr 6, 2018 10:01:24 AM", 
        "id": 362989296
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/362517584", 
        "date": "Apr 5, 2018 11:04:25 AM", 
        "id": 362517584
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/ece41bf216542f8af898b2e52eebcff601a709dd", 
        "sha": "ece41bf216542f8af898b2e52eebcff601a709dd", 
        "branchName": "master", 
        "date": "Apr 6, 2018 9:40:30 AM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/b08235d75bc9c5177451e423d23136ac9a216e5c", 
        "sha": "b08235d75bc9c5177451e423d23136ac9a216e5c", 
        "branchName": "master", 
        "date": "Apr 5, 2018 10:41:10 AM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-362517584-362989296", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 10, 
        "numberDeleted": 5
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_173", 
    "diff": "diff --git a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\nindex a87ffa655..54b2eaf33 100644\n--- a/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n+++ b/molgenis-data-csv/src/main/java/org/molgenis/data/csv/CsvIterator.java\n@@ -228,6 +228,10 @@ public class CsvIterator implements CloseableIterator<Entity>\n \t\tfor (int i = 0; i < headers.length; ++i)\n \t\t{\n \t\t\tString header = processCell(headers[i], true);\n+\t\t\tif (columnIdx.containsKey(header))\n+\t\t\t{\n+\t\t\t\tthrow new MolgenisDataException(format(\"Duplicate column header '%s' not allowed\", header));\n+\t\t\t}\n \t\t\tcolumnIdx.put(header, i);\n \t\t}\n \ndiff --git a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\nindex 53c585c89..85bf301b0 100644\n--- a/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\n+++ b/molgenis-data-excel/src/main/java/org/molgenis/data/excel/ExcelRepository.java\n@@ -191,7 +191,16 @@ public class ExcelRepository extends AbstractRepository\n \t\t\ttry\n \t\t\t{\n \t\t\t\tString header = AbstractCellProcessor.processCell(ExcelUtils.toValue(it.next()), true, cellProcessors);\n-\t\t\t\tif (null != header) columnIdx.put(header, i++);\n+\t\t\t\tif (header != null)\n+\t\t\t\t{\n+\t\t\t\t\tif (columnIdx.containsKey(header))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\t\tformat(\"Duplicate column header '%s' in sheet '%s' not allowed\", header,\n+\t\t\t\t\t\t\t\t\t\theaderRow.getSheet().getSheetName()));\n+\t\t\t\t\t}\n+\t\t\t\t\tcolumnIdx.put(header, i++);\n+\t\t\t\t}\n \t\t\t}\n \t\t\tcatch (final IllegalStateException ex)\n \t\t\t{\n", 
    "projectMetrics": {
      "numberSourceFiles": 1243, 
      "numberLibrariesFailingModule": 61, 
      "numberTestFiles": 518, 
      "numberModules": 57
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 127006680, 
        "hostName": "spirals-bears", 
        "totalMemory": 556793856, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 2, 2018 6:56:42 AM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/362517584/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            0, 
            772
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 774
        }, 
        "testing": {
          "stepDurations": [
            160
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 160
        }, 
        "cloning": {
          "stepDurations": [
            39
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 39
        }
      }, 
      "reproductionDateBeginning": "Sep 2, 2018 6:07:53 AM", 
      "totalDuration": 2919
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 3021, 
        "numberRunning": 3022, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.ClassCastException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/367638811/molgenis-data-postgresql", 
      "failingClasses": [
        {
          "numberPassing": 2, 
          "numberRunning": 3, 
          "testClass": "org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.ClassCastException", 
          "testMethod": "createRowMapperOneToManyIntegerIds", 
          "testClass": "org.molgenis.data.postgresql.PostgreSqlEntityFactoryTest", 
          "detail": "[Ljava.lang.Integer; cannot be cast to [Ljava.lang.String;", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/367645808", 
        "date": "Apr 17, 2018 3:32:58 PM", 
        "id": 367645808
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/367638811", 
        "date": "Apr 17, 2018 3:11:20 PM", 
        "id": 367638811
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/72111329e8e18c37c78a4e8f9de703f2a834a53c", 
        "sha": "72111329e8e18c37c78a4e8f9de703f2a834a53c", 
        "branchName": "master", 
        "date": "Apr 17, 2018 3:08:26 PM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/b130683e9248d20cc98d4a4189e54ee43ba87f2c", 
        "sha": "b130683e9248d20cc98d4a4189e54ee43ba87f2c", 
        "branchName": "master", 
        "date": "Apr 17, 2018 2:51:18 PM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-367638811-367645808", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1237, 
      "numberLibrariesFailingModule": 72, 
      "numberTestFiles": 518, 
      "numberModules": 57
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_174", 
    "diff": "diff --git a/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java b/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\nindex c9df10440..3a98fb911 100644\n--- a/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\n+++ b/molgenis-data-postgresql/src/main/java/org/molgenis/data/postgresql/PostgreSqlEntityFactory.java\n@@ -192,15 +192,15 @@ class PostgreSqlEntityFactory\n \t\t{\n \t\t\tEntityType entityType = attr.getRefEntity();\n \t\t\tObject value;\n-\t\t\tString[] postgreSqlMrefIds = (String[]) arrayValue.getArray();\n+\t\t\tObject[] postgreSqlMrefIds = (Object[]) arrayValue.getArray();\n \t\t\tif (postgreSqlMrefIds.length > 0 && postgreSqlMrefIds[0] != null)\n \t\t\t{\n \t\t\t\tAttribute idAttr = entityType.getIdAttribute();\n \t\t\t\tObject[] mrefIds = new Object[postgreSqlMrefIds.length];\n \t\t\t\tfor (int i = 0; i < postgreSqlMrefIds.length; ++i)\n \t\t\t\t{\n-\t\t\t\t\tString mrefIdStr = postgreSqlMrefIds[i];\n-\t\t\t\t\tObject mrefId = mrefIdStr != null ? convertMrefIdValue(mrefIdStr, idAttr) : null;\n+\t\t\t\t\tObject mrefIdRaw = postgreSqlMrefIds[i];\n+\t\t\t\t\tObject mrefId = mrefIdRaw != null ? convertMrefIdValue(mrefIdRaw.toString(), idAttr) : null;\n \t\t\t\t\tmrefIds[i] = mrefId;\n \t\t\t\t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 350951640, 
        "hostName": "spirals-bears", 
        "totalMemory": 1488977920, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 4, 2018 9:10:09 AM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/367638811/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            4, 
            4, 
            1, 
            0, 
            726
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 735
        }, 
        "testing": {
          "stepDurations": [
            431
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 431
        }, 
        "cloning": {
          "stepDurations": [
            51
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 51
        }
      }, 
      "reproductionDateBeginning": "Sep 4, 2018 8:21:50 AM", 
      "totalDuration": 2889
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1607, 
        "numberRunning": 1608, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.testng.TestException", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/molgenis/molgenis/369514407/molgenis-data-import", 
      "failureDetails": [
        {
          "failureName": "org.testng.TestException", 
          "detail": "\nMethod DataPersisterImplTest.testPersistMetaNoneDataAddAbstractEntityType()[pri:0, instance:org.molgenis.data.importer.DataPersisterImplTest@5c70d7f0] should have thrown an exception of class org.molgenis.data.MolgenisDataException", 
          "isError": false, 
          "testMethod": "testPersistMetaNoneDataAddAbstractEntityType", 
          "testClass": "org.molgenis.data.importer.DataPersisterImplTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 8, 
          "numberRunning": 9, 
          "testClass": "org.molgenis.data.importer.DataPersisterImplTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/370006117", 
        "date": "Apr 23, 2018 11:37:16 AM", 
        "id": 370006117
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/molgenis/molgenis/builds/369514407", 
        "date": "Apr 21, 2018 5:22:42 PM", 
        "id": 369514407
      }
    }, 
    "repository": {
      "name": "molgenis-molgenis", 
      "url": "https://github.com/molgenis/molgenis", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 8010626
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/6c2f1aef91dd2bbf99814f8ab7d2c08e0cf7ffdc", 
        "sha": "6c2f1aef91dd2bbf99814f8ab7d2c08e0cf7ffdc", 
        "branchName": "master", 
        "date": "Apr 23, 2018 11:14:21 AM", 
        "repoName": "molgenis/molgenis"
      }, 
      "buggyBuild": {
        "url": "http://github.com/molgenis/molgenis/commit/8232a5510b92991b5ac185b3c8a2d7fa3e37bbbf", 
        "sha": "8232a5510b92991b5ac185b3c8a2d7fa3e37bbbf", 
        "branchName": "master", 
        "date": "Apr 20, 2018 11:28:38 AM", 
        "repoName": "molgenis/molgenis"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/molgenis-molgenis-369514407-370006117", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 1237, 
      "numberLibrariesFailingModule": 78, 
      "numberTestFiles": 518, 
      "numberModules": 57
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_175", 
    "diff": "diff --git a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\nindex f1374dbe6..e20630a42 100644\n--- a/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\n+++ b/molgenis-data-import/src/main/java/org/molgenis/data/importer/DataPersisterImpl.java\n@@ -2,10 +2,7 @@ package org.molgenis.data.importer;\n \n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Iterators;\n-import org.molgenis.data.DataService;\n-import org.molgenis.data.Entity;\n-import org.molgenis.data.Repository;\n-import org.molgenis.data.UnknownEntityException;\n+import org.molgenis.data.*;\n import org.molgenis.data.meta.EntityTypeDependencyResolver;\n import org.molgenis.data.meta.MetaDataService;\n import org.molgenis.data.meta.MetaDataServiceImpl.EntityTypeWithoutMappedByAttributes;\n@@ -83,6 +80,12 @@ public class DataPersisterImpl implements DataPersister\n \t\t\tEntityType persistedEntityType = persistEntityTypeFirstPass(entityType, metadataMode);\n \t\t\tif (dataProvider.hasEntities(entityType))\n \t\t\t{\n+\t\t\t\tif (entityType.isAbstract())\n+\t\t\t\t{\n+\t\t\t\t\tthrow new MolgenisDataException(\n+\t\t\t\t\t\t\tformat(\"Abstract entity type '%s' with id '%s' cannot contain entities\",\n+\t\t\t\t\t\t\t\t\tentityType.getLabel(), entityType.getId()));\n+\t\t\t\t}\n \t\t\t\tStream<Entity> entities = dataProvider.getEntities(entityType);\n \t\t\t\tlong nrPersistedEntities = persistEntitiesFirstPass(persistedEntityType, entities, dataMode);\n \t\t\t\tpersistResultBuilder.put(entityType.getId(), nrPersistedEntities);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 403901336, 
        "hostName": "spirals-bears", 
        "totalMemory": 761790464, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 5, 2018 11:20:00 PM", 
      "projectRootPomPath": "./workspace/molgenis/molgenis/369514407/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            4, 
            1, 
            0, 
            730
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 736
        }, 
        "testing": {
          "stepDurations": [
            142
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 142
        }, 
        "cloning": {
          "stepDurations": [
            37
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 37
        }
      }, 
      "reproductionDateBeginning": "Sep 5, 2018 10:24:04 PM", 
      "totalDuration": 3349
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 212, 
        "numberRunning": 213, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.StackOverflowError", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 4
      }, 
      "failingModule": "/root/workspace/openzipkin/zipkin/332209085/zipkin2", 
      "failingClasses": [
        {
          "numberPassing": 10, 
          "numberRunning": 11, 
          "testClass": "zipkin2.SpanTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.StackOverflowError", 
          "testMethod": "canUsePrimitiveOverloads", 
          "isError": true, 
          "testClass": "zipkin2.SpanTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/openzipkin/zipkin/builds/332270677", 
        "date": "Jan 23, 2018 1:50:34 PM", 
        "id": 332270677
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/openzipkin/zipkin/builds/332209085", 
        "date": "Jan 23, 2018 11:05:25 AM", 
        "id": 332209085
      }
    }, 
    "repository": {
      "name": "openzipkin-zipkin", 
      "url": "https://github.com/openzipkin/zipkin", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4576305
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/openzipkin/zipkin/commit/a5fafd189f532e9322d83b6634d2b13ed82f782a", 
        "sha": "a5fafd189f532e9322d83b6634d2b13ed82f782a", 
        "branchName": "master", 
        "date": "Jan 23, 2018 1:19:12 PM", 
        "repoName": "openzipkin/zipkin"
      }, 
      "buggyBuild": {
        "url": "http://github.com/openzipkin/zipkin/commit/4875a0578fb3a131cc24c2457b51753ee189f7ab", 
        "sha": "4875a0578fb3a131cc24c2457b51753ee189f7ab", 
        "branchName": "master", 
        "date": "Jan 23, 2018 10:24:40 AM", 
        "repoName": "openzipkin/zipkin"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/openzipkin-zipkin-332209085-332270677", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 251, 
      "numberLibrariesFailingModule": 21, 
      "numberTestFiles": 170, 
      "numberModules": 31
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 2
      }
    }, 
    "bugId": "Bears_176", 
    "diff": "diff --git a/zipkin2/src/main/java/zipkin2/Span.java b/zipkin2/src/main/java/zipkin2/Span.java\nindex f2775c3e5..defa6b6ad 100644\n--- a/zipkin2/src/main/java/zipkin2/Span.java\n+++ b/zipkin2/src/main/java/zipkin2/Span.java\n@@ -466,7 +466,7 @@ public final class Span implements Serializable { // for Spark and Flink jobs\n \n     /** @see Span#debug */\n     public Builder debug(@Nullable Boolean debug) {\n-      if (debug != null) return debug(debug);\n+      if (debug != null) return debug((boolean) debug);\n       flags &= ~FLAG_DEBUG_SET;\n       return this;\n     }\n@@ -484,7 +484,7 @@ public final class Span implements Serializable { // for Spark and Flink jobs\n \n     /** @see Span#shared */\n     public Builder shared(@Nullable Boolean shared) {\n-      if (shared != null) return shared(shared);\n+      if (shared != null) return shared((boolean) shared);\n       flags &= ~FLAG_SHARED_SET;\n       return this;\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 252704560, 
        "hostName": "spirals-bears", 
        "totalMemory": 551550976, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 21, 2018 6:09:36 PM", 
      "projectRootPomPath": "./workspace/openzipkin/zipkin/332209085/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            284
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 285
        }, 
        "testing": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }, 
        "cloning": {
          "stepDurations": [
            23
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 23
        }
      }, 
      "reproductionDateBeginning": "Aug 21, 2018 5:56:32 PM", 
      "totalDuration": 775
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7766, 
        "numberRunning": 7767, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 31
      }, 
      "failingModule": "/root/workspace/raphw/byte-buddy/352481508/byte-buddy-dep", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "\nExpected: is <true>\n     but: was <false>", 
          "isError": false, 
          "testMethod": "testSyntethicParameter", 
          "testClass": "net.bytebuddy.pool.TypePoolDefaultMethodDescriptionTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 37, 
          "numberRunning": 38, 
          "testClass": "net.bytebuddy.pool.TypePoolDefaultMethodDescriptionTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/352894244", 
        "date": "Mar 13, 2018 4:33:07 PM", 
        "id": 352894244
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/352481508", 
        "date": "Mar 12, 2018 7:38:39 PM", 
        "id": 352481508
      }
    }, 
    "repository": {
      "name": "raphw-byte-buddy", 
      "url": "https://github.com/raphw/byte-buddy", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14696091
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/79fd9bee51dfd50881c17d7e230e58750bf4008f", 
        "sha": "79fd9bee51dfd50881c17d7e230e58750bf4008f", 
        "branchName": "master", 
        "date": "Mar 13, 2018 4:26:19 PM", 
        "repoName": "raphw/byte-buddy"
      }, 
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/d4a9fa818fa4edd4b781b6572adb7ad1b8da8359", 
        "sha": "d4a9fa818fa4edd4b781b6572adb7ad1b8da8359", 
        "branchName": "master", 
        "date": "Mar 12, 2018 7:33:04 PM", 
        "repoName": "raphw/byte-buddy"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/raphw-byte-buddy-352481508-352894244", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 20
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_177", 
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\nindex 8e6a704a4..516166244 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/pool/TypePool.java\n@@ -7413,6 +7413,16 @@ public interface TypePool {\n                  */\n                 private Label firstLabel;\n \n+                /**\n+                 * A shift index for visible parameters that indicates a deviation of the actual parameter index.\n+                 */\n+                private int visibleParameterShift;\n+\n+                /**\n+                 * A shift index for invisible parameters that indicates a deviation of the actual parameter index.\n+                 */\n+                private int invisibleParameterShift;\n+\n                 /**\n                  * The default value of the found method or {@code null} if no such value exists.\n                  */\n@@ -7502,9 +7512,21 @@ public interface TypePool {\n                     return new AnnotationExtractor(descriptor, annotationTokens, new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n                 }\n \n+                @Override\n+                public void visitAnnotableParameterCount(int count, boolean visible) {\n+                    if (visible) {\n+                        visibleParameterShift = Type.getMethodType(descriptor).getArgumentTypes().length - count;\n+                    } else {\n+                        invisibleParameterShift = Type.getMethodType(descriptor).getArgumentTypes().length - count;\n+                    }\n+                }\n+\n                 @Override\n                 public AnnotationVisitor visitParameterAnnotation(int index, String descriptor, boolean visible) {\n-                    return new AnnotationExtractor(descriptor, index, parameterAnnotationTokens, new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n+                    return new AnnotationExtractor(descriptor,\n+                            index + (visible ? visibleParameterShift : invisibleParameterShift),\n+                            parameterAnnotationTokens,\n+                            new ComponentTypeLocator.ForAnnotationProperty(Default.this, descriptor));\n                 }\n \n                 @Override\n", 
    "projectMetrics": {
      "numberSourceFiles": 293, 
      "numberLibrariesFailingModule": 12, 
      "numberTestFiles": 694, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 239684960, 
        "hostName": "spirals-bears", 
        "totalMemory": 1437073408, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 29, 2018 8:27:19 AM", 
      "projectRootPomPath": "./workspace/raphw/byte-buddy/352481508/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            4, 
            0, 
            0, 
            1, 
            116
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 121
        }, 
        "testing": {
          "stepDurations": [
            57
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 57
        }, 
        "cloning": {
          "stepDurations": [
            252
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 252
        }
      }, 
      "reproductionDateBeginning": "Aug 29, 2018 8:16:28 AM", 
      "totalDuration": 643
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7963, 
        "numberRunning": 7964, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 31
      }, 
      "failingModule": "/root/workspace/raphw/byte-buddy/357569370/byte-buddy-dep", 
      "failingClasses": [
        {
          "numberPassing": 70, 
          "numberRunning": 71, 
          "testClass": "net.bytebuddy.implementation.MethodCallTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testInstanceCallFromStaticMethod", 
          "testClass": "net.bytebuddy.implementation.MethodCallTest", 
          "detail": "Expected exception: java.lang.IllegalStateException", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/357575635", 
        "date": "Mar 23, 2018 9:32:47 PM", 
        "id": 357575635
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/357569370", 
        "date": "Mar 23, 2018 9:19:33 PM", 
        "id": 357569370
      }
    }, 
    "repository": {
      "name": "raphw-byte-buddy", 
      "url": "https://github.com/raphw/byte-buddy", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14696091
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/f41aa877f065fbc73259c66a91163b7e6e1dd73e", 
        "sha": "f41aa877f065fbc73259c66a91163b7e6e1dd73e", 
        "branchName": "master", 
        "date": "Mar 23, 2018 9:27:04 PM", 
        "repoName": "raphw/byte-buddy"
      }, 
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/2277181f100e0d2e4fa0526a30caf850982f5384", 
        "sha": "2277181f100e0d2e4fa0526a30caf850982f5384", 
        "branchName": "master", 
        "date": "Mar 23, 2018 9:12:28 PM", 
        "repoName": "raphw/byte-buddy"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/raphw-byte-buddy-357569370-357575635", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_178", 
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\nindex d5fe569dc..b7758633f 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/MethodCall.java\n@@ -1445,6 +1445,9 @@ public class MethodCall implements Implementation.Composable {\n                                              TypeDescription instrumentedType,\n                                              Assigner assigner,\n                                              Assigner.Typing typing) {\n+                if (instrumentedMethod.isStatic() && !invokedMethod.isStatic() && !invokedMethod.isConstructor()) {\n+                    throw new IllegalStateException(\"Cannot invoke \" + invokedMethod + \" from \" + instrumentedMethod);\n+                }\n                 return new StackManipulation.Compound(\n                         invokedMethod.isStatic()\n                                 ? StackManipulation.Trivial.INSTANCE\n@@ -2008,10 +2011,10 @@ public class MethodCall implements Implementation.Composable {\n                 argumentLoaders.addAll(argumentLoader.make(implementationTarget.getInstrumentedType(), instrumentedMethod, invokedMethod));\n             }\n             ParameterList<?> parameters = invokedMethod.getParameters();\n-            Iterator<? extends ParameterDescription> parameterIterator = parameters.iterator();\n             if (parameters.size() != argumentLoaders.size()) {\n                 throw new IllegalStateException(invokedMethod + \" does not take \" + argumentLoaders.size() + \" arguments\");\n             }\n+            Iterator<? extends ParameterDescription> parameterIterator = parameters.iterator();\n             List<StackManipulation> argumentInstructions = new ArrayList<StackManipulation>(argumentLoaders.size());\n             for (ArgumentLoader argumentLoader : argumentLoaders) {\n                 argumentInstructions.add(argumentLoader.resolve(parameterIterator.next(), assigner, typing));\n", 
    "projectMetrics": {
      "numberSourceFiles": 300, 
      "numberLibrariesFailingModule": 12, 
      "numberTestFiles": 705, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 987219032, 
        "hostName": "spirals-bears", 
        "totalMemory": 1775763456, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 31, 2018 10:36:37 PM", 
      "projectRootPomPath": "./workspace/raphw/byte-buddy/357569370/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            122
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 124
        }, 
        "testing": {
          "stepDurations": [
            61
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 61
        }, 
        "cloning": {
          "stepDurations": [
            241
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 241
        }
      }, 
      "reproductionDateBeginning": "Aug 31, 2018 10:26:11 PM", 
      "totalDuration": 619
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 7686, 
        "numberRunning": 7689, 
        "numberFailing": 3, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", 
            "isError": false, 
            "occurrences": 3
          }
        ], 
        "numberSkipping": 31
      }, 
      "failingModule": "/root/workspace/raphw/byte-buddy/363589915/byte-buddy-dep", 
      "failureDetails": [
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", 
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n", 
          "isError": false, 
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[1]", 
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest"
        }, 
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", 
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n", 
          "isError": false, 
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[2]", 
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest"
        }, 
        {
          "failureName": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", 
          "detail": "\nArgument(s) are different! Wanted:\nmethodVisitor.visitMethodInsn(\n    182,\n    \"foo\",\n    \"bar\",\n    \"qux\",\n    false\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocationTest.assertInvocation(MethodInvocationTest.java:218)\nActual invocation has different arguments:\nmethodVisitor.visitMethodInsn(\n    185,\n    \"baz\",\n    \"bar\",\n    \"qux\",\n    true\n);\n-> at net.bytebuddy.implementation.bytecode.member.MethodInvocation$Invocation.apply(MethodInvocation.java:307)\n", 
          "isError": false, 
          "testMethod": "testExplicitlyVirtualMethodInvocationOfInterfaceOfObjectMethod[0]", 
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 54, 
          "numberRunning": 57, 
          "testClass": "net.bytebuddy.implementation.bytecode.member.MethodInvocationTest", 
          "numberFailing": 3, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/364299280", 
        "date": "Apr 9, 2018 10:28:52 PM", 
        "id": 364299280
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/raphw/byte-buddy/builds/363589915", 
        "date": "Apr 7, 2018 10:40:43 PM", 
        "id": 363589915
      }
    }, 
    "repository": {
      "name": "raphw-byte-buddy", 
      "url": "https://github.com/raphw/byte-buddy", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14696091
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/538627753daf5ab1227d5157e6f682711d2fb1ae", 
        "sha": "538627753daf5ab1227d5157e6f682711d2fb1ae", 
        "branchName": "master", 
        "date": "Apr 9, 2018 10:23:38 PM", 
        "repoName": "raphw/byte-buddy"
      }, 
      "buggyBuild": {
        "url": "http://github.com/raphw/byte-buddy/commit/7b3d0e22c09f7387ecfa82e0e16a8f281ba60d55", 
        "sha": "7b3d0e22c09f7387ecfa82e0e16a8f281ba60d55", 
        "branchName": "master", 
        "date": "Apr 7, 2018 10:36:04 PM", 
        "repoName": "raphw/byte-buddy"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/raphw-byte-buddy-363589915-364299280", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 4, 
        "numberDeleted": 3
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_179", 
    "diff": "diff --git a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\nindex cd9296dbd..95fedb843 100644\n--- a/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\n+++ b/byte-buddy-dep/src/main/java/net/bytebuddy/implementation/bytecode/member/MethodInvocation.java\n@@ -317,9 +317,10 @@ public enum MethodInvocation {\n         public StackManipulation virtual(TypeDescription invocationTarget) {\n             if (methodDescription.isPrivate() || methodDescription.isConstructor() || methodDescription.isStatic()) {\n                 return Illegal.INSTANCE;\n-            }\n-            if (invocationTarget.isInterface()) {\n-                return INTERFACE.new Invocation(methodDescription, invocationTarget);\n+            } else if (invocationTarget.isInterface()) {\n+                return methodDescription.getDeclaringType().represents(Object.class)\n+                        ? this\n+                        : INTERFACE.new Invocation(methodDescription, invocationTarget);\n             } else {\n                 return VIRTUAL.new Invocation(methodDescription, invocationTarget);\n             }\n", 
    "projectMetrics": {
      "numberSourceFiles": 300, 
      "numberLibrariesFailingModule": 11, 
      "numberTestFiles": 681, 
      "numberModules": 7
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 709451064, 
        "hostName": "spirals-bears", 
        "totalMemory": 1901592576, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 8:27:36 AM", 
      "projectRootPomPath": "./workspace/raphw/byte-buddy/363589915/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            2, 
            0, 
            0, 
            1, 
            108
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 111
        }, 
        "testing": {
          "stepDurations": [
            57
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 57
        }, 
        "cloning": {
          "stepDurations": [
            247
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 247
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 8:17:30 AM", 
      "totalDuration": 599
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 36, 
        "numberRunning": 37, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/330973656/spring-cloud-gcp-storage", 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 22, 
          "testClass": "org.springframework.cloud.gcp.storage.GoogleStorageTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "org.springframework.cloud.gcp.storage.GoogleStorageTests", 
          "testMethod": "testValidObjectWithUnderscore"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/330980388", 
        "date": "Jan 19, 2018 9:42:27 PM", 
        "id": 330980388
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/330973656", 
        "date": "Jan 19, 2018 9:22:50 PM", 
        "id": 330973656
      }
    }, 
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp", 
      "url": "https://github.com/spring-cloud/spring-cloud-gcp", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 86105877
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/6c5a5cede49cfa8c546dcdbeef4b34c0e4e33f95", 
        "sha": "6c5a5cede49cfa8c546dcdbeef4b34c0e4e33f95", 
        "branchName": "master", 
        "date": "Jan 19, 2018 9:37:02 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/a3a51c0a9c3ec700ac2f3de60c25073fbdbdd41a", 
        "sha": "a3a51c0a9c3ec700ac2f3de60c25073fbdbdd41a", 
        "branchName": "master", 
        "date": "Jan 19, 2018 9:18:46 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-cloud-spring-cloud-gcp-330973656-330980388", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 95, 
      "numberLibrariesFailingModule": 68, 
      "numberTestFiles": 26, 
      "numberModules": 33
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_180", 
    "diff": "diff --git a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\nindex b17b3f598..b0c77d7b2 100644\n--- a/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\n+++ b/spring-cloud-gcp-storage/src/main/java/org/springframework/cloud/gcp/storage/GoogleStorageResourceObject.java\n@@ -107,7 +107,7 @@ public class GoogleStorageResourceObject implements WritableResource {\n \n \tprivate BlobId getBlobId() throws IOException {\n \t\tURI uri = getURI();\n-\t\treturn BlobId.of(uri.getHost(),\n+\t\treturn BlobId.of(uri.getAuthority(),\n \t\t\t\turi.getPath().substring(1, uri.getPath().length()));\n \t}\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326736600, 
        "hostName": "spirals-bears", 
        "totalMemory": 457179136, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 20, 2018 4:54:54 AM", 
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/330973656/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            8, 
            4, 
            0, 
            400
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 412
        }, 
        "testing": {
          "stepDurations": [
            21
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 21
        }, 
        "cloning": {
          "stepDurations": [
            4
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 4
        }
      }, 
      "reproductionDateBeginning": "Aug 20, 2018 4:44:37 AM", 
      "totalDuration": 610
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 158, 
        "numberRunning": 159, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "Wanted but not invoked", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/353059531/spring-cloud-gcp-data-spanner", 
      "failureDetails": [
        {
          "failureName": "Wanted but not invoked", 
          "detail": " Wanted but not invoked: resultSet.close(); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests.countTest(SpannerTemplateTests.java:259)  However, there were exactly 2 interactions with this mock: resultSet.next(); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplate.count(SpannerTemplate.java:204)  resultSet.getLong(0); -> at org.springframework.cloud.gcp.data.spanner.core.SpannerTemplate.count(SpannerTemplate.java:205)  ", 
          "isError": false, 
          "testMethod": "countTest", 
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 21, 
          "numberRunning": 22, 
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/353471273", 
        "date": "Mar 14, 2018 7:21:49 PM", 
        "id": 353471273
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/353059531", 
        "date": "Mar 13, 2018 10:25:32 PM", 
        "id": 353059531
      }
    }, 
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp", 
      "url": "https://github.com/spring-cloud/spring-cloud-gcp", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 86105877
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/eb5af6c7b2aca11a41adb6b1c481127c461aeb9e", 
        "sha": "eb5af6c7b2aca11a41adb6b1c481127c461aeb9e", 
        "branchName": "master", 
        "date": "Mar 14, 2018 7:16:18 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/eda9b5608332afc63bcc131f4d36e70bf4de79c0", 
        "sha": "eda9b5608332afc63bcc131f4d36e70bf4de79c0", 
        "branchName": "master", 
        "date": "Mar 13, 2018 10:20:15 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-cloud-spring-cloud-gcp-353059531-353471273", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 4
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_181", 
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\nindex c88da85b3..f08c7e3a2 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n@@ -199,10 +199,12 @@ public class SpannerTemplate implements SpannerOperations {\n \tpublic long count(Class entityClass) {\n \t\tSpannerPersistentEntity<?> persistentEntity = this.mappingContext\n \t\t\t\t.getPersistentEntity(entityClass);\n-\t\tResultSet resultSet = this.databaseClient.singleUse().executeQuery(Statement.of(\n-\t\t\t\tString.format(\"select count(*) from %s\", persistentEntity.tableName())));\n-\t\tresultSet.next();\n-\t\treturn resultSet.getLong(0);\n+\t\tStatement statement = Statement.of(String.format(\n+\t\t\t\t\"select count(*) from %s\", persistentEntity.tableName()));\n+\t\ttry (ResultSet resultSet = this.databaseClient.singleUse().executeQuery(statement)) {\n+\t\t\tresultSet.next();\n+\t\t\treturn resultSet.getLong(0);\n+\t\t}\n \t}\n \n \tprivate <T, U> void applyMutationWithClass(BiFunction<T, U, Mutation> function,\n", 
    "projectMetrics": {
      "numberSourceFiles": 133, 
      "numberLibrariesFailingModule": 92, 
      "numberTestFiles": 46, 
      "numberModules": 33
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 284921840, 
        "hostName": "spirals-bears", 
        "totalMemory": 1001914368, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 29, 2018 3:06:31 PM", 
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/353059531/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            102, 
            101, 
            0, 
            424
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 627
        }, 
        "testing": {
          "stepDurations": [
            41
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 41
        }, 
        "cloning": {
          "stepDurations": [
            4
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 4
        }
      }, 
      "reproductionDateBeginning": "Aug 29, 2018 2:52:03 PM", 
      "totalDuration": 860
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 214, 
        "numberRunning": 215, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IllegalArgumentException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 3
      }, 
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/365341004/spring-cloud-gcp-data-spanner", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.springframework.cloud.gcp.data.spanner.repository.query.SqlSpannerQueryTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalArgumentException", 
          "testMethod": "compoundNameConventionTest", 
          "testClass": "org.springframework.cloud.gcp.data.spanner.repository.query.SqlSpannerQueryTests", 
          "detail": "The number of tags does match the number of params.", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/365349415", 
        "date": "Apr 12, 2018 12:18:01 AM", 
        "id": 365349415
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/365341004", 
        "date": "Apr 11, 2018 11:56:57 PM", 
        "id": 365341004
      }
    }, 
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp", 
      "url": "https://github.com/spring-cloud/spring-cloud-gcp", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 86105877
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/44e85eb12606d3e05941f82c9dbc42c681ce10f8", 
        "sha": "44e85eb12606d3e05941f82c9dbc42c681ce10f8", 
        "branchName": "master", 
        "date": "Apr 12, 2018 12:11:23 AM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/3c9769396e788e1d859d3097b7cb5a0edd37e74e", 
        "sha": "3c9769396e788e1d859d3097b7cb5a0edd37e74e", 
        "branchName": "master", 
        "date": "Apr 11, 2018 11:49:37 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-cloud-spring-cloud-gcp-365341004-365349415", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 154, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 61, 
      "numberModules": 31
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 25, 
        "numberDeleted": 17
      }
    }, 
    "bugId": "Bears_182", 
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\nindex 4338726da..aec7e6842 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/repository/query/SqlSpannerQuery.java\n@@ -18,7 +18,6 @@ package org.springframework.cloud.gcp.data.spanner.repository.query;\n \n import java.util.ArrayList;\n import java.util.List;\n-import java.util.StringJoiner;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -72,7 +71,7 @@ public class SqlSpannerQuery implements RepositoryQuery {\n \t}\n \n \tprivate List<String> getTags(String sql) {\n-\t\tPattern pattern = Pattern.compile(\"@\\\\S+\");\n+\t\tPattern pattern = Pattern.compile(\"@[^\\\\{^\\\\s][\\\\S]+[^\\\\}^\\\\s]\");\n \t\tMatcher matcher = pattern.matcher(sql);\n \t\tList<String> tags = new ArrayList<>();\n \t\twhile (matcher.find()) {\n@@ -83,33 +82,30 @@ public class SqlSpannerQuery implements RepositoryQuery {\n \t}\n \n \tprivate String resolveEntityClassNames(String sql) {\n-\t\tStringJoiner joiner = new StringJoiner(\" \");\n-\t\tfor (String part : sql.split(\"\\\\s+\")) {\n-\t\t\tif (part.length() > 2 && part.startsWith(ENTITY_CLASS_NAME_BOOKEND)\n-\t\t\t\t\t&& part.endsWith(ENTITY_CLASS_NAME_BOOKEND)) {\n-\t\t\t\tString className = part.substring(1, part.length() - 1);\n-\t\t\t\ttry {\n-\t\t\t\t\tClass entityClass = Class.forName(className);\n-\t\t\t\t\tSpannerPersistentEntity spannerPersistentEntity = this.spannerMappingContext\n-\t\t\t\t\t\t\t.getPersistentEntity(entityClass);\n-\t\t\t\t\tif (spannerPersistentEntity == null) {\n-\t\t\t\t\t\tthrow new SpannerDataException(\n-\t\t\t\t\t\t\t\t\"The class used in the SQL statement is not a Spanner persistent entity: \"\n-\t\t\t\t\t\t\t\t\t\t+ className);\n-\t\t\t\t\t}\n-\t\t\t\t\tjoiner.add(spannerPersistentEntity.tableName());\n-\t\t\t\t}\n-\t\t\t\tcatch (ClassNotFoundException e) {\n+\t\tPattern pattern = Pattern.compile(\"\\\\:\\\\S+\\\\:\");\n+\t\tMatcher matcher = pattern.matcher(sql);\n+\t\tString result = sql;\n+\t\twhile (matcher.find()) {\n+\t\t\tString matched = matcher.group();\n+\t\t\tString className = matched.substring(1, matched.length() - 1);\n+\t\t\ttry {\n+\t\t\t\tClass entityClass = Class.forName(className);\n+\t\t\t\tSpannerPersistentEntity spannerPersistentEntity = this.spannerMappingContext\n+\t\t\t\t\t\t.getPersistentEntity(entityClass);\n+\t\t\t\tif (spannerPersistentEntity == null) {\n \t\t\t\t\tthrow new SpannerDataException(\n-\t\t\t\t\t\t\t\"The class name does not refer to an available entity type: \"\n+\t\t\t\t\t\t\t\"The class used in the SQL statement is not a Spanner persistent entity: \"\n \t\t\t\t\t\t\t\t\t+ className);\n \t\t\t\t}\n+\t\t\t\tresult = result.replace(matched, spannerPersistentEntity.tableName());\n \t\t\t}\n-\t\t\telse {\n-\t\t\t\tjoiner.add(part);\n+\t\t\tcatch (ClassNotFoundException e) {\n+\t\t\t\tthrow new SpannerDataException(\n+\t\t\t\t\t\t\"The class name does not refer to an available entity type: \"\n+\t\t\t\t\t\t\t\t+ className);\n \t\t\t}\n \t\t}\n-\t\treturn joiner.toString();\n+\t\treturn result;\n \t}\n \n \t@Override\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 455719608, 
        "hostName": "spirals-bears", 
        "totalMemory": 590872576, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 12:51:57 PM", 
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/365341004/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            10, 
            5, 
            0, 
            462
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 477
        }, 
        "testing": {
          "stepDurations": [
            34
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 34
        }, 
        "cloning": {
          "stepDurations": [
            5
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 5
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 12:40:11 PM", 
      "totalDuration": 697
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 218, 
        "numberRunning": 219, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 3
      }, 
      "failingModule": "/root/workspace/spring-cloud/spring-cloud-gcp/367417648/spring-cloud-gcp-data-spanner", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<...able ORDER BY id ASC[ LIMIT 5 OFFSET 3];> but was:<...able ORDER BY id ASC[];>", 
          "isError": false, 
          "testMethod": "findAllPageableNoOptionsTest", 
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 29, 
          "numberRunning": 30, 
          "testClass": "org.springframework.cloud.gcp.data.spanner.core.SpannerTemplateTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/367667323", 
        "date": "Apr 17, 2018 4:07:00 PM", 
        "id": 367667323
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-cloud/spring-cloud-gcp/builds/367417648", 
        "date": "Apr 17, 2018 1:34:49 AM", 
        "id": 367417648
      }
    }, 
    "repository": {
      "name": "spring-cloud-spring-cloud-gcp", 
      "url": "https://github.com/spring-cloud/spring-cloud-gcp", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 86105877
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/1bc8d0d634443ff0d67725fa5ebcb5beb7a7e588", 
        "sha": "1bc8d0d634443ff0d67725fa5ebcb5beb7a7e588", 
        "branchName": "master", 
        "date": "Apr 17, 2018 3:58:56 PM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-cloud/spring-cloud-gcp/commit/fc3c3aedc7ffcd04c4913f11a373f6f0861a9d4b", 
        "sha": "fc3c3aedc7ffcd04c4913f11a373f6f0861a9d4b", 
        "branchName": "master", 
        "date": "Apr 17, 2018 1:28:35 AM", 
        "repoName": "spring-cloud/spring-cloud-gcp"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-cloud-spring-cloud-gcp-367417648-367667323", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_183", 
    "diff": "diff --git a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\nindex 05f19de1c..65272b15c 100644\n--- a/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n+++ b/spring-cloud-gcp-data-spanner/src/main/java/org/springframework/cloud/gcp/data/spanner/core/SpannerTemplate.java\n@@ -178,7 +178,8 @@ public class SpannerTemplate implements SpannerOperations {\n \n \t@Override\n \tpublic <T> Page<T> queryAll(Class<T> entityClass, Pageable pageable) {\n-\t\treturn queryAll(entityClass, pageable, null);\n+\t\treturn queryAll(entityClass, pageable, new SpannerQueryOptions()\n+\t\t\t\t.setOffset(pageable.getOffset()).setLimit(pageable.getPageSize()));\n \t}\n \n \t@Override\n", 
    "projectMetrics": {
      "numberSourceFiles": 157, 
      "numberLibrariesFailingModule": 81, 
      "numberTestFiles": 62, 
      "numberModules": 32
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 275739272, 
        "hostName": "spirals-bears", 
        "totalMemory": 659554304, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 4, 2018 11:48:47 AM", 
      "projectRootPomPath": "./workspace/spring-cloud/spring-cloud-gcp/367417648/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            10, 
            5, 
            0, 
            471
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 486
        }, 
        "testing": {
          "stepDurations": [
            32
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 32
        }, 
        "cloning": {
          "stepDurations": [
            4
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 4
        }
      }, 
      "reproductionDateBeginning": "Sep 4, 2018 11:36:53 AM", 
      "totalDuration": 706
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 304, 
        "numberRunning": 305, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-jpa/341944401", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.springframework.data.jpa.util.JpaMetamodelUnitTests", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.springframework.data.jpa.util.JpaMetamodelUnitTests", 
          "testMethod": "skipsEntityTypesWithoutJavaTypeForIdentifierLookup", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/342236799", 
        "date": "Feb 16, 2018 10:02:54 AM", 
        "id": 342236799
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/341944401", 
        "date": "Feb 15, 2018 7:39:36 PM", 
        "id": 341944401
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-jpa", 
      "url": "https://github.com/spring-projects/spring-data-jpa", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072845
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/e35a0987992cc23ba06c6ddc15ae8a01d023bc84", 
        "sha": "e35a0987992cc23ba06c6ddc15ae8a01d023bc84", 
        "branchName": "2.0.x", 
        "date": "Feb 16, 2018 9:19:37 AM", 
        "repoName": "spring-projects/spring-data-jpa"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/1f5e757448be44559770c8b7c6709da559e0d528", 
        "sha": "1f5e757448be44559770c8b7c6709da559e0d528", 
        "branchName": "2.0.x", 
        "date": "Feb 15, 2018 4:12:15 PM", 
        "repoName": "spring-projects/spring-data-jpa"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-jpa-341944401-342236799", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 110, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 246, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_184", 
    "diff": "diff --git a/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java b/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\nindex 52860b5ab..3b3ee202e 100644\n--- a/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\n+++ b/src/main/java/org/springframework/data/jpa/util/JpaMetamodel.java\n@@ -76,7 +76,7 @@ public class JpaMetamodel {\n \tpublic boolean isSingleIdAttribute(Class<?> entity, String name, Class<?> attributeType) {\n \n \t\treturn metamodel.getEntities().stream() //\n-\t\t\t\t.filter(it -> it.getJavaType().equals(entity)) //\n+\t\t\t\t.filter(it -> entity.equals(it.getJavaType())) //\n \t\t\t\t.findFirst() //\n \t\t\t\t.flatMap(it -> getSingularIdAttribute(it)) //\n \t\t\t\t.filter(it -> it.getJavaType().equals(attributeType)) //\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 262591144, 
        "hostName": "spirals-bears", 
        "totalMemory": 381681664, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 25, 2018 5:12:41 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-jpa/341944401/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            2, 
            0, 
            0, 
            182
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 184
        }, 
        "testing": {
          "stepDurations": [
            46
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 46
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Aug 25, 2018 5:04:30 AM", 
      "totalDuration": 486
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 307, 
        "numberRunning": 308, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/spring-projects/spring-data-jpa/343344047", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": " Expecting:  <\"Cannot use native queries with dynamic sorting and/or pagination in method public abstract java.util.List org.springframework.data.jpa.repository.query.JpaQueryLookupStrategyUnitTests$UserRepository.findByInvalidNativeQuery(java.lang.String,org.springframework.data.domain.Sort)\"> to contain:  <\"Cannot use native queries with dynamic sorting in method\"> ", 
          "isError": false, 
          "testMethod": "sholdThrowMorePreciseExceptionIfTryingToUsePaginationInNativeQueries", 
          "testClass": "org.springframework.data.jpa.repository.query.JpaQueryLookupStrategyUnitTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "org.springframework.data.jpa.repository.query.JpaQueryLookupStrategyUnitTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/343370260", 
        "date": "Feb 19, 2018 3:35:08 PM", 
        "id": 343370260
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/spring-projects/spring-data-jpa/builds/343344047", 
        "date": "Feb 19, 2018 2:27:10 PM", 
        "id": 343344047
      }
    }, 
    "repository": {
      "name": "spring-projects-spring-data-jpa", 
      "url": "https://github.com/spring-projects/spring-data-jpa", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 1072845
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/68efc510dfcd1c5a7df76b7c8bac4a7198471158", 
        "sha": "68efc510dfcd1c5a7df76b7c8bac4a7198471158", 
        "branchName": "2.0.x", 
        "date": "Feb 19, 2018 1:44:05 PM", 
        "repoName": "spring-projects/spring-data-jpa"
      }, 
      "buggyBuild": {
        "url": "http://github.com/spring-projects/spring-data-jpa/commit/02bb54eeb915d3b5cca6c1bd19582e3ce3ab1663", 
        "sha": "02bb54eeb915d3b5cca6c1bd19582e3ce3ab1663", 
        "branchName": "2.0.x", 
        "date": "Feb 19, 2018 1:35:42 PM", 
        "repoName": "spring-projects/spring-data-jpa"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/spring-projects-spring-data-jpa-343344047-343370260", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 110, 
      "numberLibrariesFailingModule": 73, 
      "numberTestFiles": 247, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_185", 
    "diff": "diff --git a/src/main/java/org/springframework/data/jpa/repository/query/NativeJpaQuery.java b/src/main/java/org/springframework/data/jpa/repository/query/NativeJpaQuery.java\nindex 9863261fb..ab89dc540 100644\n--- a/src/main/java/org/springframework/data/jpa/repository/query/NativeJpaQuery.java\n+++ b/src/main/java/org/springframework/data/jpa/repository/query/NativeJpaQuery.java\n@@ -34,6 +34,7 @@ import org.springframework.expression.spel.standard.SpelExpressionParser;\n  * \n  * @author Thomas Darimont\n  * @author Oliver Gierke\n+ * @author Jens Schauder\n  */\n final class NativeJpaQuery extends AbstractStringBasedJpaQuery {\n \n@@ -53,13 +54,10 @@ final class NativeJpaQuery extends AbstractStringBasedJpaQuery {\n \t\tsuper(method, em, queryString, evaluationContextProvider, parser);\n \n \t\tParameters<?, ?> parameters = method.getParameters();\n-\t\tboolean hasPagingOrSortingParameter = parameters.hasPageableParameter() || parameters.hasSortParameter();\n-\t\tboolean containsPageableOrSortInQueryExpression = queryString.contains(\"#pageable\")\n-\t\t\t\t|| queryString.contains(\"#sort\");\n \n-\t\tif (hasPagingOrSortingParameter && !containsPageableOrSortInQueryExpression) {\n+\t\tif (parameters.hasSortParameter() && !queryString.contains(\"#sort\")) {\n \t\t\tthrow new InvalidJpaQueryMethodException(\n-\t\t\t\t\t\"Cannot use native queries with dynamic sorting and/or pagination in method \" + method);\n+\t\t\t\t\t\"Cannot use native queries with dynamic sorting in method \" + method);\n \t\t}\n \n \t\tthis.resultType = getTypeToQueryFor();\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 259824712, 
        "hostName": "spirals-bears", 
        "totalMemory": 378535936, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 25, 2018 5:08:59 AM", 
      "projectRootPomPath": "./workspace/spring-projects/spring-data-jpa/343344047/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            4, 
            0, 
            0, 
            195
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 199
        }, 
        "testing": {
          "stepDurations": [
            45
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 45
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Aug 25, 2018 5:00:34 AM", 
      "totalDuration": 498
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 8, 
        "numberRunning": 9, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/swagger-api/swagger-codegen/331677749/modules/swagger-codegen", 
      "failingClasses": [
        {
          "numberPassing": 7, 
          "numberRunning": 8, 
          "testClass": "io.swagger.codegen.languages.JavaJAXRSSpecServerCodegenTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "verify_that_interfaceOnly_is_removed_from_additional_properties_if_false", 
          "testClass": "io.swagger.codegen.languages.JavaJAXRSSpecServerCodegenTest", 
          "detail": "expected [false] but found [true]", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/331695545", 
        "date": "Jan 22, 2018 9:11:45 AM", 
        "id": 331695545
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/331677749", 
        "date": "Jan 22, 2018 7:49:31 AM", 
        "id": 331677749
      }
    }, 
    "repository": {
      "name": "swagger-api-swagger-codegen", 
      "url": "https://github.com/swagger-api/swagger-codegen", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 2006876
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/5ea3d3bb1834c538f3ea40755c0c684d15848dfa", 
        "sha": "5ea3d3bb1834c538f3ea40755c0c684d15848dfa", 
        "branchName": "master", 
        "date": "Jan 22, 2018 8:57:17 AM", 
        "repoName": "swagger-api/swagger-codegen"
      }, 
      "buggyBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/9e1bbe0c1c590f9e1651c8cbe9574bf72842efe5", 
        "sha": "9e1bbe0c1c590f9e1651c8cbe9574bf72842efe5", 
        "branchName": "master", 
        "date": "Jan 22, 2018 7:35:34 AM", 
        "repoName": "swagger-api/swagger-codegen"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/swagger-api-swagger-codegen-331677749-331695545", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 187, 
      "numberLibrariesFailingModule": 57, 
      "numberTestFiles": 188, 
      "numberModules": 4
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 3
      }
    }, 
    "bugId": "Bears_186", 
    "diff": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\nindex ba0c837be..f48b4e340 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/JavaJAXRSSpecServerCodegen.java\n@@ -85,6 +85,9 @@ public class JavaJAXRSSpecServerCodegen extends AbstractJavaJAXRSServerCodegen\n         }\n         if (additionalProperties.containsKey(INTERFACE_ONLY)) {\n             interfaceOnly = Boolean.valueOf(additionalProperties.get(INTERFACE_ONLY).toString());\n+            if (!interfaceOnly) {\n+                additionalProperties.remove(INTERFACE_ONLY);\n+            }\n         }\n         if (interfaceOnly) {\n             // Change default artifactId if genereating interfaces only, before command line options are applied in base class.\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 327921168, 
        "hostName": "spirals-bears", 
        "totalMemory": 668467200, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 21, 2018 10:26:26 PM", 
      "projectRootPomPath": "./workspace/swagger-api/swagger-codegen/331677749/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            2, 
            0, 
            0, 
            2, 
            235
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 239
        }, 
        "testing": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }, 
        "cloning": {
          "stepDurations": [
            51
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 51
        }
      }, 
      "reproductionDateBeginning": "Aug 21, 2018 10:18:12 PM", 
      "totalDuration": 487
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 590, 
        "numberRunning": 591, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 3
      }, 
      "failingModule": "/root/workspace/swagger-api/swagger-codegen/364149464/modules/swagger-codegen", 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "detail": "expected [true] but found [false]", 
          "isError": false, 
          "testMethod": "testNumberAsStrings", 
          "testClass": "io.swagger.codegen.swaggeryaml.SwaggerYamlGeneratorTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 2, 
          "testClass": "io.swagger.codegen.swaggeryaml.SwaggerYamlGeneratorTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/364892960", 
        "date": "Apr 11, 2018 3:01:44 AM", 
        "id": 364892960
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/swagger-api/swagger-codegen/builds/364149464", 
        "date": "Apr 9, 2018 4:54:31 PM", 
        "id": 364149464
      }
    }, 
    "repository": {
      "name": "swagger-api-swagger-codegen", 
      "url": "https://github.com/swagger-api/swagger-codegen", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 2006876
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/338b9c04b839d27e4597577b0670ad2695609aff", 
        "sha": "338b9c04b839d27e4597577b0670ad2695609aff", 
        "branchName": "master", 
        "date": "Apr 11, 2018 2:48:40 AM", 
        "repoName": "swagger-api/swagger-codegen"
      }, 
      "buggyBuild": {
        "url": "http://github.com/swagger-api/swagger-codegen/commit/c91ce17aeeeae2982b4a648333835377adc8d054", 
        "sha": "c91ce17aeeeae2982b4a648333835377adc8d054", 
        "branchName": "master", 
        "date": "Apr 9, 2018 4:41:22 PM", 
        "repoName": "swagger-api/swagger-codegen"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/swagger-api-swagger-codegen-364149464-364892960", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 3, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_187", 
    "diff": "diff --git a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\nindex b07d88fe5..e946e7ece 100644\n--- a/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\n+++ b/modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/SwaggerYamlGenerator.java\n@@ -60,7 +60,9 @@ public class SwaggerYamlGenerator extends DefaultCodegen implements CodegenConfi\n     @Override\n     public void processSwagger(Swagger swagger) {\n         try {\n-            final ObjectMapper mapper = new ObjectMapper(new YAMLFactory().configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true));\n+            final ObjectMapper mapper = new ObjectMapper(new YAMLFactory()\n+                    .configure(YAMLGenerator.Feature.MINIMIZE_QUOTES, true)\n+                    .configure(YAMLGenerator.Feature.ALWAYS_QUOTE_NUMBERS_AS_STRINGS, true));\n             configureMapper(mapper);\n             String swaggerString = mapper.writeValueAsString(swagger);\n             String outputFile = outputFolder + File.separator + this.outputFile;\n", 
    "projectMetrics": {
      "numberSourceFiles": 195, 
      "numberLibrariesFailingModule": 57, 
      "numberTestFiles": 200, 
      "numberModules": 4
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 365683256, 
        "hostName": "spirals-bears", 
        "totalMemory": 973602816, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 12:26:04 PM", 
      "projectRootPomPath": "./workspace/swagger-api/swagger-codegen/364149464/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            1, 
            0, 
            2, 
            239
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 243
        }, 
        "testing": {
          "stepDurations": [
            44
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 44
        }, 
        "cloning": {
          "stepDurations": [
            33
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 33
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 12:17:40 PM", 
      "totalDuration": 497
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 6, 
        "numberRunning": 7, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/SzFMV2018-Tavasz/AutomatedCar/351742666", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "hu.oe.nik.szfmv.visualization.DashboardTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testMethod": "allRequiredValuesReceivedOnUpdate", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.visualization.DashboardTest"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/351759763", 
        "date": "Mar 10, 2018 7:17:00 PM", 
        "id": 351759763
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/351742666", 
        "date": "Mar 10, 2018 6:05:33 PM", 
        "id": 351742666
      }
    }, 
    "repository": {
      "name": "SzFMV2018-Tavasz-AutomatedCar", 
      "url": "https://github.com/SzFMV2018-Tavasz/AutomatedCar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 117655293
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/6a656ea5686fa563e85754282f059264f3664471", 
        "sha": "6a656ea5686fa563e85754282f059264f3664471", 
        "branchName": "sprint1/team4/dashboard_AnalogSpeedoTacho", 
        "date": "Mar 10, 2018 7:13:13 PM", 
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/4efc1e696af816519a2d0d5d52b7deb11240dcc2", 
        "sha": "4efc1e696af816519a2d0d5d52b7deb11240dcc2", 
        "branchName": "sprint1/team4/dashboard_AnalogSpeedoTacho", 
        "date": "Mar 10, 2018 6:03:12 PM", 
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/SzFMV2018-Tavasz-AutomatedCar-351742666-351759763", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 19, 
      "numberLibrariesFailingModule": 7, 
      "numberTestFiles": 4, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_188", 
    "diff": "diff --git a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\nindex f75f81d20..4ba52c431 100644\n--- a/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\n+++ b/src/main/java/hu/oe/nik/szfmv/visualization/Dashboard.java\n@@ -56,7 +56,7 @@ public class Dashboard extends JPanel {\n         breakProgressBar.setValue(inputPacket.getBreakPedalPosition());\n         speedAngle = calculateSpeedometer(0);\n         rpmAngle = calculateTachometer(0);\n-        paintComponent(getGraphics());\n+        repaint();\n     }\n \n     /**\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 397908648, 
        "hostName": "spirals-bears", 
        "totalMemory": 437256192, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 28, 2018 10:07:41 PM", 
      "projectRootPomPath": "./workspace/SzFMV2018-Tavasz/AutomatedCar/351742666/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            19
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 19
        }, 
        "testing": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }, 
        "cloning": {
          "stepDurations": [
            9
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 9
        }
      }, 
      "reproductionDateBeginning": "Aug 28, 2018 10:06:36 PM", 
      "totalDuration": 62
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 85, 
        "numberRunning": 90, 
        "numberFailing": 0, 
        "numberErroring": 5, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 5
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/SzFMV2018-Tavasz/AutomatedCar/367688128", 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest", 
          "testMethod": "testNearestObject"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest", 
          "testMethod": "testNearestObjectDimensions"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest", 
          "testMethod": "onlyCollidableObjects"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest", 
          "testMethod": "itHasAllWorldObjects"
        }, 
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest", 
          "testMethod": "testNearestObjectDistance"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 1, 
          "numberRunning": 4, 
          "testClass": "hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensorTest", 
          "numberFailing": 0, 
          "numberErroring": 3, 
          "numberSkipping": 0
        }, 
        {
          "numberPassing": 0, 
          "numberRunning": 2, 
          "testClass": "hu.oe.nik.szfmv.detector.DetectorTest", 
          "numberFailing": 0, 
          "numberErroring": 2, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/367699437", 
        "date": "Apr 17, 2018 5:10:31 PM", 
        "id": 367699437
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/SzFMV2018-Tavasz/AutomatedCar/builds/367688128", 
        "date": "Apr 17, 2018 4:45:57 PM", 
        "id": 367688128
      }
    }, 
    "repository": {
      "name": "SzFMV2018-Tavasz-AutomatedCar", 
      "url": "https://github.com/SzFMV2018-Tavasz/AutomatedCar", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 117655293
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/6ffd1edf63c63dc77bc5ce924fce78399524bcb5", 
        "sha": "6ffd1edf63c63dc77bc5ce924fce78399524bcb5", 
        "branchName": "sprint3/team4/detectorchange", 
        "date": "Apr 17, 2018 5:07:17 PM", 
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }, 
      "buggyBuild": {
        "url": "http://github.com/SzFMV2018-Tavasz/AutomatedCar/commit/cfb2118729b90c03d884f2902956ae000f06d926", 
        "sha": "cfb2118729b90c03d884f2902956ae000f06d926", 
        "branchName": "sprint3/team4/detectorchange", 
        "date": "Apr 17, 2018 4:44:23 PM", 
        "repoName": "SzFMV2018-Tavasz/AutomatedCar"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/SzFMV2018-Tavasz-AutomatedCar-367688128-367699437", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 3, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 5, 
        "numberDeleted": 6
      }
    }, 
    "type": "failing_passing", 
    "bugId": "Bears_189", 
    "diff": "diff --git a/src/main/java/hu/oe/nik/szfmv/Main.java b/src/main/java/hu/oe/nik/szfmv/Main.java\nindex afc03a279..116975ab3 100644\n--- a/src/main/java/hu/oe/nik/szfmv/Main.java\n+++ b/src/main/java/hu/oe/nik/szfmv/Main.java\n@@ -32,10 +32,6 @@ public class Main {\n \n         // create the world\n         World w = new World(worldWidth, worldHeight);\n-        //create detector\n-        Detector d = Detector.getDetector();\n-        //set detector's list\n-        d.setWorldObjects(w.getWorldObjects());\n         // create an automated car\n         AutomatedCar car = new AutomatedCar(carX, carY, \"car_2_white.png\");\n         // add car to the world\ndiff --git a/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java b/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\nindex a3eec6993..b82e0419c 100644\n--- a/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\n+++ b/src/main/java/hu/oe/nik/szfmv/automatedcar/AutomatedCar.java\n@@ -7,6 +7,7 @@ import hu.oe.nik.szfmv.automatedcar.bus.packets.input.ReadOnlyInputPacket;\n import hu.oe.nik.szfmv.automatedcar.bus.powertrain.ReadOnlyPowertrainPacket;\n import hu.oe.nik.szfmv.automatedcar.sensors.UltrasonicSensor;\n import hu.oe.nik.szfmv.automatedcar.systemcomponents.*;\n+import hu.oe.nik.szfmv.detector.classes.Detector;\n import hu.oe.nik.szfmv.environment.WorldObject;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n@@ -62,7 +63,6 @@ public class AutomatedCar extends WorldObject {\n         powertrainSystem = new PowertrainSystem(virtualFunctionBus);\n         steeringSystem = new SteeringSystem(virtualFunctionBus);\n         steeringWheel = new SteeringWheel(virtualFunctionBus);\n-\n         new Driver(virtualFunctionBus);\n     }\n \ndiff --git a/src/main/java/hu/oe/nik/szfmv/environment/World.java b/src/main/java/hu/oe/nik/szfmv/environment/World.java\nindex 4632d0a43..6c57c6c70 100644\n--- a/src/main/java/hu/oe/nik/szfmv/environment/World.java\n+++ b/src/main/java/hu/oe/nik/szfmv/environment/World.java\n@@ -14,6 +14,7 @@ public class World implements IWorld {\n     private int width = 0;\n     private int height = 0;\n     private List<WorldObject> worldObjects = new ArrayList<>();\n+    Detector d;\n \n     /**\n      * Creates the virtual world with the given dimension.\n@@ -26,6 +27,10 @@ public class World implements IWorld {\n         this.width = width;\n         this.height = height;\n         this.build(\"src/main/resources/test.xml\");\n+        //create detector\n+        d = Detector.getDetector();\n+        //set detector's list\n+        d.setWorldObjects(getWorldObjects());\n     }\n \n     public int getWidth() {\n", 
    "projectMetrics": {
      "numberSourceFiles": 57, 
      "numberLibrariesFailingModule": 7, 
      "numberTestFiles": 20, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 355291392, 
        "hostName": "spirals-bears", 
        "totalMemory": 415760384, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 9:45:30 PM", 
      "projectRootPomPath": "./workspace/SzFMV2018-Tavasz/AutomatedCar/367688128/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            20
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 20
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 9:44:13 PM", 
      "totalDuration": 74
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 84, 
        "numberRunning": 85, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/thelastpickle/cassandra-reaper/324455111/src/server", 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest", 
          "testMethod": "testParseEndpoint22WithHostnameStatusString", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/327555133", 
        "date": "Jan 11, 2018 11:31:57 AM", 
        "id": 327555133
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/324455111", 
        "date": "Jan 11, 2018 7:48:21 AM", 
        "id": 324455111
      }
    }, 
    "repository": {
      "name": "thelastpickle-cassandra-reaper", 
      "url": "https://github.com/thelastpickle/cassandra-reaper", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 70856121
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/5a4bfe9c44f613910ea2bf3e423b77cb30d4d591", 
        "sha": "5a4bfe9c44f613910ea2bf3e423b77cb30d4d591", 
        "branchName": "master", 
        "date": "Jan 11, 2018 7:48:07 AM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }, 
      "buggyBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/5b563db59b490545981fc8426a60315ade676df1", 
        "sha": "5b563db59b490545981fc8426a60315ade676df1", 
        "branchName": "master", 
        "date": "Jan 3, 2018 6:08:26 AM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/thelastpickle-cassandra-reaper-324455111-327555133", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 76, 
      "numberLibrariesFailingModule": 177, 
      "numberTestFiles": 29, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 31, 
        "numberDeleted": 5
      }
    }, 
    "bugId": "Bears_190", 
    "diff": "diff --git a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\nindex d37cf2660..a97f7f8c4 100644\n--- a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n+++ b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n@@ -15,6 +15,7 @@\n package io.cassandrareaper.resources.view;\n \n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -24,9 +25,9 @@ import java.util.stream.Collectors;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.base.Optional;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n import com.google.common.collect.Sets;\n-import jersey.repackaged.com.google.common.collect.Lists;\n-import jersey.repackaged.com.google.common.collect.Maps;\n \n public final class NodesStatus {\n \n@@ -85,11 +86,36 @@ public final class NodesStatus {\n     Set<String> endpoints = Sets.newHashSet();\n     Matcher matcher;\n \n-    String[] strEndpoints = allEndpointStates.split(\"(?<![0-9a-zA-Z ])/\");\n+    // Split into endpointState record strings\n+    String[] endpointLines = allEndpointStates.split(\"\\n\");\n+    List<String> strEndpoints = Lists.newArrayList();\n+    StringBuilder recordBuilder = null;\n+    for (String line: endpointLines) {\n+      if (!line.startsWith(\"  \")) {\n+        if (recordBuilder != null) {\n+          strEndpoints.add(recordBuilder.toString());\n+        }\n+        recordBuilder = new StringBuilder(line.substring(line.indexOf('/') + 1));\n+      } else if (recordBuilder != null) {\n+        recordBuilder.append('\\n');\n+        recordBuilder.append(line);\n+      }\n+    }\n+    if (recordBuilder != null) {\n+      strEndpoints.add(recordBuilder.toString());\n+    }\n+\n+    // Cleanup hostnames from simpleStates keys\n+    Map<String, String> simpleStatesCopy = new HashMap<>();\n+    for (Map.Entry<String, String> entry: simpleStates.entrySet()) {\n+      String entryKey = entry.getKey().substring(entry.getKey().indexOf('/'));\n+      simpleStatesCopy.put(entryKey, entry.getValue());\n+    }\n+    simpleStates = simpleStatesCopy;\n+\n     Double totalLoad = 0.0;\n \n-    for (int i = 1; i < strEndpoints.length; i++) {\n-      String endpointString = strEndpoints[i];\n+    for (String endpointString: strEndpoints) {\n       Optional<String> status = Optional.absent();\n       Optional<String> endpoint = parseEndpointState(ENDPOINT_NAME_PATTERNS, endpointString, 1, String.class);\n \n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 326388672, 
        "hostName": "spirals-bears", 
        "totalMemory": 425721856, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Aug 18, 2018 2:29:24 PM", 
      "projectRootPomPath": "./workspace/thelastpickle/cassandra-reaper/324455111/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            1, 
            0, 
            0, 
            1, 
            65
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 67
        }, 
        "testing": {
          "stepDurations": [
            48
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 48
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Aug 18, 2018 2:25:29 PM", 
      "totalDuration": 230
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 104, 
        "numberRunning": 110, 
        "numberFailing": 6, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "org.junit.ComparisonFailure", 
            "isError": false, 
            "occurrences": 6
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/thelastpickle/cassandra-reaper/364710673/src/server", 
      "failureDetails": [
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6Endpoint21WithHostnameStatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6EndpointCassandraWithHostnameStatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6Endpoint21StatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6Endpoint22StatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6EndpointCassandraStatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }, 
        {
          "failureName": "org.junit.ComparisonFailure", 
          "detail": "expected:<NORMAL - [D]OWN> but was:<NORMAL - [UNKN]OWN>", 
          "isError": false, 
          "testMethod": "testParseIPv6Endpoint22WithHostnameStatusString", 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 12, 
          "testClass": "io.cassandrareaper.resources.view.NodesStatusTest", 
          "numberFailing": 6, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365484062", 
        "date": "Apr 12, 2018 10:09:19 AM", 
        "id": 365484062
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/364710673", 
        "date": "Apr 10, 2018 8:07:45 PM", 
        "id": 364710673
      }
    }, 
    "repository": {
      "name": "thelastpickle-cassandra-reaper", 
      "url": "https://github.com/thelastpickle/cassandra-reaper", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 70856121
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/6a59feda5c2fd4ea6f05a41a8437c3749e29fd21", 
        "sha": "6a59feda5c2fd4ea6f05a41a8437c3749e29fd21", 
        "branchName": "master", 
        "date": "Apr 12, 2018 9:43:16 AM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }, 
      "buggyBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/53b8f9c03ce3e8e1905aeb658bde238925195891", 
        "sha": "53b8f9c03ce3e8e1905aeb658bde238925195891", 
        "branchName": "master", 
        "date": "Apr 10, 2018 7:00:43 PM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/thelastpickle-cassandra-reaper-364710673-365484062", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 84, 
      "numberLibrariesFailingModule": 182, 
      "numberTestFiles": 37, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 2, 
        "numberDeleted": 4
      }
    }, 
    "bugId": "Bears_191", 
    "diff": "diff --git a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\nindex a97f7f8c4..9d35544a4 100644\n--- a/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n+++ b/src/server/src/main/java/io/cassandrareaper/resources/view/NodesStatus.java\n@@ -41,8 +41,10 @@ public final class NodesStatus {\n   private static final List<Pattern> ENDPOINT_HOSTID_PATTERNS = Lists.newArrayList();\n   private static final List<Pattern> ENDPOINT_TOKENS_PATTERNS = Lists.newArrayList();\n \n-  private static final Pattern ENDPOINT_NAME_PATTERN\n+  private static final Pattern ENDPOINT_NAME_PATTERN_IP4\n       = Pattern.compile(\"^([0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})\", Pattern.MULTILINE | Pattern.DOTALL);\n+  private static final Pattern ENDPOINT_NAME_PATTERN_IP6\n+          = Pattern.compile(\"^([0-9:a-fA-F\\\\]\\\\[]{3,41})\", Pattern.MULTILINE | Pattern.DOTALL);\n   private static final Pattern ENDPOINT_STATUS_22_PATTERN = Pattern.compile(\"(STATUS):([0-9]*):(\\\\w+)\");\n   private static final Pattern ENDPOINT_DC_22_PATTERN = Pattern.compile(\"(DC):([0-9]*):([0-9a-zA-Z-\\\\.]+)\");\n   private static final Pattern ENDPOINT_RACK_22_PATTERN = Pattern.compile(\"(RACK):([0-9]*):([0-9a-zA-Z-\\\\.]+)\");\n@@ -181,7 +183,7 @@ public final class NodesStatus {\n   }\n \n   private static void initPatterns() {\n-    ENDPOINT_NAME_PATTERNS.add(ENDPOINT_NAME_PATTERN);\n+    ENDPOINT_NAME_PATTERNS.addAll(Arrays.asList(ENDPOINT_NAME_PATTERN_IP4, ENDPOINT_NAME_PATTERN_IP6));\n     ENDPOINT_STATUS_PATTERNS.addAll(Arrays.asList(ENDPOINT_STATUS_22_PATTERN, ENDPOINT_STATUS_21_PATTERN));\n     ENDPOINT_DC_PATTERNS.addAll(Arrays.asList(ENDPOINT_DC_22_PATTERN, ENDPOINT_DC_21_PATTERN));\n     ENDPOINT_RACK_PATTERNS.addAll(Arrays.asList(ENDPOINT_RACK_22_PATTERN, ENDPOINT_RACK_21_PATTERN));\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 296824136, 
        "hostName": "spirals-bears", 
        "totalMemory": 428343296, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 3:13:04 AM", 
      "projectRootPomPath": "./workspace/thelastpickle/cassandra-reaper/364710673/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            70
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 70
        }, 
        "testing": {
          "stepDurations": [
            44
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 44
        }, 
        "cloning": {
          "stepDurations": [
            7
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 7
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 3:08:19 AM", 
      "totalDuration": 280
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 112, 
        "numberRunning": 114, 
        "numberFailing": 2, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 2
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/thelastpickle/cassandra-reaper/365484062/src/server", 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 6, 
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest", 
          "numberFailing": 2, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testAbortedRepairDuration", 
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest", 
          "detail": "expected:<30 seconds> but was:<null>", 
          "isError": false
        }, 
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testRunningRepairDuration", 
          "testClass": "io.cassandrareaper.resources.view.RepairRunStatusTest", 
          "detail": "expected:<1 minute 0 seconds> but was:<null>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365554427", 
        "date": "Apr 12, 2018 2:18:52 PM", 
        "id": 365554427
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/thelastpickle/cassandra-reaper/builds/365484062", 
        "date": "Apr 12, 2018 10:09:19 AM", 
        "id": 365484062
      }
    }, 
    "repository": {
      "name": "thelastpickle-cassandra-reaper", 
      "url": "https://github.com/thelastpickle/cassandra-reaper", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 70856121
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/3c0a1fae7bf21f40be319464bcd16ebf50397417", 
        "sha": "3c0a1fae7bf21f40be319464bcd16ebf50397417", 
        "branchName": "master", 
        "date": "Apr 12, 2018 1:03:56 PM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }, 
      "buggyBuild": {
        "url": "http://github.com/thelastpickle/cassandra-reaper/commit/6a59feda5c2fd4ea6f05a41a8437c3749e29fd21", 
        "sha": "6a59feda5c2fd4ea6f05a41a8437c3749e29fd21", 
        "branchName": "master", 
        "date": "Apr 12, 2018 9:43:16 AM", 
        "repoName": "thelastpickle/cassandra-reaper"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/thelastpickle-cassandra-reaper-365484062-365554427", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 84, 
      "numberLibrariesFailingModule": 182, 
      "numberTestFiles": 37, 
      "numberModules": 1
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 21, 
        "numberDeleted": 28
      }
    }, 
    "bugId": "Bears_192", 
    "diff": "diff --git a/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java b/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\nindex 0c81b9243..b4ca87e97 100644\n--- a/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\n+++ b/src/server/src/main/java/io/cassandrareaper/resources/view/RepairRunStatus.java\n@@ -19,6 +19,7 @@ import io.cassandrareaper.core.RepairUnit;\n \n import java.util.Collection;\n import java.util.UUID;\n+\n import javax.annotation.Nullable;\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n@@ -67,6 +68,8 @@ public final class RepairRunStatus {\n   @JsonIgnore\n   private DateTime pauseTime;\n \n+  @JsonIgnore private DateTime currentTime;\n+\n   @JsonProperty\n   private double intensity;\n \n@@ -139,6 +142,7 @@ public final class RepairRunStatus {\n     this.startTime = startTime;\n     this.endTime = endTime;\n     this.pauseTime = pauseTime;\n+    this.currentTime = DateTime.now();\n     this.intensity = roundDoubleNicely(intensity);\n     this.incrementalRepair = incrementalRepair;\n     this.totalSegments = totalSegments;\n@@ -150,14 +154,31 @@ public final class RepairRunStatus {\n     this.datacenters = datacenters;\n     this.blacklistedTables = blacklistedTables;\n \n-    if (startTime == null || endTime == null) {\n+    if (startTime == null) {\n       duration = null;\n     } else {\n-      duration = DurationFormatUtils.formatDurationWords(\n-          new Duration(startTime.toInstant(), endTime.toInstant()).getMillis(), true, false);\n+      if (state == RepairRun.RunState.RUNNING || state == RepairRun.RunState.PAUSED) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), currentTime.toInstant()).getMillis(),\n+                true,\n+                false);\n+      } else if (state == RepairRun.RunState.ABORTED) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), pauseTime.toInstant()).getMillis(),\n+                true,\n+                false);\n+      } else if (endTime != null) {\n+        duration =\n+            DurationFormatUtils.formatDurationWords(\n+                new Duration(startTime.toInstant(), endTime.toInstant()).getMillis(), true, false);\n+      } else {\n+        duration = null;\n+      }\n     }\n \n-    if (startTime == null || (endTime != null && endTime.isAfter(startTime))) {\n+    if (startTime == null) {\n       estimatedTimeOfArrival = null;\n     } else {\n       if (state == RepairRun.RunState.ERROR\n@@ -247,6 +268,18 @@ public final class RepairRunStatus {\n     }\n   }\n \n+  @JsonProperty(\"current_time\")\n+  public void setCurrentTimeIso8601(String dateStr) {\n+    if (null != dateStr) {\n+      currentTime = ISODateTimeFormat.dateTimeNoMillis().parseDateTime(dateStr);\n+    }\n+  }\n+\n+  @JsonProperty(\"current_time\")\n+  public String getCurrentTimeIso8601() {\n+    return dateTimeToIso8601(currentTime);\n+  }\n+\n   public String getCause() {\n     return cause;\n   }\n@@ -335,6 +368,14 @@ public final class RepairRunStatus {\n     this.pauseTime = pauseTime;\n   }\n \n+  public DateTime getCurrentTime() {\n+    return currentTime;\n+  }\n+\n+  public void setCurrentTime(DateTime currentTime) {\n+    this.currentTime = currentTime;\n+  }\n+\n   public double getIntensity() {\n     return intensity;\n   }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 284905496, 
        "hostName": "spirals-bears", 
        "totalMemory": 423100416, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Sep 3, 2018 3:09:52 AM", 
      "projectRootPomPath": "./workspace/thelastpickle/cassandra-reaper/365484062/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            1, 
            71
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 72
        }, 
        "testing": {
          "stepDurations": [
            46
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 46
        }, 
        "cloning": {
          "stepDurations": [
            8
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 8
        }
      }, 
      "reproductionDateBeginning": "Sep 3, 2018 3:05:41 AM", 
      "totalDuration": 245
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 10, 
        "numberRunning": 11, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.IllegalStateException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/Activiti/activiti-cloud-app-service/459060444/activiti-cloud-app-service", 
      "failureDetails": [
        {
          "failureName": "java.lang.IllegalStateException", 
          "detail": "Failed to load ApplicationContext", 
          "isError": true, 
          "testMethod": "contextLoads", 
          "testClass": "org.activiti.cloud.app.ApplicationTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "org.activiti.cloud.app.ApplicationTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/Activiti/activiti-cloud-app-service/builds/459062447", 
        "date": "Nov 24, 2018 9:38:25 AM", 
        "id": 459062447
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/Activiti/activiti-cloud-app-service/builds/459060444", 
        "date": "Nov 24, 2018 9:25:30 AM", 
        "id": 459060444
      }
    }, 
    "repository": {
      "name": "Activiti-activiti-cloud-app-service", 
      "url": "https://github.com/Activiti/activiti-cloud-app-service", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 118592481
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/Activiti/activiti-cloud-app-service/commit/d66c4337ff021d552cec2c045ea025bb9b27f631", 
        "sha": "d66c4337ff021d552cec2c045ea025bb9b27f631", 
        "branchName": "develop", 
        "date": "Nov 24, 2018 9:35:27 AM", 
        "repoName": "Activiti/activiti-cloud-app-service"
      }, 
      "buggyBuild": {
        "url": "http://github.com/Activiti/activiti-cloud-app-service/commit/09c98b115e0b663b5008d0a237b6b940c6819064", 
        "sha": "09c98b115e0b663b5008d0a237b6b940c6819064", 
        "branchName": "develop", 
        "date": "Nov 24, 2018 9:22:05 AM", 
        "repoName": "Activiti/activiti-cloud-app-service"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/Activiti-activiti-cloud-app-service-459060444-459062447", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 11, 
        "numberDeleted": 6
      }
    }, 
    "type": "failing_passing", 
    "bugId": "Bears_193", 
    "diff": "diff --git a/activiti-cloud-app-service/src/main/java/org/activiti/cloud/app/configuration/ApplicationServiceAutoConfiguration.java b/activiti-cloud-app-service/src/main/java/org/activiti/cloud/app/configuration/ApplicationServiceAutoConfiguration.java\nindex 21ddd4795..b57ee9110 100644\n--- a/activiti-cloud-app-service/src/main/java/org/activiti/cloud/app/configuration/ApplicationServiceAutoConfiguration.java\n+++ b/activiti-cloud-app-service/src/main/java/org/activiti/cloud/app/configuration/ApplicationServiceAutoConfiguration.java\n@@ -6,6 +6,7 @@ import org.activiti.cloud.app.services.ApplicationsService;\n import org.activiti.cloud.app.services.DeploymentsService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n@@ -38,17 +39,11 @@ public class ApplicationServiceAutoConfiguration {\n     @Import({ApplicationsController.class, DeploymentsController.class})\n     public static class DefaultApplicationsServiceConfiguration implements SchedulingConfigurer {\n \n-        @Bean\n-        @ConditionalOnMissingBean(type = \"ApplicationsService\")\n-        ApplicationsService applicationsService() {\n-            return new ApplicationsService();\n-        }\n+        @Autowired\n+        private ApplicationsService applicationsService;\n \n-        @Bean\n-        @ConditionalOnMissingBean(type = \"DeploymentsService\")\n-        DeploymentsService deploymentsService() {\n-            return new DeploymentsService();\n-        }\n+        @Autowired\n+        private DeploymentsService deploymentService;\n \n         @Bean\n         @ConditionalOnMissingBean(type = \"RestTemplate\")\n@@ -74,7 +69,7 @@ public class ApplicationServiceAutoConfiguration {\n                     new Runnable() {\n                         @Override public void run() {\n                             LOGGER.debug(\">>> Refreshing Apps now: \" + System.currentTimeMillis());\n-                            applicationsService().refresh();\n+                            applicationsService.refresh();\n                         }\n                     },\n                     new Trigger() {\n", 
    "projectMetrics": {
      "numberSourceFiles": 16, 
      "numberLibrariesFailingModule": 138, 
      "numberTestFiles": 6, 
      "numberModules": 2
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 398155904, 
        "hostName": "spirals-bears", 
        "totalMemory": 483917824, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Nov 24, 2018 9:42:36 AM", 
      "projectRootPomPath": "./workspace/Activiti/activiti-cloud-app-service/459060444/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            125
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 125
        }, 
        "testing": {
          "stepDurations": [
            18
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 18
        }, 
        "cloning": {
          "stepDurations": [
            2
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 2
        }
      }, 
      "reproductionDateBeginning": "Nov 24, 2018 9:38:45 AM", 
      "totalDuration": 226
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 57, 
        "numberRunning": 58, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "java.lang.AssertionError", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 1
      }, 
      "failingModule": "/root/workspace/albfernandez/GDS-PMD-Security-Rules/451155169", 
      "failingClasses": [
        {
          "numberPassing": 3, 
          "numberRunning": 4, 
          "testClass": "com.gdssecurity.pmd.SanitizersTest", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.AssertionError", 
          "testMethod": "testSanitizerParseInt", 
          "testClass": "com.gdssecurity.pmd.SanitizersTest", 
          "detail": "expected:<0> but was:<1>", 
          "isError": false
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/albfernandez/GDS-PMD-Security-Rules/builds/455669767", 
        "date": "Nov 15, 2018 9:12:29 PM", 
        "id": 455669767
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/albfernandez/GDS-PMD-Security-Rules/builds/451155169", 
        "date": "Nov 6, 2018 1:53:32 AM", 
        "id": 451155169
      }
    }, 
    "repository": {
      "name": "albfernandez-GDS-PMD-Security-Rules", 
      "url": "https://github.com/albfernandez/GDS-PMD-Security-Rules", 
      "isFork": true, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "https://github.com/GDSSecurity/GDS-PMD-Security-Rules", 
        "name": "GDSSecurity/GDS-PMD-Security-Rules", 
        "githubId": 4331487
      }, 
      "githubId": 27188212
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/albfernandez/GDS-PMD-Security-Rules/commit/d08d1b9f55598fca9b5a9b78b89998f81edeed7c", 
        "sha": "d08d1b9f55598fca9b5a9b78b89998f81edeed7c", 
        "branchName": "master", 
        "date": "Nov 15, 2018 9:09:57 PM", 
        "repoName": "albfernandez/GDS-PMD-Security-Rules"
      }, 
      "buggyBuild": {
        "url": "http://github.com/albfernandez/GDS-PMD-Security-Rules/commit/065482ffcb1a1a35a5a2a5e0e54aafc565e1be9a", 
        "sha": "065482ffcb1a1a35a5a2a5e0e54aafc565e1be9a", 
        "branchName": "master", 
        "date": "Nov 6, 2018 1:44:54 AM", 
        "repoName": "albfernandez/GDS-PMD-Security-Rules"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/albfernandez-GDS-PMD-Security-Rules-451155169-455669767", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 0, 
        "numberDeleted": 24
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_194", 
    "diff": "diff --git a/src/main/java/com/gdssecurity/pmd/rules/dfa/DfaSecurityRule.java b/src/main/java/com/gdssecurity/pmd/rules/dfa/DfaSecurityRule.java\nindex c78faf2f6..d93425e7c 100644\n--- a/src/main/java/com/gdssecurity/pmd/rules/dfa/DfaSecurityRule.java\n+++ b/src/main/java/com/gdssecurity/pmd/rules/dfa/DfaSecurityRule.java\n@@ -544,6 +544,9 @@ public class DfaSecurityRule extends BaseSecurityRule implements Executable {\n \tprivate boolean isAnyArgumentTainted(Node simpleNode) {\n \t\tASTArgumentList argListNode = simpleNode.getFirstDescendantOfType(ASTArgumentList.class);\n \t\tif (argListNode != null) {\n+\t\t\tif (isSanitized(argListNode)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n \t\t\tint numChildren = argListNode.jjtGetNumChildren();\n \t\t\tfor (int i = 0; i < numChildren; i++) {\n \t\t\t\tNode argument = argListNode.jjtGetChild(i);\n@@ -555,6 +558,27 @@ public class DfaSecurityRule extends BaseSecurityRule implements Executable {\n \t\treturn false;\n \t}\n \n+\tprivate boolean isSanitized(ASTArgumentList argListNode) {\n+\t\ttry {\n+\t\t\tASTArguments arguments = (ASTArguments) argListNode.jjtGetParent();\n+\t\t\tASTPrimarySuffix suffix = (ASTPrimarySuffix) arguments.jjtGetParent();\n+\t\t\tASTPrimaryExpression exp = (ASTPrimaryExpression) suffix.jjtGetParent();\n+\t\t\tString method = getMethod(exp);\n+\t\t\tClass<?> type = getJavaType(exp);\n+\t\t\tString typeName = type.getName();\n+\t\t\tif (isSink(typeName, method)) {\n+\t\t\t\treturn false;\n+\t\t\t}\n+\t\t\tif (isSanitizerMethod(typeName, method) || isSafeType(getReturnType(exp, typeName, method))) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \tprivate boolean isMethodCall(Node node) {\n \t\tASTArguments arguments = node.getFirstDescendantOfType(ASTArguments.class);\n \t\treturn arguments != null;\n", 
    "projectMetrics": {
      "numberSourceFiles": 13, 
      "numberLibrariesFailingModule": 72, 
      "numberTestFiles": 88, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 319652952, 
        "hostName": "spirals-bears", 
        "totalMemory": 378535936, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Nov 15, 2018 9:14:51 PM", 
      "projectRootPomPath": "./workspace/albfernandez/GDS-PMD-Security-Rules/451155169/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            57
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 57
        }, 
        "testing": {
          "stepDurations": [
            14
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 14
        }, 
        "cloning": {
          "stepDurations": [
            3
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 3
        }
      }, 
      "reproductionDateBeginning": "Nov 15, 2018 9:12:47 PM", 
      "totalDuration": 119
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 1611, 
        "numberRunning": 1612, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.Exception", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 10
      }, 
      "failingModule": "/root/workspace/apache/incubator-dubbo/450828157/dubbo-config/dubbo-config-api", 
      "failureDetails": [
        {
          "failureName": "java.lang.Exception", 
          "detail": "Unexpected exception, expected<java.lang.IllegalStateException> but was<java.lang.IllegalArgumentException>", 
          "isError": true, 
          "testMethod": "checkStubAndMock8", 
          "testClass": "com.alibaba.dubbo.config.AbstractInterfaceConfigTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 37, 
          "numberRunning": 38, 
          "testClass": "com.alibaba.dubbo.config.AbstractInterfaceConfigTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/450884276", 
        "date": "Nov 5, 2018 3:39:54 PM", 
        "id": 450884276
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-dubbo/builds/450828157", 
        "date": "Nov 5, 2018 1:22:32 PM", 
        "id": 450828157
      }
    }, 
    "repository": {
      "name": "apache-incubator-dubbo", 
      "url": "https://github.com/apache/incubator-dubbo", 
      "isFork": false, 
      "pullRequestId": 2739, 
      "isPullRequest": true, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 4710920
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/c4dfc3acfde53e35a95279848002bb8ccfe7a2a6", 
        "sha": "c4dfc3acfde53e35a95279848002bb8ccfe7a2a6", 
        "branchName": "2.6.x", 
        "date": "Nov 5, 2018 3:18:05 PM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "fixerBuildBaseRepo": {
        "url": "https://github.com/apache/incubator-dubbo/commit/f2d73f7914c03cc95b884b69b3e660ee0a7ae033", 
        "sha": "f2d73f7914c03cc95b884b69b3e660ee0a7ae033", 
        "branchName": "2.6.x", 
        "date": "Nov 5, 2018 8:24:29 AM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "fixerBuildForkRepo": {
        "url": "https://github.com/beiwei30/incubator-dubbo/commit/9a855c7082bd2b6152faa16dbf4df40acc7453c3", 
        "sha": "9a855c7082bd2b6152faa16dbf4df40acc7453c3", 
        "branchName": "mock", 
        "date": "Nov 5, 2018 3:18:05 PM", 
        "repoName": "beiwei30/incubator-dubbo"
      }, 
      "buggyBuildForkRepo": {
        "url": "https://github.com/beiwei30/incubator-dubbo/commit/9a855c7082bd2b6152faa16dbf4df40acc7453c3", 
        "sha": "9a855c7082bd2b6152faa16dbf4df40acc7453c3", 
        "branchName": "mock", 
        "date": "Nov 5, 2018 3:18:05 PM", 
        "repoName": "beiwei30/incubator-dubbo"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-dubbo/commit/f3e23a7a40867bc96d485af38cc2a70ad0acafaa", 
        "sha": "f3e23a7a40867bc96d485af38cc2a70ad0acafaa", 
        "branchName": "2.6.x", 
        "date": "Nov 5, 2018 1:06:27 PM", 
        "repoName": "apache/incubator-dubbo"
      }, 
      "buggyBuildBaseRepo": {
        "url": "https://github.com/apache/incubator-dubbo/commit/f2d73f7914c03cc95b884b69b3e660ee0a7ae033", 
        "sha": "f2d73f7914c03cc95b884b69b3e660ee0a7ae033", 
        "branchName": "2.6.x", 
        "date": "Nov 5, 2018 8:24:29 AM", 
        "repoName": "apache/incubator-dubbo"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-dubbo-450828157-450884276", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 642, 
      "numberLibrariesFailingModule": 53, 
      "numberTestFiles": 556, 
      "numberModules": 60
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 6, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_195", 
    "diff": "diff --git a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/support/MockInvoker.java b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/support/MockInvoker.java\nindex 3e6d3ee41..fc99bdcd1 100644\n--- a/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/support/MockInvoker.java\n+++ b/dubbo-rpc/dubbo-rpc-api/src/main/java/com/alibaba/dubbo/rpc/support/MockInvoker.java\n@@ -170,7 +170,7 @@ final public class MockInvoker<T> implements Invoker<T> {\n \r\n         Class<?> mockClass = ReflectUtils.forName(mockService);\r\n         if (!serviceType.isAssignableFrom(mockClass)) {\r\n-            throw new IllegalArgumentException(\"The mock class \" + mockClass.getName() +\r\n+            throw new IllegalStateException(\"The mock class \" + mockClass.getName() +\r\n                     \" not implement interface \" + serviceType.getName());\r\n         }\r\n \r\n@@ -188,12 +188,13 @@ final public class MockInvoker<T> implements Invoker<T> {\n      * Normalize mock string:\r\n      *\r\n      * <ol>\r\n-     *     <li>return => return null</li>\r\n-     *     <li>fail => default</li>\r\n-     *     <li>force => default</li>\r\n-     *     <li>fail:throw/return foo => throw/return foo</li>\r\n-     *     <li>force:throw/return foo => throw/return foo</li>\r\n+     * <li>return => return null</li>\r\n+     * <li>fail => default</li>\r\n+     * <li>force => default</li>\r\n+     * <li>fail:throw/return foo => throw/return foo</li>\r\n+     * <li>force:throw/return foo => throw/return foo</li>\r\n      * </ol>\r\n+     *\r\n      * @param mock mock string\r\n      * @return normalized mock string\r\n      */\r\n", 
    "type": "failing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 338597776, 
        "hostName": "spirals-bears", 
        "totalMemory": 592969728, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Nov 5, 2018 4:05:56 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-dubbo/450828157/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            4, 
            273
          ], 
          "stepNames": [
            "CheckoutBuggyBuildCandidate", 
            "BuildProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 2, 
          "totalDuration": 277
        }, 
        "testing": {
          "stepDurations": [
            455
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidate"
          ], 
          "nbSteps": 1, 
          "totalDuration": 455
        }, 
        "cloning": {
          "stepDurations": [
            10
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 10
        }
      }, 
      "reproductionDateBeginning": "Nov 5, 2018 3:40:12 PM", 
      "totalDuration": 1537
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 259, 
        "numberRunning": 260, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/apache/incubator-tamaya/457807119/code/spi-support", 
      "failingClasses": [
        {
          "numberPassing": 4, 
          "numberRunning": 5, 
          "testClass": "org.apache.tamaya.spisupport.EnumConverterTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "testClass": "org.apache.tamaya.spisupport.EnumConverterTest", 
          "testMethod": "testConvert_Nulls", 
          "isError": true
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apache/incubator-tamaya/builds/461484371", 
        "date": "Nov 29, 2018 10:15:58 PM", 
        "id": 461484371
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apache/incubator-tamaya/builds/457807119", 
        "date": "Nov 21, 2018 7:52:03 AM", 
        "id": 457807119
      }
    }, 
    "repository": {
      "name": "apache-incubator-tamaya", 
      "url": "https://github.com/apache/incubator-tamaya", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 26951044
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apache/incubator-tamaya/commit/69090c547ffd1f7ccd1e22a44cb56ff7ffea678d", 
        "sha": "69090c547ffd1f7ccd1e22a44cb56ff7ffea678d", 
        "branchName": "master", 
        "date": "Nov 29, 2018 10:08:55 PM", 
        "repoName": "apache/incubator-tamaya"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apache/incubator-tamaya/commit/e7e02c4b37f0aef84bf158778faa64b00e410b51", 
        "sha": "e7e02c4b37f0aef84bf158778faa64b00e410b51", 
        "branchName": "master", 
        "date": "Nov 21, 2018 7:49:03 AM", 
        "repoName": "apache/incubator-tamaya"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apache-incubator-tamaya-457807119-461484371", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 104, 
      "numberLibrariesFailingModule": 8, 
      "numberTestFiles": 104, 
      "numberModules": 9
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 13, 
        "numberDeleted": 7
      }
    }, 
    "bugId": "Bears_196", 
    "diff": "diff --git a/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java b/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java\nindex 9b06366e2..7d0a49913 100644\n--- a/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java\n+++ b/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java\n@@ -24,7 +24,6 @@ import org.apache.tamaya.spi.PropertyConverter;\n \n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n-import java.math.RoundingMode;\n import java.util.Locale;\n import java.util.Objects;\n import java.util.logging.Level;\n@@ -34,6 +33,7 @@ import java.util.logging.Logger;\n  * Converter, converting from String to the given enum type.\n  */\n public class EnumConverter<T> implements PropertyConverter<T> {\n+\n     private final Logger LOG = Logger.getLogger(EnumConverter.class.getName());\n     private Class<T> enumType;\n     private Method factory;\n@@ -46,21 +46,23 @@ public class EnumConverter<T> implements PropertyConverter<T> {\n         try {\n             this.factory = enumType.getMethod(\"valueOf\", String.class);\n         } catch (NoSuchMethodException e) {\n-            throw new ConfigException(\"Uncovertible enum type without createValue method found, please provide a custom \" +\n-                    \"PropertyConverter for: \" + enumType.getName());\n+            throw new ConfigException(\"Uncovertible enum type without createValue method found, please provide a custom \"\n+                    + \"PropertyConverter for: \" + enumType.getName());\n         }\n     }\n \n     @Override\n     public T convert(String value, ConversionContext ctx) {\n-        ctx.addSupportedFormats(getClass(),\"<enumValue>\");\n+        ctx.addSupportedFormats(getClass(), \"<enumValue>\");\n         try {\n             return (T) factory.invoke(null, value);\n         } catch (InvocationTargetException | IllegalAccessException e) {\n             LOG.log(Level.FINEST, \"Invalid enum createValue '\" + value + \"' for \" + enumType.getName(), e);\n         }\n         try {\n-            return (T) factory.invoke(null, value.toUpperCase(Locale.ENGLISH));\n+            if (value != null) {\n+                return (T) factory.invoke(null, value.toUpperCase(Locale.ENGLISH));\n+            }\n         } catch (InvocationTargetException | IllegalAccessException e) {\n             LOG.log(Level.FINEST, \"Invalid enum createValue '\" + value + \"' for \" + enumType.getName(), e);\n         }\n@@ -69,8 +71,12 @@ public class EnumConverter<T> implements PropertyConverter<T> {\n \n     @Override\n     public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (!(o instanceof EnumConverter)) return false;\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof EnumConverter)) {\n+            return false;\n+        }\n         EnumConverter<?> that = (EnumConverter<?>) o;\n         return Objects.equals(enumType, that.enumType);\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 322442408, 
        "hostName": "spirals-bears", 
        "totalMemory": 414187520, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Nov 29, 2018 10:20:05 PM", 
      "projectRootPomPath": "./workspace/apache/incubator-tamaya/457807119/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            108
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 109
        }, 
        "testing": {
          "stepDurations": [
            19
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 19
        }, 
        "cloning": {
          "stepDurations": [
            6
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 6
        }
      }, 
      "reproductionDateBeginning": "Nov 29, 2018 10:16:12 PM", 
      "totalDuration": 228
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 153, 
        "numberRunning": 154, 
        "numberFailing": 1, 
        "numberErroring": 0, 
        "failures": [
          {
            "failureName": "junit.framework.ComparisonFailure", 
            "isError": false, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/apereo/java-cas-client/408206584/cas-client-core", 
      "failureDetails": [
        {
          "failureName": "junit.framework.ComparisonFailure", 
          "detail": "null expected:<...//www.my.server.com/[app/]hello/hithere/> but was:<...//www.my.server.com/[]hello/hithere/>", 
          "isError": false, 
          "testMethod": "testConstructServiceUrlWithServerNameContainingPathAndSchema", 
          "testClass": "org.jasig.cas.client.util.CommonUtilsTests"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 25, 
          "numberRunning": 26, 
          "testClass": "org.jasig.cas.client.util.CommonUtilsTests", 
          "numberFailing": 1, 
          "numberErroring": 0, 
          "numberSkipping": 0
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/apereo/java-cas-client/builds/439486928", 
        "date": "Oct 10, 2018 8:59:34 AM", 
        "id": 439486928
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/apereo/java-cas-client/builds/408206584", 
        "date": "Jul 25, 2018 10:12:15 PM", 
        "id": 408206584
      }
    }, 
    "repository": {
      "name": "apereo-java-cas-client", 
      "url": "https://github.com/apereo/java-cas-client", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 3645037
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/apereo/java-cas-client/commit/82c21161b9ef7abf0001ecfcd8800e669bd54b43", 
        "sha": "82c21161b9ef7abf0001ecfcd8800e669bd54b43", 
        "branchName": "master", 
        "date": "Oct 10, 2018 8:22:17 AM", 
        "repoName": "apereo/java-cas-client"
      }, 
      "buggyBuild": {
        "url": "http://github.com/apereo/java-cas-client/commit/ee9dcc61cdaab8ce9b9d50dddea06a31bd363529", 
        "sha": "ee9dcc61cdaab8ce9b9d50dddea06a31bd363529", 
        "branchName": "master", 
        "date": "Jul 25, 2018 9:17:05 PM", 
        "repoName": "apereo/java-cas-client"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/apereo-java-cas-client-408206584-439486928", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 163, 
      "numberLibrariesFailingModule": 20, 
      "numberTestFiles": 40, 
      "numberModules": 12
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 2, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 21, 
        "numberDeleted": 10
      }
    }, 
    "bugId": "Bears_197", 
    "diff": "diff --git a/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java b/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\nindex 5cff27fde..eb354beea 100644\n--- a/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\n+++ b/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java\n@@ -257,17 +257,7 @@ public final class CommonUtils {\n \n         return serverNames[0];\n     }\n-\n-    private static boolean serverNameContainsPort(final boolean containsScheme, final String serverName) {\n-        if (!containsScheme && serverName.contains(\":\")) {\n-            return true;\n-        }\n-\n-        final int schemeIndex = serverName.indexOf(\":\");\n-        final int portIndex = serverName.lastIndexOf(\":\");\n-        return schemeIndex != portIndex;\n-    }\n-\n+    \n     private static boolean requestIsOnStandardPort(final HttpServletRequest request) {\n         final int serverPort = request.getServerPort();\n         return serverPort == 80 || serverPort == 443;\n@@ -325,23 +315,18 @@ public final class CommonUtils {\n         originalRequestUrl.setParameters(request.getQueryString());\n \n         final URIBuilder builder;\n-\n-        boolean containsScheme = true;\n         if (!serverName.startsWith(\"https://\") && !serverName.startsWith(\"http://\")) {\n-            builder = new URIBuilder(encode);\n-            builder.setScheme(request.isSecure() ? \"https\" : \"http\");\n-            builder.setHost(serverName);\n-            containsScheme = false;\n-        }  else {\n+            String scheme = request.isSecure() ? \"https://\" : \"http://\";\n+            builder = new URIBuilder(scheme + serverName, encode);\n+        } else {\n             builder = new URIBuilder(serverName, encode);\n         }\n \n-\n-        if (!serverNameContainsPort(containsScheme, serverName) && !requestIsOnStandardPort(request)) {\n+        if (builder.getPort() == -1 && !requestIsOnStandardPort(request)) {\n             builder.setPort(request.getServerPort());\n         }\n \n-        builder.setEncodedPath(request.getRequestURI());\n+        builder.setEncodedPath(builder.getEncodedPath() + request.getRequestURI());\n \n         final List<String> serviceParameterNames = Arrays.asList(serviceParameterName.split(\",\"));\n         if (!serviceParameterNames.isEmpty() && !originalRequestUrl.getQueryParams().isEmpty()) {\ndiff --git a/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java b/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\nindex f4c0b1a11..5e73dd109 100644\n--- a/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\n+++ b/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java\n@@ -523,6 +523,10 @@ public final class URIBuilder {\n         return this.path;\n     }\n \n+    public String getEncodedPath() {\n+        return this.encodedPath;\n+    }\n+\n     public List<BasicNameValuePair> getQueryParams() {\n         if (this.queryParams != null) {\n             return new ArrayList<BasicNameValuePair>(this.queryParams);\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 318225856, 
        "hostName": "spirals-bears", 
        "totalMemory": 389545984, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Oct 10, 2018 9:03:00 AM", 
      "projectRootPomPath": "./workspace/apereo/java-cas-client/408206584/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            1, 
            0, 
            0, 
            116
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 117
        }, 
        "testing": {
          "stepDurations": [
            16
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 16
        }, 
        "cloning": {
          "stepDurations": [
            3
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 3
        }
      }, 
      "reproductionDateBeginning": "Oct 10, 2018 8:59:53 AM", 
      "totalDuration": 181
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 5725, 
        "numberRunning": 5726, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.NullPointerException", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 0
      }, 
      "failingModule": "/root/workspace/aws/aws-encryption-sdk-java/441438164", 
      "failingClasses": [
        {
          "numberPassing": 0, 
          "numberRunning": 1, 
          "testClass": "com.amazonaws.encryptionsdk.model.DecryptionMaterialsRequestTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 0
        }
      ], 
      "failureDetails": [
        {
          "failureName": "java.lang.NullPointerException", 
          "isError": true, 
          "testClass": "com.amazonaws.encryptionsdk.model.DecryptionMaterialsRequestTest", 
          "testMethod": "build"
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/aws/aws-encryption-sdk-java/builds/441901187", 
        "date": "Oct 16, 2018 12:10:13 AM", 
        "id": 441901187
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/aws/aws-encryption-sdk-java/builds/441438164", 
        "date": "Oct 15, 2018 2:22:56 AM", 
        "id": 441438164
      }
    }, 
    "repository": {
      "name": "aws-aws-encryption-sdk-java", 
      "url": "https://github.com/aws/aws-encryption-sdk-java", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 53990057
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/aws/aws-encryption-sdk-java/commit/7cca10f14f7436b02e156abd0033cd6f88b02d4d", 
        "sha": "7cca10f14f7436b02e156abd0033cd6f88b02d4d", 
        "branchName": "master", 
        "date": "Oct 16, 2018 12:03:31 AM", 
        "repoName": "aws/aws-encryption-sdk-java"
      }, 
      "buggyBuild": {
        "url": "http://github.com/aws/aws-encryption-sdk-java/commit/aa7934a9cd1fb8c30d3c911e4ad8661ae5e3f2f5", 
        "sha": "aa7934a9cd1fb8c30d3c911e4ad8661ae5e3f2f5", 
        "branchName": "master", 
        "date": "Sep 12, 2018 12:07:58 AM", 
        "repoName": "aws/aws-encryption-sdk-java"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/aws-aws-encryption-sdk-java-441438164-441901187", 
    "version": "latest", 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "type": "passing_passing", 
    "bugId": "Bears_198", 
    "diff": "diff --git a/src/main/java/com/amazonaws/encryptionsdk/model/DecryptionMaterialsRequest.java b/src/main/java/com/amazonaws/encryptionsdk/model/DecryptionMaterialsRequest.java\nindex 5adee4874..f1ce1247c 100644\n--- a/src/main/java/com/amazonaws/encryptionsdk/model/DecryptionMaterialsRequest.java\n+++ b/src/main/java/com/amazonaws/encryptionsdk/model/DecryptionMaterialsRequest.java\n@@ -54,7 +54,7 @@ public final class DecryptionMaterialsRequest {\n \n         private Builder(DecryptionMaterialsRequest request) {\n             this.algorithm = request.getAlgorithm();\n-            this.encryptedDataKeys = request.getEncryptedDataKeys();\n+            this.encryptionContext = request.getEncryptionContext();\n             this.encryptedDataKeys = request.getEncryptedDataKeys();\n         }\n \n", 
    "projectMetrics": {
      "numberSourceFiles": 67, 
      "numberLibrariesFailingModule": 122, 
      "numberTestFiles": 45, 
      "numberModules": 1
    }, 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 298566936, 
        "hostName": "spirals-bears", 
        "totalMemory": 363855872, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Oct 16, 2018 12:26:07 AM", 
      "projectRootPomPath": "./workspace/aws/aws-encryption-sdk-java/441438164/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            35
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 35
        }, 
        "testing": {
          "stepDurations": [
            438
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 438
        }, 
        "cloning": {
          "stepDurations": [
            3
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 3
        }
      }, 
      "reproductionDateBeginning": "Oct 16, 2018 12:10:24 AM", 
      "totalDuration": 938
    }
  }, 
  {
    "tests": {
      "overallMetrics": {
        "numberPassing": 228, 
        "numberRunning": 229, 
        "numberFailing": 0, 
        "numberErroring": 1, 
        "failures": [
          {
            "failureName": "java.lang.Exception", 
            "isError": true, 
            "occurrences": 1
          }
        ], 
        "numberSkipping": 7
      }, 
      "failingModule": "/root/workspace/awslabs/amazon-kinesis-client/446289265/amazon-kinesis-client", 
      "failureDetails": [
        {
          "failureName": "java.lang.Exception", 
          "detail": "test timed out after 1000 milliseconds", 
          "isError": true, 
          "testMethod": "testNoDeadlockOnFullQueue", 
          "testClass": "software.amazon.kinesis.retrieval.polling.PrefetchRecordsPublisherTest"
        }
      ], 
      "failingClasses": [
        {
          "numberPassing": 6, 
          "numberRunning": 7, 
          "testClass": "software.amazon.kinesis.retrieval.polling.PrefetchRecordsPublisherTest", 
          "numberFailing": 0, 
          "numberErroring": 1, 
          "numberSkipping": 2
        }
      ]
    }, 
    "builds": {
      "fixerBuild": {
        "url": "http://travis-ci.org/awslabs/amazon-kinesis-client/builds/452166805", 
        "date": "Nov 8, 2018 1:45:40 AM", 
        "id": 452166805
      }, 
      "buggyBuild": {
        "url": "http://travis-ci.org/awslabs/amazon-kinesis-client/builds/446289265", 
        "date": "Oct 25, 2018 8:39:04 PM", 
        "id": 446289265
      }
    }, 
    "repository": {
      "name": "awslabs-amazon-kinesis-client", 
      "url": "https://github.com/awslabs/amazon-kinesis-client", 
      "isFork": false, 
      "pullRequestId": 0, 
      "isPullRequest": false, 
      "original": {
        "url": "", 
        "name": "", 
        "githubId": 0
      }, 
      "githubId": 14212940
    }, 
    "commits": {
      "fixerBuild": {
        "url": "http://github.com/awslabs/amazon-kinesis-client/commit/f52f2559edd2ccd86f819be45ad650dbeb246540", 
        "sha": "f52f2559edd2ccd86f819be45ad650dbeb246540", 
        "branchName": "master", 
        "date": "Nov 8, 2018 1:33:49 AM", 
        "repoName": "awslabs/amazon-kinesis-client"
      }, 
      "buggyBuild": {
        "url": "http://github.com/awslabs/amazon-kinesis-client/commit/b83a32b49257060db9d549cc46d3b410152f2715", 
        "sha": "b83a32b49257060db9d549cc46d3b410152f2715", 
        "branchName": "master", 
        "date": "Oct 25, 2018 7:40:35 PM", 
        "repoName": "awslabs/amazon-kinesis-client"
      }
    }, 
    "branchUrl": "https://github.com/bears-bugs/bears-benchmark/tree/awslabs-amazon-kinesis-client-446289265-452166805", 
    "version": "latest", 
    "projectMetrics": {
      "numberSourceFiles": 186, 
      "numberLibrariesFailingModule": 54, 
      "numberTestFiles": 68, 
      "numberModules": 2
    }, 
    "patchDiff": {
      "files": {
        "numberAdded": 0, 
        "numberChanged": 1, 
        "numberDeleted": 0
      }, 
      "lines": {
        "numberAdded": 1, 
        "numberDeleted": 1
      }
    }, 
    "bugId": "Bears_199", 
    "diff": "diff --git a/amazon-kinesis-client/src/main/java/software/amazon/kinesis/retrieval/polling/PrefetchRecordsPublisher.java b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/retrieval/polling/PrefetchRecordsPublisher.java\nindex 431b134f6..15a564dfc 100644\n--- a/amazon-kinesis-client/src/main/java/software/amazon/kinesis/retrieval/polling/PrefetchRecordsPublisher.java\n+++ b/amazon-kinesis-client/src/main/java/software/amazon/kinesis/retrieval/polling/PrefetchRecordsPublisher.java\n@@ -176,7 +176,7 @@ public class PrefetchRecordsPublisher implements RecordsPublisher {\n         });\n     }\n \n-    private synchronized void addArrivedRecordsInput(ProcessRecordsInput processRecordsInput) throws InterruptedException {\n+    private void addArrivedRecordsInput(ProcessRecordsInput processRecordsInput) throws InterruptedException {\n         getRecordsResultQueue.put(processRecordsInput);\n         prefetchCounters.added(processRecordsInput);\n     }\n", 
    "type": "passing_passing", 
    "reproductionBuggyBuild": {
      "machineInfo": {
        "freeMemory": 305571032, 
        "hostName": "spirals-bears", 
        "totalMemory": 401080320, 
        "numberCPU": 16
      }, 
      "reproductionDateEnd": "Nov 8, 2018 1:48:46 AM", 
      "projectRootPomPath": "./workspace/awslabs/amazon-kinesis-client/446289265/pom.xml", 
      "processDurations": {
        "building": {
          "stepDurations": [
            0, 
            0, 
            0, 
            0, 
            60
          ], 
          "stepNames": [
            "CheckoutPatchedBuildCandidate", 
            "ComputeSourceDir", 
            "ComputeTestDir", 
            "CheckoutBuggyBuildCandidateSourceCode", 
            "BuildProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 5, 
          "totalDuration": 60
        }, 
        "testing": {
          "stepDurations": [
            24
          ], 
          "stepNames": [
            "TestProjectBuggyBuildCandidateSourceCode"
          ], 
          "nbSteps": 1, 
          "totalDuration": 24
        }, 
        "cloning": {
          "stepDurations": [
            4
          ], 
          "stepNames": [
            "CloneRepository"
          ], 
          "nbSteps": 1, 
          "totalDuration": 4
        }
      }, 
      "reproductionDateBeginning": "Nov 8, 2018 1:46:01 AM", 
      "totalDuration": 159
    }
  }
]